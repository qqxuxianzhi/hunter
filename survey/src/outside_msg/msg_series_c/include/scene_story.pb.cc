// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene_story.proto

#include "scene_story.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace phoenix {
namespace msg {
namespace routing {
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class ControlLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlLine>
      _instance;
} _ControlLine_default_instance_;
class ConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Condition>
      _instance;
} _Condition_default_instance_;
class ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Action>
      _instance;
} _Action_default_instance_;
class CloseToSpeedBumpsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToSpeedBumps>
      _instance;
} _CloseToSpeedBumps_default_instance_;
class CloseToParkingSpacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToParkingSpaces>
      _instance;
} _CloseToParkingSpaces_default_instance_;
class CloseToCrosswalkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToCrosswalk>
      _instance;
} _CloseToCrosswalk_default_instance_;
class CloseToClearAreaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToClearArea>
      _instance;
} _CloseToClearArea_default_instance_;
class CloseToJunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToJunction>
      _instance;
} _CloseToJunction_default_instance_;
class CloseToSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToSignal>
      _instance;
} _CloseToSignal_default_instance_;
class CloseToStopSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToStopSign>
      _instance;
} _CloseToStopSign_default_instance_;
class CloseToYieldSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToYieldSign>
      _instance;
} _CloseToYieldSign_default_instance_;
class CloseToCurveRoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToCurveRoad>
      _instance;
} _CloseToCurveRoad_default_instance_;
class CloseToDestinationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseToDestination>
      _instance;
} _CloseToDestination_default_instance_;
class Scene_StoriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Scene_Stories>
      _instance;
} _Scene_Stories_default_instance_;
}  // namespace routing
}  // namespace msg
}  // namespace phoenix
namespace protobuf_scene_5fstory_2eproto {
void InitDefaultsPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phoenix::msg::routing::_Point_default_instance_;
    new (ptr) ::phoenix::msg::routing::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::Point::InitAsDefaultInstance();
}

void InitDefaultsPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointImpl);
}

void InitDefaultsControlLineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsPoint();
  {
    void* ptr = &::phoenix::msg::routing::_ControlLine_default_instance_;
    new (ptr) ::phoenix::msg::routing::ControlLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::ControlLine::InitAsDefaultInstance();
}

void InitDefaultsControlLine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControlLineImpl);
}

void InitDefaultsConditionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phoenix::msg::routing::_Condition_default_instance_;
    new (ptr) ::phoenix::msg::routing::Condition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::Condition::InitAsDefaultInstance();
}

void InitDefaultsCondition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConditionImpl);
}

void InitDefaultsActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phoenix::msg::routing::_Action_default_instance_;
    new (ptr) ::phoenix::msg::routing::Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::Action::InitAsDefaultInstance();
}

void InitDefaultsAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsActionImpl);
}

void InitDefaultsCloseToSpeedBumpsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToSpeedBumps_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToSpeedBumps();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToSpeedBumps::InitAsDefaultInstance();
}

void InitDefaultsCloseToSpeedBumps() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToSpeedBumpsImpl);
}

void InitDefaultsCloseToParkingSpacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToParkingSpaces_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToParkingSpaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToParkingSpaces::InitAsDefaultInstance();
}

void InitDefaultsCloseToParkingSpaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToParkingSpacesImpl);
}

void InitDefaultsCloseToCrosswalkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToCrosswalk_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToCrosswalk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToCrosswalk::InitAsDefaultInstance();
}

void InitDefaultsCloseToCrosswalk() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToCrosswalkImpl);
}

void InitDefaultsCloseToClearAreaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToClearArea_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToClearArea();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToClearArea::InitAsDefaultInstance();
}

void InitDefaultsCloseToClearArea() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToClearAreaImpl);
}

void InitDefaultsCloseToJunctionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToJunction_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToJunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToJunction::InitAsDefaultInstance();
}

void InitDefaultsCloseToJunction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToJunctionImpl);
}

void InitDefaultsCloseToSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToSignal_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToSignal::InitAsDefaultInstance();
}

void InitDefaultsCloseToSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToSignalImpl);
}

void InitDefaultsCloseToStopSignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToStopSign_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToStopSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToStopSign::InitAsDefaultInstance();
}

void InitDefaultsCloseToStopSign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToStopSignImpl);
}

void InitDefaultsCloseToYieldSignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToYieldSign_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToYieldSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToYieldSign::InitAsDefaultInstance();
}

void InitDefaultsCloseToYieldSign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToYieldSignImpl);
}

void InitDefaultsCloseToCurveRoadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToCurveRoad_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToCurveRoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToCurveRoad::InitAsDefaultInstance();
}

void InitDefaultsCloseToCurveRoad() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToCurveRoadImpl);
}

void InitDefaultsCloseToDestinationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  {
    void* ptr = &::phoenix::msg::routing::_CloseToDestination_default_instance_;
    new (ptr) ::phoenix::msg::routing::CloseToDestination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::CloseToDestination::InitAsDefaultInstance();
}

void InitDefaultsCloseToDestination() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseToDestinationImpl);
}

void InitDefaultsScene_StoriesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToCurveRoad();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToDestination();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToCrosswalk();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToSpeedBumps();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToParkingSpaces();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToClearArea();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToJunction();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToSignal();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToStopSign();
  protobuf_scene_5fstory_2eproto::InitDefaultsCloseToYieldSign();
  {
    void* ptr = &::phoenix::msg::routing::_Scene_Stories_default_instance_;
    new (ptr) ::phoenix::msg::routing::Scene_Stories();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::routing::Scene_Stories::InitAsDefaultInstance();
}

void InitDefaultsScene_Stories() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScene_StoriesImpl);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Point, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::ControlLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::ControlLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::ControlLine, start_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::ControlLine, end_point_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Condition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Condition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Condition, start_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Condition, end_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Condition, speed_high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Condition, speed_low_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, gear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, run_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, turn_lamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Action, brake_lamp_),
  2,
  0,
  1,
  4,
  3,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSpeedBumps, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToParkingSpaces, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCrosswalk, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToClearArea, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToJunction, action_),
  0,
  4,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToSignal, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToStopSign, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToYieldSign, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, max_curve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToCurveRoad, action_),
  5,
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, control_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::CloseToDestination, action_),
  4,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_curve_road_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_crosswalk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_speed_bumps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_parking_spaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_clear_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_junction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_stop_sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::routing::Scene_Stories, close_to_yield_sign_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::phoenix::msg::routing::Point)},
  { 9, 16, sizeof(::phoenix::msg::routing::ControlLine)},
  { 18, 27, sizeof(::phoenix::msg::routing::Condition)},
  { 31, 42, sizeof(::phoenix::msg::routing::Action)},
  { 48, 58, sizeof(::phoenix::msg::routing::CloseToSpeedBumps)},
  { 63, 73, sizeof(::phoenix::msg::routing::CloseToParkingSpaces)},
  { 78, 88, sizeof(::phoenix::msg::routing::CloseToCrosswalk)},
  { 93, 103, sizeof(::phoenix::msg::routing::CloseToClearArea)},
  { 108, 118, sizeof(::phoenix::msg::routing::CloseToJunction)},
  { 123, 133, sizeof(::phoenix::msg::routing::CloseToSignal)},
  { 138, 148, sizeof(::phoenix::msg::routing::CloseToStopSign)},
  { 153, 163, sizeof(::phoenix::msg::routing::CloseToYieldSign)},
  { 168, 179, sizeof(::phoenix::msg::routing::CloseToCurveRoad)},
  { 185, 195, sizeof(::phoenix::msg::routing::CloseToDestination)},
  { 200, 215, sizeof(::phoenix::msg::routing::Scene_Stories)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_ControlLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_Condition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToSpeedBumps_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToParkingSpaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToCrosswalk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToClearArea_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToJunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToStopSign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToYieldSign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToCurveRoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_CloseToDestination_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::routing::_Scene_Stories_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "scene_story.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021scene_story.proto\022\023phoenix.msg.routing"
      "\032\rchassis.proto\"#\n\005Point\022\014\n\001x\030\001 \001(\001:\0010\022\014"
      "\n\001y\030\002 \001(\001:\0010\"m\n\013ControlLine\022/\n\013start_poi"
      "nt\030\001 \001(\0132\032.phoenix.msg.routing.Point\022-\n\t"
      "end_point\030\002 \001(\0132\032.phoenix.msg.routing.Po"
      "int\"^\n\tCondition\022\022\n\007start_s\030\001 \001(\001:\0010\022\020\n\005"
      "end_s\030\002 \001(\001:\0010\022\025\n\nspeed_high\030\003 \001(\001:\0010\022\024\n"
      "\tspeed_low\030\004 \001(\001:\0010\"\376\001\n\006Action\0227\n\004gear\030\001"
      " \001(\0162).phoenix.msg.control.Chassis.GearP"
      "osition\022\020\n\005speed\030\002 \001(\001:\0010\022\027\n\014acceleratio"
      "n\030\003 \001(\001:\0010\022\023\n\010run_time\030\004 \001(\001:\0010\022>\n\tturn_"
      "lamp\030\005 \001(\0162+.phoenix.msg.control.Chassis"
      ".SignalTurnLamp\022;\n\nbrake_lamp\030\006 \001(\0162\'.ph"
      "oenix.msg.control.Chassis.SignalLamp\"\314\001\n"
      "\021CloseToSpeedBumps\022\n\n\002id\030\001 \001(\005\022\023\n\010distan"
      "ce\030\002 \001(\001:\0010\0226\n\014control_line\030\003 \001(\0132 .phoe"
      "nix.msg.routing.ControlLine\0221\n\tcondition"
      "\030\004 \001(\0132\036.phoenix.msg.routing.Condition\022+"
      "\n\006action\030\005 \001(\0132\033.phoenix.msg.routing.Act"
      "ion\"\317\001\n\024CloseToParkingSpaces\022\n\n\002id\030\001 \001(\005"
      "\022\023\n\010distance\030\002 \001(\001:\0010\0226\n\014control_line\030\003 "
      "\001(\0132 .phoenix.msg.routing.ControlLine\0221\n"
      "\tcondition\030\004 \001(\0132\036.phoenix.msg.routing.C"
      "ondition\022+\n\006action\030\005 \001(\0132\033.phoenix.msg.r"
      "outing.Action\"\313\001\n\020CloseToCrosswalk\022\n\n\002id"
      "\030\001 \001(\005\022\023\n\010distance\030\002 \001(\001:\0010\0226\n\014control_l"
      "ine\030\003 \001(\0132 .phoenix.msg.routing.ControlL"
      "ine\0221\n\tcondition\030\004 \001(\0132\036.phoenix.msg.rou"
      "ting.Condition\022+\n\006action\030\005 \001(\0132\033.phoenix"
      ".msg.routing.Action\"\313\001\n\020CloseToClearArea"
      "\022\n\n\002id\030\001 \001(\005\022\023\n\010distance\030\002 \001(\001:\0010\0226\n\014con"
      "trol_line\030\003 \001(\0132 .phoenix.msg.routing.Co"
      "ntrolLine\0221\n\tcondition\030\004 \001(\0132\036.phoenix.m"
      "sg.routing.Condition\022+\n\006action\030\005 \001(\0132\033.p"
      "hoenix.msg.routing.Action\"\312\001\n\017CloseToJun"
      "ction\022\n\n\002id\030\001 \001(\t\022\023\n\010distance\030\002 \001(\001:\0010\0226"
      "\n\014control_line\030\003 \001(\0132 .phoenix.msg.routi"
      "ng.ControlLine\0221\n\tcondition\030\004 \001(\0132\036.phoe"
      "nix.msg.routing.Condition\022+\n\006action\030\005 \001("
      "\0132\033.phoenix.msg.routing.Action\"\310\001\n\rClose"
      "ToSignal\022\n\n\002id\030\001 \001(\005\022\023\n\010distance\030\002 \001(\001:\001"
      "0\0226\n\014control_line\030\003 \001(\0132 .phoenix.msg.ro"
      "uting.ControlLine\0221\n\tcondition\030\004 \001(\0132\036.p"
      "hoenix.msg.routing.Condition\022+\n\006action\030\005"
      " \001(\0132\033.phoenix.msg.routing.Action\"\312\001\n\017Cl"
      "oseToStopSign\022\n\n\002id\030\001 \001(\005\022\023\n\010distance\030\002 "
      "\001(\001:\0010\0226\n\014control_line\030\003 \001(\0132 .phoenix.m"
      "sg.routing.ControlLine\0221\n\tcondition\030\004 \001("
      "\0132\036.phoenix.msg.routing.Condition\022+\n\006act"
      "ion\030\005 \001(\0132\033.phoenix.msg.routing.Action\"\313"
      "\001\n\020CloseToYieldSign\022\n\n\002id\030\001 \001(\005\022\023\n\010dista"
      "nce\030\002 \001(\001:\0010\0226\n\014control_line\030\003 \001(\0132 .pho"
      "enix.msg.routing.ControlLine\0221\n\tconditio"
      "n\030\004 \001(\0132\036.phoenix.msg.routing.Condition\022"
      "+\n\006action\030\005 \001(\0132\033.phoenix.msg.routing.Ac"
      "tion\"\341\001\n\020CloseToCurveRoad\022\n\n\002id\030\001 \001(\005\022\023\n"
      "\010distance\030\002 \001(\001:\0010\022\024\n\tmax_curve\030\003 \001(\001:\0010"
      "\0226\n\014control_line\030\004 \001(\0132 .phoenix.msg.rou"
      "ting.ControlLine\0221\n\tcondition\030\005 \001(\0132\036.ph"
      "oenix.msg.routing.Condition\022+\n\006action\030\006 "
      "\001(\0132\033.phoenix.msg.routing.Action\"\315\001\n\022Clo"
      "seToDestination\022\n\n\002id\030\001 \001(\005\022\023\n\010distance\030"
      "\002 \001(\001:\0010\0226\n\014control_line\030\003 \001(\0132 .phoenix"
      ".msg.routing.ControlLine\0221\n\tcondition\030\004 "
      "\001(\0132\036.phoenix.msg.routing.Condition\022+\n\006a"
      "ction\030\005 \001(\0132\033.phoenix.msg.routing.Action"
      "\"\267\005\n\rScene_Stories\022B\n\023close_to_curve_roa"
      "d\030\001 \003(\0132%.phoenix.msg.routing.CloseToCur"
      "veRoad\022E\n\024close_to_destination\030\002 \003(\0132\'.p"
      "hoenix.msg.routing.CloseToDestination\022A\n"
      "\022close_to_crosswalk\030\003 \003(\0132%.phoenix.msg."
      "routing.CloseToCrosswalk\022D\n\024close_to_spe"
      "ed_bumps\030\004 \003(\0132&.phoenix.msg.routing.Clo"
      "seToSpeedBumps\022J\n\027close_to_parking_space"
      "s\030\005 \003(\0132).phoenix.msg.routing.CloseToPar"
      "kingSpaces\022B\n\023close_to_clear_area\030\006 \003(\0132"
      "%.phoenix.msg.routing.CloseToClearArea\022\?"
      "\n\021close_to_junction\030\007 \003(\0132$.phoenix.msg."
      "routing.CloseToJunction\022;\n\017close_to_sign"
      "al\030\010 \003(\0132\".phoenix.msg.routing.CloseToSi"
      "gnal\022@\n\022close_to_stop_sign\030\t \003(\0132$.phoen"
      "ix.msg.routing.CloseToStopSign\022B\n\023close_"
      "to_yield_sign\030\n \003(\0132%.phoenix.msg.routin"
      "g.CloseToYieldSign"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3338);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scene_story.proto", &protobuf_RegisterTypes);
  ::protobuf_chassis_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_scene_5fstory_2eproto
namespace phoenix {
namespace msg {
namespace routing {

// ===================================================================

void Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.Point)
}

void Point::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsPoint();
  return *internal_default_instance();
}

Point* Point::New(::google::protobuf::Arena* arena) const {
  Point* n = new Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double x = 1 [default = 0];
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 2 [default = 0];
    if (has_y()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControlLine::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_ControlLine_default_instance_._instance.get_mutable()->start_point_ = const_cast< ::phoenix::msg::routing::Point*>(
      ::phoenix::msg::routing::Point::internal_default_instance());
  ::phoenix::msg::routing::_ControlLine_default_instance_._instance.get_mutable()->end_point_ = const_cast< ::phoenix::msg::routing::Point*>(
      ::phoenix::msg::routing::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlLine::kStartPointFieldNumber;
const int ControlLine::kEndPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlLine::ControlLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.ControlLine)
}
ControlLine::ControlLine(const ControlLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_point()) {
    start_point_ = new ::phoenix::msg::routing::Point(*from.start_point_);
  } else {
    start_point_ = NULL;
  }
  if (from.has_end_point()) {
    end_point_ = new ::phoenix::msg::routing::Point(*from.end_point_);
  } else {
    end_point_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.ControlLine)
}

void ControlLine::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&start_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_point_) -
      reinterpret_cast<char*>(&start_point_)) + sizeof(end_point_));
}

ControlLine::~ControlLine() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.ControlLine)
  SharedDtor();
}

void ControlLine::SharedDtor() {
  if (this != internal_default_instance()) delete start_point_;
  if (this != internal_default_instance()) delete end_point_;
}

void ControlLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlLine::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControlLine& ControlLine::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsControlLine();
  return *internal_default_instance();
}

ControlLine* ControlLine::New(::google::protobuf::Arena* arena) const {
  ControlLine* n = new ControlLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControlLine::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.ControlLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(start_point_ != NULL);
      start_point_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(end_point_ != NULL);
      end_point_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ControlLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.ControlLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .phoenix.msg.routing.Point start_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Point end_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.ControlLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.ControlLine)
  return false;
#undef DO_
}

void ControlLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.ControlLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.routing.Point start_point = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_point_, output);
  }

  // optional .phoenix.msg.routing.Point end_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_point_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.ControlLine)
}

::google::protobuf::uint8* ControlLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.ControlLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.routing.Point start_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_point_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Point end_point = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->end_point_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.ControlLine)
  return target;
}

size_t ControlLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.ControlLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .phoenix.msg.routing.Point start_point = 1;
    if (has_start_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->start_point_);
    }

    // optional .phoenix.msg.routing.Point end_point = 2;
    if (has_end_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->end_point_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.ControlLine)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.ControlLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.ControlLine)
    MergeFrom(*source);
  }
}

void ControlLine::MergeFrom(const ControlLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.ControlLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_start_point()->::phoenix::msg::routing::Point::MergeFrom(from.start_point());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_end_point()->::phoenix::msg::routing::Point::MergeFrom(from.end_point());
    }
  }
}

void ControlLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.ControlLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlLine::CopyFrom(const ControlLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.ControlLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlLine::IsInitialized() const {
  return true;
}

void ControlLine::Swap(ControlLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlLine::InternalSwap(ControlLine* other) {
  using std::swap;
  swap(start_point_, other->start_point_);
  swap(end_point_, other->end_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlLine::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Condition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Condition::kStartSFieldNumber;
const int Condition::kEndSFieldNumber;
const int Condition::kSpeedHighFieldNumber;
const int Condition::kSpeedLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Condition::Condition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.Condition)
}
Condition::Condition(const Condition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_s_, &from.start_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_low_) -
    reinterpret_cast<char*>(&start_s_)) + sizeof(speed_low_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.Condition)
}

void Condition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&start_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_low_) -
      reinterpret_cast<char*>(&start_s_)) + sizeof(speed_low_));
}

Condition::~Condition() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.Condition)
  SharedDtor();
}

void Condition::SharedDtor() {
}

void Condition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Condition::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Condition& Condition::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCondition();
  return *internal_default_instance();
}

Condition* Condition::New(::google::protobuf::Arena* arena) const {
  Condition* n = new Condition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&start_s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&speed_low_) -
        reinterpret_cast<char*>(&start_s_)) + sizeof(speed_low_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.Condition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double start_s = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_start_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_s = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_end_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double speed_high = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_speed_high();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double speed_low = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_speed_low();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.Condition)
  return false;
#undef DO_
}

void Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double start_s = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start_s(), output);
  }

  // optional double end_s = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end_s(), output);
  }

  // optional double speed_high = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->speed_high(), output);
  }

  // optional double speed_low = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->speed_low(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.Condition)
}

::google::protobuf::uint8* Condition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double start_s = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start_s(), target);
  }

  // optional double end_s = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end_s(), target);
  }

  // optional double speed_high = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->speed_high(), target);
  }

  // optional double speed_low = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->speed_low(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.Condition)
  return target;
}

size_t Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.Condition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double start_s = 1 [default = 0];
    if (has_start_s()) {
      total_size += 1 + 8;
    }

    // optional double end_s = 2 [default = 0];
    if (has_end_s()) {
      total_size += 1 + 8;
    }

    // optional double speed_high = 3 [default = 0];
    if (has_speed_high()) {
      total_size += 1 + 8;
    }

    // optional double speed_low = 4 [default = 0];
    if (has_speed_low()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Condition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  const Condition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Condition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.Condition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.Condition)
    MergeFrom(*source);
  }
}

void Condition::MergeFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      start_s_ = from.start_s_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_s_ = from.end_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      speed_high_ = from.speed_high_;
    }
    if (cached_has_bits & 0x00000008u) {
      speed_low_ = from.speed_low_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Condition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Condition::CopyFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Condition::IsInitialized() const {
  return true;
}

void Condition::Swap(Condition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Condition::InternalSwap(Condition* other) {
  using std::swap;
  swap(start_s_, other->start_s_);
  swap(end_s_, other->end_s_);
  swap(speed_high_, other->speed_high_);
  swap(speed_low_, other->speed_low_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Action::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kGearFieldNumber;
const int Action::kSpeedFieldNumber;
const int Action::kAccelerationFieldNumber;
const int Action::kRunTimeFieldNumber;
const int Action::kTurnLampFieldNumber;
const int Action::kBrakeLampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&speed_, &from.speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&brake_lamp_) -
    reinterpret_cast<char*>(&speed_)) + sizeof(brake_lamp_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.Action)
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brake_lamp_) -
      reinterpret_cast<char*>(&speed_)) + sizeof(brake_lamp_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.Action)
  SharedDtor();
}

void Action::SharedDtor() {
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Action& Action::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsAction();
  return *internal_default_instance();
}

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&speed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&brake_lamp_) -
        reinterpret_cast<char*>(&speed_)) + sizeof(brake_lamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .phoenix.msg.control.Chassis.GearPosition gear = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::phoenix::msg::control::Chassis_GearPosition_IsValid(value)) {
            set_gear(static_cast< ::phoenix::msg::control::Chassis_GearPosition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double speed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double acceleration = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_acceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double run_time = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_run_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &run_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.control.Chassis.SignalTurnLamp turn_lamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::phoenix::msg::control::Chassis_SignalTurnLamp_IsValid(value)) {
            set_turn_lamp(static_cast< ::phoenix::msg::control::Chassis_SignalTurnLamp >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.control.Chassis.SignalLamp brake_lamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::phoenix::msg::control::Chassis_SignalLamp_IsValid(value)) {
            set_brake_lamp(static_cast< ::phoenix::msg::control::Chassis_SignalLamp >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.control.Chassis.GearPosition gear = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gear(), output);
  }

  // optional double speed = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->speed(), output);
  }

  // optional double acceleration = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->acceleration(), output);
  }

  // optional double run_time = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->run_time(), output);
  }

  // optional .phoenix.msg.control.Chassis.SignalTurnLamp turn_lamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->turn_lamp(), output);
  }

  // optional .phoenix.msg.control.Chassis.SignalLamp brake_lamp = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->brake_lamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.control.Chassis.GearPosition gear = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gear(), target);
  }

  // optional double speed = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->speed(), target);
  }

  // optional double acceleration = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->acceleration(), target);
  }

  // optional double run_time = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->run_time(), target);
  }

  // optional .phoenix.msg.control.Chassis.SignalTurnLamp turn_lamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->turn_lamp(), target);
  }

  // optional .phoenix.msg.control.Chassis.SignalLamp brake_lamp = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->brake_lamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional double speed = 2 [default = 0];
    if (has_speed()) {
      total_size += 1 + 8;
    }

    // optional double acceleration = 3 [default = 0];
    if (has_acceleration()) {
      total_size += 1 + 8;
    }

    // optional .phoenix.msg.control.Chassis.GearPosition gear = 1;
    if (has_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gear());
    }

    // optional .phoenix.msg.control.Chassis.SignalTurnLamp turn_lamp = 5;
    if (has_turn_lamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->turn_lamp());
    }

    // optional double run_time = 4 [default = 0];
    if (has_run_time()) {
      total_size += 1 + 8;
    }

    // optional .phoenix.msg.control.Chassis.SignalLamp brake_lamp = 6;
    if (has_brake_lamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brake_lamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      speed_ = from.speed_;
    }
    if (cached_has_bits & 0x00000002u) {
      acceleration_ = from.acceleration_;
    }
    if (cached_has_bits & 0x00000004u) {
      gear_ = from.gear_;
    }
    if (cached_has_bits & 0x00000008u) {
      turn_lamp_ = from.turn_lamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      run_time_ = from.run_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      brake_lamp_ = from.brake_lamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  using std::swap;
  swap(speed_, other->speed_);
  swap(acceleration_, other->acceleration_);
  swap(gear_, other->gear_);
  swap(turn_lamp_, other->turn_lamp_);
  swap(run_time_, other->run_time_);
  swap(brake_lamp_, other->brake_lamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToSpeedBumps::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToSpeedBumps_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToSpeedBumps_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToSpeedBumps_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToSpeedBumps::kIdFieldNumber;
const int CloseToSpeedBumps::kDistanceFieldNumber;
const int CloseToSpeedBumps::kControlLineFieldNumber;
const int CloseToSpeedBumps::kConditionFieldNumber;
const int CloseToSpeedBumps::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToSpeedBumps::CloseToSpeedBumps()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToSpeedBumps();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToSpeedBumps)
}
CloseToSpeedBumps::CloseToSpeedBumps(const CloseToSpeedBumps& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToSpeedBumps)
}

void CloseToSpeedBumps::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToSpeedBumps::~CloseToSpeedBumps() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToSpeedBumps)
  SharedDtor();
}

void CloseToSpeedBumps::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToSpeedBumps::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToSpeedBumps::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToSpeedBumps& CloseToSpeedBumps::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToSpeedBumps();
  return *internal_default_instance();
}

CloseToSpeedBumps* CloseToSpeedBumps::New(::google::protobuf::Arena* arena) const {
  CloseToSpeedBumps* n = new CloseToSpeedBumps;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToSpeedBumps::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToSpeedBumps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToSpeedBumps::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToSpeedBumps)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToSpeedBumps)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToSpeedBumps)
  return false;
#undef DO_
}

void CloseToSpeedBumps::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToSpeedBumps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToSpeedBumps)
}

::google::protobuf::uint8* CloseToSpeedBumps::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToSpeedBumps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToSpeedBumps)
  return target;
}

size_t CloseToSpeedBumps::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToSpeedBumps)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToSpeedBumps::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToSpeedBumps)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToSpeedBumps* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToSpeedBumps>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToSpeedBumps)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToSpeedBumps)
    MergeFrom(*source);
  }
}

void CloseToSpeedBumps::MergeFrom(const CloseToSpeedBumps& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToSpeedBumps)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToSpeedBumps::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToSpeedBumps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToSpeedBumps::CopyFrom(const CloseToSpeedBumps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToSpeedBumps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToSpeedBumps::IsInitialized() const {
  return true;
}

void CloseToSpeedBumps::Swap(CloseToSpeedBumps* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToSpeedBumps::InternalSwap(CloseToSpeedBumps* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToSpeedBumps::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToParkingSpaces::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToParkingSpaces_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToParkingSpaces_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToParkingSpaces_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToParkingSpaces::kIdFieldNumber;
const int CloseToParkingSpaces::kDistanceFieldNumber;
const int CloseToParkingSpaces::kControlLineFieldNumber;
const int CloseToParkingSpaces::kConditionFieldNumber;
const int CloseToParkingSpaces::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToParkingSpaces::CloseToParkingSpaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToParkingSpaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToParkingSpaces)
}
CloseToParkingSpaces::CloseToParkingSpaces(const CloseToParkingSpaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToParkingSpaces)
}

void CloseToParkingSpaces::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToParkingSpaces::~CloseToParkingSpaces() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToParkingSpaces)
  SharedDtor();
}

void CloseToParkingSpaces::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToParkingSpaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToParkingSpaces::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToParkingSpaces& CloseToParkingSpaces::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToParkingSpaces();
  return *internal_default_instance();
}

CloseToParkingSpaces* CloseToParkingSpaces::New(::google::protobuf::Arena* arena) const {
  CloseToParkingSpaces* n = new CloseToParkingSpaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToParkingSpaces::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToParkingSpaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToParkingSpaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToParkingSpaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToParkingSpaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToParkingSpaces)
  return false;
#undef DO_
}

void CloseToParkingSpaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToParkingSpaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToParkingSpaces)
}

::google::protobuf::uint8* CloseToParkingSpaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToParkingSpaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToParkingSpaces)
  return target;
}

size_t CloseToParkingSpaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToParkingSpaces)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToParkingSpaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToParkingSpaces)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToParkingSpaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToParkingSpaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToParkingSpaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToParkingSpaces)
    MergeFrom(*source);
  }
}

void CloseToParkingSpaces::MergeFrom(const CloseToParkingSpaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToParkingSpaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToParkingSpaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToParkingSpaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToParkingSpaces::CopyFrom(const CloseToParkingSpaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToParkingSpaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToParkingSpaces::IsInitialized() const {
  return true;
}

void CloseToParkingSpaces::Swap(CloseToParkingSpaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToParkingSpaces::InternalSwap(CloseToParkingSpaces* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToParkingSpaces::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToCrosswalk::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToCrosswalk_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToCrosswalk_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToCrosswalk_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToCrosswalk::kIdFieldNumber;
const int CloseToCrosswalk::kDistanceFieldNumber;
const int CloseToCrosswalk::kControlLineFieldNumber;
const int CloseToCrosswalk::kConditionFieldNumber;
const int CloseToCrosswalk::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToCrosswalk::CloseToCrosswalk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToCrosswalk();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToCrosswalk)
}
CloseToCrosswalk::CloseToCrosswalk(const CloseToCrosswalk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToCrosswalk)
}

void CloseToCrosswalk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToCrosswalk::~CloseToCrosswalk() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToCrosswalk)
  SharedDtor();
}

void CloseToCrosswalk::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToCrosswalk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToCrosswalk::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToCrosswalk& CloseToCrosswalk::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToCrosswalk();
  return *internal_default_instance();
}

CloseToCrosswalk* CloseToCrosswalk::New(::google::protobuf::Arena* arena) const {
  CloseToCrosswalk* n = new CloseToCrosswalk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToCrosswalk::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToCrosswalk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToCrosswalk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToCrosswalk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToCrosswalk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToCrosswalk)
  return false;
#undef DO_
}

void CloseToCrosswalk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToCrosswalk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToCrosswalk)
}

::google::protobuf::uint8* CloseToCrosswalk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToCrosswalk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToCrosswalk)
  return target;
}

size_t CloseToCrosswalk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToCrosswalk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToCrosswalk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToCrosswalk)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToCrosswalk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToCrosswalk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToCrosswalk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToCrosswalk)
    MergeFrom(*source);
  }
}

void CloseToCrosswalk::MergeFrom(const CloseToCrosswalk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToCrosswalk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToCrosswalk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToCrosswalk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToCrosswalk::CopyFrom(const CloseToCrosswalk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToCrosswalk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToCrosswalk::IsInitialized() const {
  return true;
}

void CloseToCrosswalk::Swap(CloseToCrosswalk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToCrosswalk::InternalSwap(CloseToCrosswalk* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToCrosswalk::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToClearArea::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToClearArea_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToClearArea_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToClearArea_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToClearArea::kIdFieldNumber;
const int CloseToClearArea::kDistanceFieldNumber;
const int CloseToClearArea::kControlLineFieldNumber;
const int CloseToClearArea::kConditionFieldNumber;
const int CloseToClearArea::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToClearArea::CloseToClearArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToClearArea();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToClearArea)
}
CloseToClearArea::CloseToClearArea(const CloseToClearArea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToClearArea)
}

void CloseToClearArea::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToClearArea::~CloseToClearArea() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToClearArea)
  SharedDtor();
}

void CloseToClearArea::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToClearArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToClearArea::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToClearArea& CloseToClearArea::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToClearArea();
  return *internal_default_instance();
}

CloseToClearArea* CloseToClearArea::New(::google::protobuf::Arena* arena) const {
  CloseToClearArea* n = new CloseToClearArea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToClearArea::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToClearArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToClearArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToClearArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToClearArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToClearArea)
  return false;
#undef DO_
}

void CloseToClearArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToClearArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToClearArea)
}

::google::protobuf::uint8* CloseToClearArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToClearArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToClearArea)
  return target;
}

size_t CloseToClearArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToClearArea)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToClearArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToClearArea)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToClearArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToClearArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToClearArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToClearArea)
    MergeFrom(*source);
  }
}

void CloseToClearArea::MergeFrom(const CloseToClearArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToClearArea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToClearArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToClearArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToClearArea::CopyFrom(const CloseToClearArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToClearArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToClearArea::IsInitialized() const {
  return true;
}

void CloseToClearArea::Swap(CloseToClearArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToClearArea::InternalSwap(CloseToClearArea* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToClearArea::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToJunction::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToJunction_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToJunction_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToJunction_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToJunction::kIdFieldNumber;
const int CloseToJunction::kDistanceFieldNumber;
const int CloseToJunction::kControlLineFieldNumber;
const int CloseToJunction::kConditionFieldNumber;
const int CloseToJunction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToJunction::CloseToJunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToJunction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToJunction)
}
CloseToJunction::CloseToJunction(const CloseToJunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  distance_ = from.distance_;
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToJunction)
}

void CloseToJunction::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(distance_));
}

CloseToJunction::~CloseToJunction() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToJunction)
  SharedDtor();
}

void CloseToJunction::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToJunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToJunction::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToJunction& CloseToJunction::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToJunction();
  return *internal_default_instance();
}

CloseToJunction* CloseToJunction::New(::google::protobuf::Arena* arena) const {
  CloseToJunction* n = new CloseToJunction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToJunction::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToJunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  distance_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToJunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToJunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "phoenix.msg.routing.CloseToJunction.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToJunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToJunction)
  return false;
#undef DO_
}

void CloseToJunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToJunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phoenix.msg.routing.CloseToJunction.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToJunction)
}

::google::protobuf::uint8* CloseToJunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToJunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phoenix.msg.routing.CloseToJunction.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToJunction)
  return target;
}

size_t CloseToJunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToJunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToJunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToJunction)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToJunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToJunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToJunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToJunction)
    MergeFrom(*source);
  }
}

void CloseToJunction::MergeFrom(const CloseToJunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToJunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000010u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToJunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToJunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToJunction::CopyFrom(const CloseToJunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToJunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToJunction::IsInitialized() const {
  return true;
}

void CloseToJunction::Swap(CloseToJunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToJunction::InternalSwap(CloseToJunction* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToJunction::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToSignal::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToSignal_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToSignal_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToSignal_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToSignal::kIdFieldNumber;
const int CloseToSignal::kDistanceFieldNumber;
const int CloseToSignal::kControlLineFieldNumber;
const int CloseToSignal::kConditionFieldNumber;
const int CloseToSignal::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToSignal::CloseToSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToSignal)
}
CloseToSignal::CloseToSignal(const CloseToSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToSignal)
}

void CloseToSignal::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToSignal::~CloseToSignal() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToSignal)
  SharedDtor();
}

void CloseToSignal::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToSignal::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToSignal& CloseToSignal::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToSignal();
  return *internal_default_instance();
}

CloseToSignal* CloseToSignal::New(::google::protobuf::Arena* arena) const {
  CloseToSignal* n = new CloseToSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToSignal)
  return false;
#undef DO_
}

void CloseToSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToSignal)
}

::google::protobuf::uint8* CloseToSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToSignal)
  return target;
}

size_t CloseToSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToSignal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToSignal)
    MergeFrom(*source);
  }
}

void CloseToSignal::MergeFrom(const CloseToSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToSignal::CopyFrom(const CloseToSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToSignal::IsInitialized() const {
  return true;
}

void CloseToSignal::Swap(CloseToSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToSignal::InternalSwap(CloseToSignal* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToSignal::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToStopSign::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToStopSign_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToStopSign_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToStopSign_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToStopSign::kIdFieldNumber;
const int CloseToStopSign::kDistanceFieldNumber;
const int CloseToStopSign::kControlLineFieldNumber;
const int CloseToStopSign::kConditionFieldNumber;
const int CloseToStopSign::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToStopSign::CloseToStopSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToStopSign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToStopSign)
}
CloseToStopSign::CloseToStopSign(const CloseToStopSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToStopSign)
}

void CloseToStopSign::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToStopSign::~CloseToStopSign() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToStopSign)
  SharedDtor();
}

void CloseToStopSign::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToStopSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToStopSign::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToStopSign& CloseToStopSign::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToStopSign();
  return *internal_default_instance();
}

CloseToStopSign* CloseToStopSign::New(::google::protobuf::Arena* arena) const {
  CloseToStopSign* n = new CloseToStopSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToStopSign::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToStopSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToStopSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToStopSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToStopSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToStopSign)
  return false;
#undef DO_
}

void CloseToStopSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToStopSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToStopSign)
}

::google::protobuf::uint8* CloseToStopSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToStopSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToStopSign)
  return target;
}

size_t CloseToStopSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToStopSign)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToStopSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToStopSign)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToStopSign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToStopSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToStopSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToStopSign)
    MergeFrom(*source);
  }
}

void CloseToStopSign::MergeFrom(const CloseToStopSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToStopSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToStopSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToStopSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToStopSign::CopyFrom(const CloseToStopSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToStopSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToStopSign::IsInitialized() const {
  return true;
}

void CloseToStopSign::Swap(CloseToStopSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToStopSign::InternalSwap(CloseToStopSign* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToStopSign::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToYieldSign::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToYieldSign_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToYieldSign_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToYieldSign_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToYieldSign::kIdFieldNumber;
const int CloseToYieldSign::kDistanceFieldNumber;
const int CloseToYieldSign::kControlLineFieldNumber;
const int CloseToYieldSign::kConditionFieldNumber;
const int CloseToYieldSign::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToYieldSign::CloseToYieldSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToYieldSign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToYieldSign)
}
CloseToYieldSign::CloseToYieldSign(const CloseToYieldSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToYieldSign)
}

void CloseToYieldSign::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToYieldSign::~CloseToYieldSign() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToYieldSign)
  SharedDtor();
}

void CloseToYieldSign::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToYieldSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToYieldSign::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToYieldSign& CloseToYieldSign::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToYieldSign();
  return *internal_default_instance();
}

CloseToYieldSign* CloseToYieldSign::New(::google::protobuf::Arena* arena) const {
  CloseToYieldSign* n = new CloseToYieldSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToYieldSign::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToYieldSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToYieldSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToYieldSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToYieldSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToYieldSign)
  return false;
#undef DO_
}

void CloseToYieldSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToYieldSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToYieldSign)
}

::google::protobuf::uint8* CloseToYieldSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToYieldSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToYieldSign)
  return target;
}

size_t CloseToYieldSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToYieldSign)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToYieldSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToYieldSign)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToYieldSign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToYieldSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToYieldSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToYieldSign)
    MergeFrom(*source);
  }
}

void CloseToYieldSign::MergeFrom(const CloseToYieldSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToYieldSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToYieldSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToYieldSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToYieldSign::CopyFrom(const CloseToYieldSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToYieldSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToYieldSign::IsInitialized() const {
  return true;
}

void CloseToYieldSign::Swap(CloseToYieldSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToYieldSign::InternalSwap(CloseToYieldSign* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToYieldSign::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToCurveRoad::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToCurveRoad_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToCurveRoad_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToCurveRoad_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToCurveRoad::kIdFieldNumber;
const int CloseToCurveRoad::kDistanceFieldNumber;
const int CloseToCurveRoad::kMaxCurveFieldNumber;
const int CloseToCurveRoad::kControlLineFieldNumber;
const int CloseToCurveRoad::kConditionFieldNumber;
const int CloseToCurveRoad::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToCurveRoad::CloseToCurveRoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToCurveRoad();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToCurveRoad)
}
CloseToCurveRoad::CloseToCurveRoad(const CloseToCurveRoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToCurveRoad)
}

void CloseToCurveRoad::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToCurveRoad::~CloseToCurveRoad() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToCurveRoad)
  SharedDtor();
}

void CloseToCurveRoad::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToCurveRoad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToCurveRoad::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToCurveRoad& CloseToCurveRoad::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToCurveRoad();
  return *internal_default_instance();
}

CloseToCurveRoad* CloseToCurveRoad::New(::google::protobuf::Arena* arena) const {
  CloseToCurveRoad* n = new CloseToCurveRoad;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToCurveRoad::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToCurveRoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToCurveRoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToCurveRoad)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_curve = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_max_curve();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_curve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToCurveRoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToCurveRoad)
  return false;
#undef DO_
}

void CloseToCurveRoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToCurveRoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional double max_curve = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->max_curve(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToCurveRoad)
}

::google::protobuf::uint8* CloseToCurveRoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToCurveRoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional double max_curve = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->max_curve(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToCurveRoad)
  return target;
}

size_t CloseToCurveRoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToCurveRoad)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 4;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 5;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 6;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional double max_curve = 3 [default = 0];
    if (has_max_curve()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToCurveRoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToCurveRoad)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToCurveRoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToCurveRoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToCurveRoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToCurveRoad)
    MergeFrom(*source);
  }
}

void CloseToCurveRoad::MergeFrom(const CloseToCurveRoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToCurveRoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_curve_ = from.max_curve_;
    }
    if (cached_has_bits & 0x00000020u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToCurveRoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToCurveRoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToCurveRoad::CopyFrom(const CloseToCurveRoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToCurveRoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToCurveRoad::IsInitialized() const {
  return true;
}

void CloseToCurveRoad::Swap(CloseToCurveRoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToCurveRoad::InternalSwap(CloseToCurveRoad* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(max_curve_, other->max_curve_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToCurveRoad::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseToDestination::InitAsDefaultInstance() {
  ::phoenix::msg::routing::_CloseToDestination_default_instance_._instance.get_mutable()->control_line_ = const_cast< ::phoenix::msg::routing::ControlLine*>(
      ::phoenix::msg::routing::ControlLine::internal_default_instance());
  ::phoenix::msg::routing::_CloseToDestination_default_instance_._instance.get_mutable()->condition_ = const_cast< ::phoenix::msg::routing::Condition*>(
      ::phoenix::msg::routing::Condition::internal_default_instance());
  ::phoenix::msg::routing::_CloseToDestination_default_instance_._instance.get_mutable()->action_ = const_cast< ::phoenix::msg::routing::Action*>(
      ::phoenix::msg::routing::Action::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseToDestination::kIdFieldNumber;
const int CloseToDestination::kDistanceFieldNumber;
const int CloseToDestination::kControlLineFieldNumber;
const int CloseToDestination::kConditionFieldNumber;
const int CloseToDestination::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseToDestination::CloseToDestination()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToDestination();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.CloseToDestination)
}
CloseToDestination::CloseToDestination(const CloseToDestination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_line()) {
    control_line_ = new ::phoenix::msg::routing::ControlLine(*from.control_line_);
  } else {
    control_line_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::phoenix::msg::routing::Condition(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::phoenix::msg::routing::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.CloseToDestination)
}

void CloseToDestination::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&control_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&control_line_)) + sizeof(id_));
}

CloseToDestination::~CloseToDestination() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.CloseToDestination)
  SharedDtor();
}

void CloseToDestination::SharedDtor() {
  if (this != internal_default_instance()) delete control_line_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete action_;
}

void CloseToDestination::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseToDestination::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseToDestination& CloseToDestination::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsCloseToDestination();
  return *internal_default_instance();
}

CloseToDestination* CloseToDestination::New(::google::protobuf::Arena* arena) const {
  CloseToDestination* n = new CloseToDestination;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseToDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.CloseToDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(control_line_ != NULL);
      control_line_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(condition_ != NULL);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_ != NULL);
      action_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseToDestination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.CloseToDestination)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double distance = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.ControlLine control_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Condition condition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.routing.Action action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.CloseToDestination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.CloseToDestination)
  return false;
#undef DO_
}

void CloseToDestination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.CloseToDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->control_line_, output);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->condition_, output);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.CloseToDestination)
}

::google::protobuf::uint8* CloseToDestination::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.CloseToDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional double distance = 2 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // optional .phoenix.msg.routing.ControlLine control_line = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->control_line_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Condition condition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->condition_, deterministic, target);
  }

  // optional .phoenix.msg.routing.Action action = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->action_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.CloseToDestination)
  return target;
}

size_t CloseToDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.CloseToDestination)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .phoenix.msg.routing.ControlLine control_line = 3;
    if (has_control_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->control_line_);
    }

    // optional .phoenix.msg.routing.Condition condition = 4;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->condition_);
    }

    // optional .phoenix.msg.routing.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->action_);
    }

    // optional double distance = 2 [default = 0];
    if (has_distance()) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseToDestination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.CloseToDestination)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseToDestination* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseToDestination>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.CloseToDestination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.CloseToDestination)
    MergeFrom(*source);
  }
}

void CloseToDestination::MergeFrom(const CloseToDestination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.CloseToDestination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_control_line()->::phoenix::msg::routing::ControlLine::MergeFrom(from.control_line());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_condition()->::phoenix::msg::routing::Condition::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action()->::phoenix::msg::routing::Action::MergeFrom(from.action());
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CloseToDestination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.CloseToDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseToDestination::CopyFrom(const CloseToDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.CloseToDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseToDestination::IsInitialized() const {
  return true;
}

void CloseToDestination::Swap(CloseToDestination* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseToDestination::InternalSwap(CloseToDestination* other) {
  using std::swap;
  swap(control_line_, other->control_line_);
  swap(condition_, other->condition_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseToDestination::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Scene_Stories::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scene_Stories::kCloseToCurveRoadFieldNumber;
const int Scene_Stories::kCloseToDestinationFieldNumber;
const int Scene_Stories::kCloseToCrosswalkFieldNumber;
const int Scene_Stories::kCloseToSpeedBumpsFieldNumber;
const int Scene_Stories::kCloseToParkingSpacesFieldNumber;
const int Scene_Stories::kCloseToClearAreaFieldNumber;
const int Scene_Stories::kCloseToJunctionFieldNumber;
const int Scene_Stories::kCloseToSignalFieldNumber;
const int Scene_Stories::kCloseToStopSignFieldNumber;
const int Scene_Stories::kCloseToYieldSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scene_Stories::Scene_Stories()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_5fstory_2eproto::InitDefaultsScene_Stories();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.routing.Scene_Stories)
}
Scene_Stories::Scene_Stories(const Scene_Stories& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      close_to_curve_road_(from.close_to_curve_road_),
      close_to_destination_(from.close_to_destination_),
      close_to_crosswalk_(from.close_to_crosswalk_),
      close_to_speed_bumps_(from.close_to_speed_bumps_),
      close_to_parking_spaces_(from.close_to_parking_spaces_),
      close_to_clear_area_(from.close_to_clear_area_),
      close_to_junction_(from.close_to_junction_),
      close_to_signal_(from.close_to_signal_),
      close_to_stop_sign_(from.close_to_stop_sign_),
      close_to_yield_sign_(from.close_to_yield_sign_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.routing.Scene_Stories)
}

void Scene_Stories::SharedCtor() {
  _cached_size_ = 0;
}

Scene_Stories::~Scene_Stories() {
  // @@protoc_insertion_point(destructor:phoenix.msg.routing.Scene_Stories)
  SharedDtor();
}

void Scene_Stories::SharedDtor() {
}

void Scene_Stories::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Scene_Stories::descriptor() {
  ::protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Scene_Stories& Scene_Stories::default_instance() {
  ::protobuf_scene_5fstory_2eproto::InitDefaultsScene_Stories();
  return *internal_default_instance();
}

Scene_Stories* Scene_Stories::New(::google::protobuf::Arena* arena) const {
  Scene_Stories* n = new Scene_Stories;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Scene_Stories::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.routing.Scene_Stories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  close_to_curve_road_.Clear();
  close_to_destination_.Clear();
  close_to_crosswalk_.Clear();
  close_to_speed_bumps_.Clear();
  close_to_parking_spaces_.Clear();
  close_to_clear_area_.Clear();
  close_to_junction_.Clear();
  close_to_signal_.Clear();
  close_to_stop_sign_.Clear();
  close_to_yield_sign_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Scene_Stories::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.routing.Scene_Stories)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .phoenix.msg.routing.CloseToCurveRoad close_to_curve_road = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_curve_road()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToDestination close_to_destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToCrosswalk close_to_crosswalk = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_crosswalk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToSpeedBumps close_to_speed_bumps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_speed_bumps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToParkingSpaces close_to_parking_spaces = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_parking_spaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToClearArea close_to_clear_area = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_clear_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToJunction close_to_junction = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_junction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToSignal close_to_signal = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToStopSign close_to_stop_sign = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_stop_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phoenix.msg.routing.CloseToYieldSign close_to_yield_sign = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_close_to_yield_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.routing.Scene_Stories)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.routing.Scene_Stories)
  return false;
#undef DO_
}

void Scene_Stories::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.routing.Scene_Stories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .phoenix.msg.routing.CloseToCurveRoad close_to_curve_road = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_curve_road_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->close_to_curve_road(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToDestination close_to_destination = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_destination_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->close_to_destination(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToCrosswalk close_to_crosswalk = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_crosswalk_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->close_to_crosswalk(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToSpeedBumps close_to_speed_bumps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_speed_bumps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->close_to_speed_bumps(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToParkingSpaces close_to_parking_spaces = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_parking_spaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->close_to_parking_spaces(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToClearArea close_to_clear_area = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_clear_area_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->close_to_clear_area(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToJunction close_to_junction = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_junction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->close_to_junction(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToSignal close_to_signal = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_signal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->close_to_signal(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToStopSign close_to_stop_sign = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_stop_sign_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->close_to_stop_sign(static_cast<int>(i)), output);
  }

  // repeated .phoenix.msg.routing.CloseToYieldSign close_to_yield_sign = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_yield_sign_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->close_to_yield_sign(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.routing.Scene_Stories)
}

::google::protobuf::uint8* Scene_Stories::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.routing.Scene_Stories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .phoenix.msg.routing.CloseToCurveRoad close_to_curve_road = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_curve_road_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->close_to_curve_road(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToDestination close_to_destination = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_destination_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->close_to_destination(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToCrosswalk close_to_crosswalk = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_crosswalk_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->close_to_crosswalk(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToSpeedBumps close_to_speed_bumps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_speed_bumps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->close_to_speed_bumps(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToParkingSpaces close_to_parking_spaces = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_parking_spaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->close_to_parking_spaces(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToClearArea close_to_clear_area = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_clear_area_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->close_to_clear_area(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToJunction close_to_junction = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_junction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->close_to_junction(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToSignal close_to_signal = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_signal_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->close_to_signal(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToStopSign close_to_stop_sign = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_stop_sign_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->close_to_stop_sign(static_cast<int>(i)), deterministic, target);
  }

  // repeated .phoenix.msg.routing.CloseToYieldSign close_to_yield_sign = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_to_yield_sign_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->close_to_yield_sign(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.routing.Scene_Stories)
  return target;
}

size_t Scene_Stories::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.routing.Scene_Stories)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .phoenix.msg.routing.CloseToCurveRoad close_to_curve_road = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_curve_road_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_curve_road(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToDestination close_to_destination = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_destination_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_destination(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToCrosswalk close_to_crosswalk = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_crosswalk_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_crosswalk(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToSpeedBumps close_to_speed_bumps = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_speed_bumps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_speed_bumps(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToParkingSpaces close_to_parking_spaces = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_parking_spaces_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_parking_spaces(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToClearArea close_to_clear_area = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_clear_area_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_clear_area(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToJunction close_to_junction = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_junction_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_junction(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToSignal close_to_signal = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_signal_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_signal(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToStopSign close_to_stop_sign = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_stop_sign_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_stop_sign(static_cast<int>(i)));
    }
  }

  // repeated .phoenix.msg.routing.CloseToYieldSign close_to_yield_sign = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->close_to_yield_sign_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->close_to_yield_sign(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Scene_Stories::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.routing.Scene_Stories)
  GOOGLE_DCHECK_NE(&from, this);
  const Scene_Stories* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Scene_Stories>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.routing.Scene_Stories)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.routing.Scene_Stories)
    MergeFrom(*source);
  }
}

void Scene_Stories::MergeFrom(const Scene_Stories& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.routing.Scene_Stories)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  close_to_curve_road_.MergeFrom(from.close_to_curve_road_);
  close_to_destination_.MergeFrom(from.close_to_destination_);
  close_to_crosswalk_.MergeFrom(from.close_to_crosswalk_);
  close_to_speed_bumps_.MergeFrom(from.close_to_speed_bumps_);
  close_to_parking_spaces_.MergeFrom(from.close_to_parking_spaces_);
  close_to_clear_area_.MergeFrom(from.close_to_clear_area_);
  close_to_junction_.MergeFrom(from.close_to_junction_);
  close_to_signal_.MergeFrom(from.close_to_signal_);
  close_to_stop_sign_.MergeFrom(from.close_to_stop_sign_);
  close_to_yield_sign_.MergeFrom(from.close_to_yield_sign_);
}

void Scene_Stories::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.routing.Scene_Stories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scene_Stories::CopyFrom(const Scene_Stories& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.routing.Scene_Stories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_Stories::IsInitialized() const {
  return true;
}

void Scene_Stories::Swap(Scene_Stories* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scene_Stories::InternalSwap(Scene_Stories* other) {
  using std::swap;
  close_to_curve_road_.InternalSwap(&other->close_to_curve_road_);
  close_to_destination_.InternalSwap(&other->close_to_destination_);
  close_to_crosswalk_.InternalSwap(&other->close_to_crosswalk_);
  close_to_speed_bumps_.InternalSwap(&other->close_to_speed_bumps_);
  close_to_parking_spaces_.InternalSwap(&other->close_to_parking_spaces_);
  close_to_clear_area_.InternalSwap(&other->close_to_clear_area_);
  close_to_junction_.InternalSwap(&other->close_to_junction_);
  close_to_signal_.InternalSwap(&other->close_to_signal_);
  close_to_stop_sign_.InternalSwap(&other->close_to_stop_sign_);
  close_to_yield_sign_.InternalSwap(&other->close_to_yield_sign_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Scene_Stories::GetMetadata() const {
  protobuf_scene_5fstory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_5fstory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace routing
}  // namespace msg
}  // namespace phoenix

// @@protoc_insertion_point(global_scope)
