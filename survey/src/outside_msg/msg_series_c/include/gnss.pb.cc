// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gnss.proto

#include "gnss.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace phoenix {
namespace msg {
namespace localization {
class GnssDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gnss>
      _instance;
} _Gnss_default_instance_;
}  // namespace localization
}  // namespace msg
}  // namespace phoenix
namespace protobuf_gnss_2eproto {
void InitDefaultsGnssImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_header_2eproto::InitDefaultsHeader();
  {
    void* ptr = &::phoenix::msg::localization::_Gnss_default_instance_;
    new (ptr) ::phoenix::msg::localization::Gnss();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::localization::Gnss::InitAsDefaultInstance();
}

void InitDefaultsGnss() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGnssImpl);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, heading_gnss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, x_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, y_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, z_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, heading_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, x_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, y_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, z_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, heading_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_u_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_x_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_y_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_z_utm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_x_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_y_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, v_z_odom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, gnss_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, utm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::localization::Gnss, odom_status_),
  0,
  1,
  2,
  3,
  6,
  4,
  5,
  8,
  7,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 32, sizeof(::phoenix::msg::localization::Gnss)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::localization::_Gnss_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gnss.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ngnss.proto\022\030phoenix.msg.localization\032\014"
      "header.proto\"\262\006\n\004Gnss\022*\n\006header\030\001 \001(\0132\032."
      "phoenix.msg.common.Header\022\023\n\010latitude\030\002 "
      "\001(\001:\0010\022\024\n\tlongitude\030\003 \001(\001:\0010\022\023\n\010altitude"
      "\030\004 \001(\001:\0010\022\027\n\014heading_gnss\030\005 \001(\002:\0010\022\020\n\005x_"
      "utm\030\006 \001(\001:\0010\022\020\n\005y_utm\030\007 \001(\001:\0010\022\020\n\005z_utm\030"
      "\010 \001(\001:\0010\022\026\n\013heading_utm\030\t \001(\002:\0010\022\021\n\006x_od"
      "om\030\n \001(\001:\0010\022\021\n\006y_odom\030\013 \001(\001:\0010\022\021\n\006z_odom"
      "\030\014 \001(\001:\0010\022\027\n\014heading_odom\030\r \001(\002:\0010\022\020\n\005pi"
      "tch\030\016 \001(\002:\0010\022\017\n\004roll\030\017 \001(\002:\0010\022\016\n\003v_e\030\020 \001"
      "(\002:\0010\022\016\n\003v_n\030\021 \001(\002:\0010\022\016\n\003v_u\030\022 \001(\002:\0010\022\022\n"
      "\007v_x_utm\030\023 \001(\002:\0010\022\022\n\007v_y_utm\030\024 \001(\002:\0010\022\022\n"
      "\007v_z_utm\030\025 \001(\002:\0010\022\023\n\010v_x_odom\030\026 \001(\002:\0010\022\023"
      "\n\010v_y_odom\030\027 \001(\002:\0010\022\023\n\010v_z_odom\030\030 \001(\002:\0010"
      "\022J\n\013gnss_status\030\031 \001(\0162%.phoenix.msg.loca"
      "lization.Gnss.Status:\016STATUS_INVALID\022I\n\n"
      "utm_status\030\032 \001(\0162%.phoenix.msg.localizat"
      "ion.Gnss.Status:\016STATUS_INVALID\022J\n\013odom_"
      "status\030\033 \001(\0162%.phoenix.msg.localization."
      "Gnss.Status:\016STATUS_INVALID\"T\n\006Status\022\022\n"
      "\016STATUS_INVALID\020\000\022\016\n\nSTATUS_BAD\020\001\022\025\n\021STA"
      "TUS_CONVERGING\020\002\022\017\n\013STATUS_GOOD\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 873);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gnss.proto", &protobuf_RegisterTypes);
  ::protobuf_header_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gnss_2eproto
namespace phoenix {
namespace msg {
namespace localization {
const ::google::protobuf::EnumDescriptor* Gnss_Status_descriptor() {
  protobuf_gnss_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnss_2eproto::file_level_enum_descriptors[0];
}
bool Gnss_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gnss_Status Gnss::STATUS_INVALID;
const Gnss_Status Gnss::STATUS_BAD;
const Gnss_Status Gnss::STATUS_CONVERGING;
const Gnss_Status Gnss::STATUS_GOOD;
const Gnss_Status Gnss::Status_MIN;
const Gnss_Status Gnss::Status_MAX;
const int Gnss::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Gnss::InitAsDefaultInstance() {
  ::phoenix::msg::localization::_Gnss_default_instance_._instance.get_mutable()->header_ = const_cast< ::phoenix::msg::common::Header*>(
      ::phoenix::msg::common::Header::internal_default_instance());
}
void Gnss::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gnss::kHeaderFieldNumber;
const int Gnss::kLatitudeFieldNumber;
const int Gnss::kLongitudeFieldNumber;
const int Gnss::kAltitudeFieldNumber;
const int Gnss::kHeadingGnssFieldNumber;
const int Gnss::kXUtmFieldNumber;
const int Gnss::kYUtmFieldNumber;
const int Gnss::kZUtmFieldNumber;
const int Gnss::kHeadingUtmFieldNumber;
const int Gnss::kXOdomFieldNumber;
const int Gnss::kYOdomFieldNumber;
const int Gnss::kZOdomFieldNumber;
const int Gnss::kHeadingOdomFieldNumber;
const int Gnss::kPitchFieldNumber;
const int Gnss::kRollFieldNumber;
const int Gnss::kVEFieldNumber;
const int Gnss::kVNFieldNumber;
const int Gnss::kVUFieldNumber;
const int Gnss::kVXUtmFieldNumber;
const int Gnss::kVYUtmFieldNumber;
const int Gnss::kVZUtmFieldNumber;
const int Gnss::kVXOdomFieldNumber;
const int Gnss::kVYOdomFieldNumber;
const int Gnss::kVZOdomFieldNumber;
const int Gnss::kGnssStatusFieldNumber;
const int Gnss::kUtmStatusFieldNumber;
const int Gnss::kOdomStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gnss::Gnss()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gnss_2eproto::InitDefaultsGnss();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.localization.Gnss)
}
Gnss::Gnss(const Gnss& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::phoenix::msg::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&odom_status_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(odom_status_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.localization.Gnss)
}

void Gnss::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&odom_status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(odom_status_));
}

Gnss::~Gnss() {
  // @@protoc_insertion_point(destructor:phoenix.msg.localization.Gnss)
  SharedDtor();
}

void Gnss::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void Gnss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gnss::descriptor() {
  ::protobuf_gnss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gnss& Gnss::default_instance() {
  ::protobuf_gnss_2eproto::InitDefaultsGnss();
  return *internal_default_instance();
}

Gnss* Gnss::New(::google::protobuf::Arena* arena) const {
  Gnss* n = new Gnss;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gnss::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.localization.Gnss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&latitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&heading_utm_) -
        reinterpret_cast<char*>(&latitude_)) + sizeof(heading_utm_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&z_utm_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&v_e_) -
        reinterpret_cast<char*>(&z_utm_)) + sizeof(v_e_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&v_n_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&v_z_odom_) -
        reinterpret_cast<char*>(&v_n_)) + sizeof(v_z_odom_));
  }
  if (cached_has_bits & 117440512u) {
    ::memset(&gnss_status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&odom_status_) -
        reinterpret_cast<char*>(&gnss_status_)) + sizeof(odom_status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gnss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.localization.Gnss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .phoenix.msg.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double latitude = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double longitude = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double altitude = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_altitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float heading_gnss = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_heading_gnss();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_gnss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double x_utm = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_x_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y_utm = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_y_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z_utm = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_z_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float heading_utm = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_heading_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double x_odom = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_x_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y_odom = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_y_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z_odom = 12 [default = 0];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_z_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float heading_odom = 13 [default = 0];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {
          set_has_heading_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pitch = 14 [default = 0];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float roll = 15 [default = 0];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          set_has_roll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_e = 16 [default = 0];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {
          set_has_v_e();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_e_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_n = 17 [default = 0];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {
          set_has_v_n();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_u = 18 [default = 0];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {
          set_has_v_u();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_u_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_x_utm = 19 [default = 0];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {
          set_has_v_x_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_x_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_y_utm = 20 [default = 0];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {
          set_has_v_y_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_y_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_z_utm = 21 [default = 0];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {
          set_has_v_z_utm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_z_utm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_x_odom = 22 [default = 0];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {
          set_has_v_x_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_x_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_y_odom = 23 [default = 0];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {
          set_has_v_y_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_y_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float v_z_odom = 24 [default = 0];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {
          set_has_v_z_odom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_z_odom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.localization.Gnss.Status gnss_status = 25 [default = STATUS_INVALID];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::phoenix::msg::localization::Gnss_Status_IsValid(value)) {
            set_gnss_status(static_cast< ::phoenix::msg::localization::Gnss_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                25, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.localization.Gnss.Status utm_status = 26 [default = STATUS_INVALID];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::phoenix::msg::localization::Gnss_Status_IsValid(value)) {
            set_utm_status(static_cast< ::phoenix::msg::localization::Gnss_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                26, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.localization.Gnss.Status odom_status = 27 [default = STATUS_INVALID];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::phoenix::msg::localization::Gnss_Status_IsValid(value)) {
            set_odom_status(static_cast< ::phoenix::msg::localization::Gnss_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                27, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.localization.Gnss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.localization.Gnss)
  return false;
#undef DO_
}

void Gnss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.localization.Gnss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional double latitude = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  // optional double longitude = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->longitude(), output);
  }

  // optional double altitude = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->altitude(), output);
  }

  // optional float heading_gnss = 5 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->heading_gnss(), output);
  }

  // optional double x_utm = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->x_utm(), output);
  }

  // optional double y_utm = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->y_utm(), output);
  }

  // optional double z_utm = 8 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->z_utm(), output);
  }

  // optional float heading_utm = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->heading_utm(), output);
  }

  // optional double x_odom = 10 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->x_odom(), output);
  }

  // optional double y_odom = 11 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->y_odom(), output);
  }

  // optional double z_odom = 12 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->z_odom(), output);
  }

  // optional float heading_odom = 13 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->heading_odom(), output);
  }

  // optional float pitch = 14 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->pitch(), output);
  }

  // optional float roll = 15 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->roll(), output);
  }

  // optional float v_e = 16 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->v_e(), output);
  }

  // optional float v_n = 17 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->v_n(), output);
  }

  // optional float v_u = 18 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->v_u(), output);
  }

  // optional float v_x_utm = 19 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->v_x_utm(), output);
  }

  // optional float v_y_utm = 20 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->v_y_utm(), output);
  }

  // optional float v_z_utm = 21 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->v_z_utm(), output);
  }

  // optional float v_x_odom = 22 [default = 0];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->v_x_odom(), output);
  }

  // optional float v_y_odom = 23 [default = 0];
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->v_y_odom(), output);
  }

  // optional float v_z_odom = 24 [default = 0];
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->v_z_odom(), output);
  }

  // optional .phoenix.msg.localization.Gnss.Status gnss_status = 25 [default = STATUS_INVALID];
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      25, this->gnss_status(), output);
  }

  // optional .phoenix.msg.localization.Gnss.Status utm_status = 26 [default = STATUS_INVALID];
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      26, this->utm_status(), output);
  }

  // optional .phoenix.msg.localization.Gnss.Status odom_status = 27 [default = STATUS_INVALID];
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      27, this->odom_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.localization.Gnss)
}

::google::protobuf::uint8* Gnss::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.localization.Gnss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // optional double latitude = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  // optional double longitude = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->longitude(), target);
  }

  // optional double altitude = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->altitude(), target);
  }

  // optional float heading_gnss = 5 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->heading_gnss(), target);
  }

  // optional double x_utm = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->x_utm(), target);
  }

  // optional double y_utm = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->y_utm(), target);
  }

  // optional double z_utm = 8 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->z_utm(), target);
  }

  // optional float heading_utm = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->heading_utm(), target);
  }

  // optional double x_odom = 10 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->x_odom(), target);
  }

  // optional double y_odom = 11 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->y_odom(), target);
  }

  // optional double z_odom = 12 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->z_odom(), target);
  }

  // optional float heading_odom = 13 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->heading_odom(), target);
  }

  // optional float pitch = 14 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->pitch(), target);
  }

  // optional float roll = 15 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->roll(), target);
  }

  // optional float v_e = 16 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->v_e(), target);
  }

  // optional float v_n = 17 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->v_n(), target);
  }

  // optional float v_u = 18 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->v_u(), target);
  }

  // optional float v_x_utm = 19 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->v_x_utm(), target);
  }

  // optional float v_y_utm = 20 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->v_y_utm(), target);
  }

  // optional float v_z_utm = 21 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->v_z_utm(), target);
  }

  // optional float v_x_odom = 22 [default = 0];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->v_x_odom(), target);
  }

  // optional float v_y_odom = 23 [default = 0];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->v_y_odom(), target);
  }

  // optional float v_z_odom = 24 [default = 0];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->v_z_odom(), target);
  }

  // optional .phoenix.msg.localization.Gnss.Status gnss_status = 25 [default = STATUS_INVALID];
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      25, this->gnss_status(), target);
  }

  // optional .phoenix.msg.localization.Gnss.Status utm_status = 26 [default = STATUS_INVALID];
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      26, this->utm_status(), target);
  }

  // optional .phoenix.msg.localization.Gnss.Status odom_status = 27 [default = STATUS_INVALID];
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      27, this->odom_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.localization.Gnss)
  return target;
}

size_t Gnss::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.localization.Gnss)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .phoenix.msg.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->header_);
    }

    // optional double latitude = 2 [default = 0];
    if (has_latitude()) {
      total_size += 1 + 8;
    }

    // optional double longitude = 3 [default = 0];
    if (has_longitude()) {
      total_size += 1 + 8;
    }

    // optional double altitude = 4 [default = 0];
    if (has_altitude()) {
      total_size += 1 + 8;
    }

    // optional double x_utm = 6 [default = 0];
    if (has_x_utm()) {
      total_size += 1 + 8;
    }

    // optional double y_utm = 7 [default = 0];
    if (has_y_utm()) {
      total_size += 1 + 8;
    }

    // optional float heading_gnss = 5 [default = 0];
    if (has_heading_gnss()) {
      total_size += 1 + 4;
    }

    // optional float heading_utm = 9 [default = 0];
    if (has_heading_utm()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional double z_utm = 8 [default = 0];
    if (has_z_utm()) {
      total_size += 1 + 8;
    }

    // optional double x_odom = 10 [default = 0];
    if (has_x_odom()) {
      total_size += 1 + 8;
    }

    // optional double y_odom = 11 [default = 0];
    if (has_y_odom()) {
      total_size += 1 + 8;
    }

    // optional double z_odom = 12 [default = 0];
    if (has_z_odom()) {
      total_size += 1 + 8;
    }

    // optional float heading_odom = 13 [default = 0];
    if (has_heading_odom()) {
      total_size += 1 + 4;
    }

    // optional float pitch = 14 [default = 0];
    if (has_pitch()) {
      total_size += 1 + 4;
    }

    // optional float roll = 15 [default = 0];
    if (has_roll()) {
      total_size += 1 + 4;
    }

    // optional float v_e = 16 [default = 0];
    if (has_v_e()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional float v_n = 17 [default = 0];
    if (has_v_n()) {
      total_size += 2 + 4;
    }

    // optional float v_u = 18 [default = 0];
    if (has_v_u()) {
      total_size += 2 + 4;
    }

    // optional float v_x_utm = 19 [default = 0];
    if (has_v_x_utm()) {
      total_size += 2 + 4;
    }

    // optional float v_y_utm = 20 [default = 0];
    if (has_v_y_utm()) {
      total_size += 2 + 4;
    }

    // optional float v_z_utm = 21 [default = 0];
    if (has_v_z_utm()) {
      total_size += 2 + 4;
    }

    // optional float v_x_odom = 22 [default = 0];
    if (has_v_x_odom()) {
      total_size += 2 + 4;
    }

    // optional float v_y_odom = 23 [default = 0];
    if (has_v_y_odom()) {
      total_size += 2 + 4;
    }

    // optional float v_z_odom = 24 [default = 0];
    if (has_v_z_odom()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[24 / 32] & 117440512u) {
    // optional .phoenix.msg.localization.Gnss.Status gnss_status = 25 [default = STATUS_INVALID];
    if (has_gnss_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gnss_status());
    }

    // optional .phoenix.msg.localization.Gnss.Status utm_status = 26 [default = STATUS_INVALID];
    if (has_utm_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->utm_status());
    }

    // optional .phoenix.msg.localization.Gnss.Status odom_status = 27 [default = STATUS_INVALID];
    if (has_odom_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->odom_status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gnss::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.localization.Gnss)
  GOOGLE_DCHECK_NE(&from, this);
  const Gnss* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gnss>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.localization.Gnss)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.localization.Gnss)
    MergeFrom(*source);
  }
}

void Gnss::MergeFrom(const Gnss& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.localization.Gnss)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::phoenix::msg::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      altitude_ = from.altitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      x_utm_ = from.x_utm_;
    }
    if (cached_has_bits & 0x00000020u) {
      y_utm_ = from.y_utm_;
    }
    if (cached_has_bits & 0x00000040u) {
      heading_gnss_ = from.heading_gnss_;
    }
    if (cached_has_bits & 0x00000080u) {
      heading_utm_ = from.heading_utm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      z_utm_ = from.z_utm_;
    }
    if (cached_has_bits & 0x00000200u) {
      x_odom_ = from.x_odom_;
    }
    if (cached_has_bits & 0x00000400u) {
      y_odom_ = from.y_odom_;
    }
    if (cached_has_bits & 0x00000800u) {
      z_odom_ = from.z_odom_;
    }
    if (cached_has_bits & 0x00001000u) {
      heading_odom_ = from.heading_odom_;
    }
    if (cached_has_bits & 0x00002000u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00004000u) {
      roll_ = from.roll_;
    }
    if (cached_has_bits & 0x00008000u) {
      v_e_ = from.v_e_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      v_n_ = from.v_n_;
    }
    if (cached_has_bits & 0x00020000u) {
      v_u_ = from.v_u_;
    }
    if (cached_has_bits & 0x00040000u) {
      v_x_utm_ = from.v_x_utm_;
    }
    if (cached_has_bits & 0x00080000u) {
      v_y_utm_ = from.v_y_utm_;
    }
    if (cached_has_bits & 0x00100000u) {
      v_z_utm_ = from.v_z_utm_;
    }
    if (cached_has_bits & 0x00200000u) {
      v_x_odom_ = from.v_x_odom_;
    }
    if (cached_has_bits & 0x00400000u) {
      v_y_odom_ = from.v_y_odom_;
    }
    if (cached_has_bits & 0x00800000u) {
      v_z_odom_ = from.v_z_odom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 117440512u) {
    if (cached_has_bits & 0x01000000u) {
      gnss_status_ = from.gnss_status_;
    }
    if (cached_has_bits & 0x02000000u) {
      utm_status_ = from.utm_status_;
    }
    if (cached_has_bits & 0x04000000u) {
      odom_status_ = from.odom_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gnss::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.localization.Gnss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gnss::CopyFrom(const Gnss& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.localization.Gnss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gnss::IsInitialized() const {
  return true;
}

void Gnss::Swap(Gnss* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gnss::InternalSwap(Gnss* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(altitude_, other->altitude_);
  swap(x_utm_, other->x_utm_);
  swap(y_utm_, other->y_utm_);
  swap(heading_gnss_, other->heading_gnss_);
  swap(heading_utm_, other->heading_utm_);
  swap(z_utm_, other->z_utm_);
  swap(x_odom_, other->x_odom_);
  swap(y_odom_, other->y_odom_);
  swap(z_odom_, other->z_odom_);
  swap(heading_odom_, other->heading_odom_);
  swap(pitch_, other->pitch_);
  swap(roll_, other->roll_);
  swap(v_e_, other->v_e_);
  swap(v_n_, other->v_n_);
  swap(v_u_, other->v_u_);
  swap(v_x_utm_, other->v_x_utm_);
  swap(v_y_utm_, other->v_y_utm_);
  swap(v_z_utm_, other->v_z_utm_);
  swap(v_x_odom_, other->v_x_odom_);
  swap(v_y_odom_, other->v_y_odom_);
  swap(v_z_odom_, other->v_z_odom_);
  swap(gnss_status_, other->gnss_status_);
  swap(utm_status_, other->utm_status_);
  swap(odom_status_, other->odom_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gnss::GetMetadata() const {
  protobuf_gnss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace localization
}  // namespace msg
}  // namespace phoenix

// @@protoc_insertion_point(global_scope)
