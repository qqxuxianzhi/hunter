// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chassis_ft_auman.proto

#include "chassis_ft_auman.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace phoenix {
namespace msg {
namespace control {
class ChassisFtAumanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChassisFtAuman>
      _instance;
} _ChassisFtAuman_default_instance_;
}  // namespace control
}  // namespace msg
}  // namespace phoenix
namespace protobuf_chassis_5fft_5fauman_2eproto {
void InitDefaultsChassisFtAumanImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phoenix::msg::control::_ChassisFtAuman_default_instance_;
    new (ptr) ::phoenix::msg::control::ChassisFtAuman();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::control::ChassisFtAuman::InitAsDefaultInstance();
}

void InitDefaultsChassisFtAuman() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChassisFtAumanImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::ChassisFtAuman, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::ChassisFtAuman, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::ChassisFtAuman, switch_tja_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::ChassisFtAuman, switch_hwa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::ChassisFtAuman, switch_i_drive_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::phoenix::msg::control::ChassisFtAuman)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::control::_ChassisFtAuman_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "chassis_ft_auman.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026chassis_ft_auman.proto\022\023phoenix.msg.co"
      "ntrol\"Y\n\016ChassisFtAuman\022\025\n\nswitch_tja\030\001 "
      "\001(\005:\0010\022\025\n\nswitch_hwa\030\002 \001(\005:\0010\022\031\n\016switch_"
      "i_drive\030\003 \001(\005:\0010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 136);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chassis_ft_auman.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chassis_5fft_5fauman_2eproto
namespace phoenix {
namespace msg {
namespace control {

// ===================================================================

void ChassisFtAuman::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChassisFtAuman::kSwitchTjaFieldNumber;
const int ChassisFtAuman::kSwitchHwaFieldNumber;
const int ChassisFtAuman::kSwitchIDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChassisFtAuman::ChassisFtAuman()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_chassis_5fft_5fauman_2eproto::InitDefaultsChassisFtAuman();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.control.ChassisFtAuman)
}
ChassisFtAuman::ChassisFtAuman(const ChassisFtAuman& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&switch_tja_, &from.switch_tja_,
    static_cast<size_t>(reinterpret_cast<char*>(&switch_i_drive_) -
    reinterpret_cast<char*>(&switch_tja_)) + sizeof(switch_i_drive_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.control.ChassisFtAuman)
}

void ChassisFtAuman::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&switch_tja_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switch_i_drive_) -
      reinterpret_cast<char*>(&switch_tja_)) + sizeof(switch_i_drive_));
}

ChassisFtAuman::~ChassisFtAuman() {
  // @@protoc_insertion_point(destructor:phoenix.msg.control.ChassisFtAuman)
  SharedDtor();
}

void ChassisFtAuman::SharedDtor() {
}

void ChassisFtAuman::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChassisFtAuman::descriptor() {
  ::protobuf_chassis_5fft_5fauman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chassis_5fft_5fauman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChassisFtAuman& ChassisFtAuman::default_instance() {
  ::protobuf_chassis_5fft_5fauman_2eproto::InitDefaultsChassisFtAuman();
  return *internal_default_instance();
}

ChassisFtAuman* ChassisFtAuman::New(::google::protobuf::Arena* arena) const {
  ChassisFtAuman* n = new ChassisFtAuman;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChassisFtAuman::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.control.ChassisFtAuman)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&switch_tja_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&switch_i_drive_) -
        reinterpret_cast<char*>(&switch_tja_)) + sizeof(switch_i_drive_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChassisFtAuman::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.control.ChassisFtAuman)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 switch_tja = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_switch_tja();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &switch_tja_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 switch_hwa = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_switch_hwa();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &switch_hwa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 switch_i_drive = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_switch_i_drive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &switch_i_drive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.control.ChassisFtAuman)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.control.ChassisFtAuman)
  return false;
#undef DO_
}

void ChassisFtAuman::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.control.ChassisFtAuman)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 switch_tja = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->switch_tja(), output);
  }

  // optional int32 switch_hwa = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->switch_hwa(), output);
  }

  // optional int32 switch_i_drive = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->switch_i_drive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.control.ChassisFtAuman)
}

::google::protobuf::uint8* ChassisFtAuman::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.control.ChassisFtAuman)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 switch_tja = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->switch_tja(), target);
  }

  // optional int32 switch_hwa = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->switch_hwa(), target);
  }

  // optional int32 switch_i_drive = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->switch_i_drive(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.control.ChassisFtAuman)
  return target;
}

size_t ChassisFtAuman::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.control.ChassisFtAuman)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 switch_tja = 1 [default = 0];
    if (has_switch_tja()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->switch_tja());
    }

    // optional int32 switch_hwa = 2 [default = 0];
    if (has_switch_hwa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->switch_hwa());
    }

    // optional int32 switch_i_drive = 3 [default = 0];
    if (has_switch_i_drive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->switch_i_drive());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChassisFtAuman::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.control.ChassisFtAuman)
  GOOGLE_DCHECK_NE(&from, this);
  const ChassisFtAuman* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChassisFtAuman>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.control.ChassisFtAuman)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.control.ChassisFtAuman)
    MergeFrom(*source);
  }
}

void ChassisFtAuman::MergeFrom(const ChassisFtAuman& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.control.ChassisFtAuman)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      switch_tja_ = from.switch_tja_;
    }
    if (cached_has_bits & 0x00000002u) {
      switch_hwa_ = from.switch_hwa_;
    }
    if (cached_has_bits & 0x00000004u) {
      switch_i_drive_ = from.switch_i_drive_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChassisFtAuman::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.control.ChassisFtAuman)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChassisFtAuman::CopyFrom(const ChassisFtAuman& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.control.ChassisFtAuman)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChassisFtAuman::IsInitialized() const {
  return true;
}

void ChassisFtAuman::Swap(ChassisFtAuman* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChassisFtAuman::InternalSwap(ChassisFtAuman* other) {
  using std::swap;
  swap(switch_tja_, other->switch_tja_);
  swap(switch_hwa_, other->switch_hwa_);
  swap(switch_i_drive_, other->switch_i_drive_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChassisFtAuman::GetMetadata() const {
  protobuf_chassis_5fft_5fauman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chassis_5fft_5fauman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace control
}  // namespace msg
}  // namespace phoenix

// @@protoc_insertion_point(global_scope)
