// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: special_chassis_info.proto

#include "special_chassis_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace phoenix {
namespace msg {
namespace control {
class SpecialChassisInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpecialChassisInfo>
      _instance;
} _SpecialChassisInfo_default_instance_;
}  // namespace control
}  // namespace msg
}  // namespace phoenix
namespace protobuf_special_5fchassis_5finfo_2eproto {
void InitDefaultsSpecialChassisInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_header_2eproto::InitDefaultsHeader();
  protobuf_chassis_5fft_5fauman_2eproto::InitDefaultsChassisFtAuman();
  {
    void* ptr = &::phoenix::msg::control::_SpecialChassisInfo_default_instance_;
    new (ptr) ::phoenix::msg::control::SpecialChassisInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::msg::control::SpecialChassisInfo::InitAsDefaultInstance();
}

void InitDefaultsSpecialChassisInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpecialChassisInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, start_adas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_frame_loss_can0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_frame_loss_can1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_frame_loss_can2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_frame_loss_can3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_gtw_to_veh_can0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_gtw_to_veh_can1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_gtw_to_veh_can2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_gtw_to_veh_can3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_ctl_to_gtw_can0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_ctl_to_gtw_can1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_ctl_to_gtw_can2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_ctl_to_gtw_can3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, cnt_stu_ctl_to_gtw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phoenix::msg::control::SpecialChassisInfo, ft_auman_),
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 21, sizeof(::phoenix::msg::control::SpecialChassisInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::phoenix::msg::control::_SpecialChassisInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "special_chassis_info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032special_chassis_info.proto\022\023phoenix.ms"
      "g.control\032\014header.proto\032\026chassis_ft_auma"
      "n.proto\"\335\004\n\022SpecialChassisInfo\022*\n\006header"
      "\030\001 \001(\0132\032.phoenix.msg.common.Header\022\025\n\nst"
      "art_adas\030\002 \001(\005:\0010\022\"\n\027cnt_stu_frame_loss_"
      "can0\030\003 \001(\005:\0010\022\"\n\027cnt_stu_frame_loss_can1"
      "\030\004 \001(\005:\0010\022\"\n\027cnt_stu_frame_loss_can2\030\005 \001"
      "(\005:\0010\022\"\n\027cnt_stu_frame_loss_can3\030\006 \001(\005:\001"
      "0\022\"\n\027cnt_stu_gtw_to_veh_can0\030\007 \001(\005:\0010\022\"\n"
      "\027cnt_stu_gtw_to_veh_can1\030\010 \001(\005:\0010\022\"\n\027cnt"
      "_stu_gtw_to_veh_can2\030\t \001(\005:\0010\022\"\n\027cnt_stu"
      "_gtw_to_veh_can3\030\n \001(\005:\0010\022\"\n\027cnt_stu_ctl"
      "_to_gtw_can0\030\013 \001(\005:\0010\022\"\n\027cnt_stu_ctl_to_"
      "gtw_can1\030\014 \001(\005:\0010\022\"\n\027cnt_stu_ctl_to_gtw_"
      "can2\030\r \001(\005:\0010\022\"\n\027cnt_stu_ctl_to_gtw_can3"
      "\030\016 \001(\005:\0010\022\035\n\022cnt_stu_ctl_to_gtw\030\017 \001(\005:\0010"
      "\0225\n\010ft_auman\030\020 \001(\0132#.phoenix.msg.control"
      ".ChassisFtAuman"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 695);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "special_chassis_info.proto", &protobuf_RegisterTypes);
  ::protobuf_header_2eproto::AddDescriptors();
  ::protobuf_chassis_5fft_5fauman_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_special_5fchassis_5finfo_2eproto
namespace phoenix {
namespace msg {
namespace control {

// ===================================================================

void SpecialChassisInfo::InitAsDefaultInstance() {
  ::phoenix::msg::control::_SpecialChassisInfo_default_instance_._instance.get_mutable()->header_ = const_cast< ::phoenix::msg::common::Header*>(
      ::phoenix::msg::common::Header::internal_default_instance());
  ::phoenix::msg::control::_SpecialChassisInfo_default_instance_._instance.get_mutable()->ft_auman_ = const_cast< ::phoenix::msg::control::ChassisFtAuman*>(
      ::phoenix::msg::control::ChassisFtAuman::internal_default_instance());
}
void SpecialChassisInfo::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
void SpecialChassisInfo::clear_ft_auman() {
  if (ft_auman_ != NULL) ft_auman_->Clear();
  clear_has_ft_auman();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpecialChassisInfo::kHeaderFieldNumber;
const int SpecialChassisInfo::kStartAdasFieldNumber;
const int SpecialChassisInfo::kCntStuFrameLossCan0FieldNumber;
const int SpecialChassisInfo::kCntStuFrameLossCan1FieldNumber;
const int SpecialChassisInfo::kCntStuFrameLossCan2FieldNumber;
const int SpecialChassisInfo::kCntStuFrameLossCan3FieldNumber;
const int SpecialChassisInfo::kCntStuGtwToVehCan0FieldNumber;
const int SpecialChassisInfo::kCntStuGtwToVehCan1FieldNumber;
const int SpecialChassisInfo::kCntStuGtwToVehCan2FieldNumber;
const int SpecialChassisInfo::kCntStuGtwToVehCan3FieldNumber;
const int SpecialChassisInfo::kCntStuCtlToGtwCan0FieldNumber;
const int SpecialChassisInfo::kCntStuCtlToGtwCan1FieldNumber;
const int SpecialChassisInfo::kCntStuCtlToGtwCan2FieldNumber;
const int SpecialChassisInfo::kCntStuCtlToGtwCan3FieldNumber;
const int SpecialChassisInfo::kCntStuCtlToGtwFieldNumber;
const int SpecialChassisInfo::kFtAumanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpecialChassisInfo::SpecialChassisInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_special_5fchassis_5finfo_2eproto::InitDefaultsSpecialChassisInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.msg.control.SpecialChassisInfo)
}
SpecialChassisInfo::SpecialChassisInfo(const SpecialChassisInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::phoenix::msg::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_ft_auman()) {
    ft_auman_ = new ::phoenix::msg::control::ChassisFtAuman(*from.ft_auman_);
  } else {
    ft_auman_ = NULL;
  }
  ::memcpy(&start_adas_, &from.start_adas_,
    static_cast<size_t>(reinterpret_cast<char*>(&cnt_stu_ctl_to_gtw_) -
    reinterpret_cast<char*>(&start_adas_)) + sizeof(cnt_stu_ctl_to_gtw_));
  // @@protoc_insertion_point(copy_constructor:phoenix.msg.control.SpecialChassisInfo)
}

void SpecialChassisInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cnt_stu_ctl_to_gtw_) -
      reinterpret_cast<char*>(&header_)) + sizeof(cnt_stu_ctl_to_gtw_));
}

SpecialChassisInfo::~SpecialChassisInfo() {
  // @@protoc_insertion_point(destructor:phoenix.msg.control.SpecialChassisInfo)
  SharedDtor();
}

void SpecialChassisInfo::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete ft_auman_;
}

void SpecialChassisInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpecialChassisInfo::descriptor() {
  ::protobuf_special_5fchassis_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_special_5fchassis_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpecialChassisInfo& SpecialChassisInfo::default_instance() {
  ::protobuf_special_5fchassis_5finfo_2eproto::InitDefaultsSpecialChassisInfo();
  return *internal_default_instance();
}

SpecialChassisInfo* SpecialChassisInfo::New(::google::protobuf::Arena* arena) const {
  SpecialChassisInfo* n = new SpecialChassisInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpecialChassisInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.msg.control.SpecialChassisInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ft_auman_ != NULL);
      ft_auman_->Clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&start_adas_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cnt_stu_gtw_to_veh_can0_) -
        reinterpret_cast<char*>(&start_adas_)) + sizeof(cnt_stu_gtw_to_veh_can0_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&cnt_stu_gtw_to_veh_can1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cnt_stu_ctl_to_gtw_) -
        reinterpret_cast<char*>(&cnt_stu_gtw_to_veh_can1_)) + sizeof(cnt_stu_ctl_to_gtw_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SpecialChassisInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phoenix.msg.control.SpecialChassisInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .phoenix.msg.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 start_adas = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_start_adas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_adas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_frame_loss_can0 = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cnt_stu_frame_loss_can0();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_frame_loss_can0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_frame_loss_can1 = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cnt_stu_frame_loss_can1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_frame_loss_can1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_frame_loss_can2 = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_cnt_stu_frame_loss_can2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_frame_loss_can2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_frame_loss_can3 = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_cnt_stu_frame_loss_can3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_frame_loss_can3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_gtw_to_veh_can0 = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_cnt_stu_gtw_to_veh_can0();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_gtw_to_veh_can0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_gtw_to_veh_can1 = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_cnt_stu_gtw_to_veh_can1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_gtw_to_veh_can1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_gtw_to_veh_can2 = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_cnt_stu_gtw_to_veh_can2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_gtw_to_veh_can2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_gtw_to_veh_can3 = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_cnt_stu_gtw_to_veh_can3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_gtw_to_veh_can3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_ctl_to_gtw_can0 = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_cnt_stu_ctl_to_gtw_can0();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_ctl_to_gtw_can0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_ctl_to_gtw_can1 = 12 [default = 0];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_cnt_stu_ctl_to_gtw_can1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_ctl_to_gtw_can1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_ctl_to_gtw_can2 = 13 [default = 0];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_cnt_stu_ctl_to_gtw_can2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_ctl_to_gtw_can2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_ctl_to_gtw_can3 = 14 [default = 0];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_cnt_stu_ctl_to_gtw_can3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_ctl_to_gtw_can3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cnt_stu_ctl_to_gtw = 15 [default = 0];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_cnt_stu_ctl_to_gtw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_stu_ctl_to_gtw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .phoenix.msg.control.ChassisFtAuman ft_auman = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ft_auman()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.msg.control.SpecialChassisInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.msg.control.SpecialChassisInfo)
  return false;
#undef DO_
}

void SpecialChassisInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.msg.control.SpecialChassisInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional int32 start_adas = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->start_adas(), output);
  }

  // optional int32 cnt_stu_frame_loss_can0 = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cnt_stu_frame_loss_can0(), output);
  }

  // optional int32 cnt_stu_frame_loss_can1 = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cnt_stu_frame_loss_can1(), output);
  }

  // optional int32 cnt_stu_frame_loss_can2 = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cnt_stu_frame_loss_can2(), output);
  }

  // optional int32 cnt_stu_frame_loss_can3 = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cnt_stu_frame_loss_can3(), output);
  }

  // optional int32 cnt_stu_gtw_to_veh_can0 = 7 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cnt_stu_gtw_to_veh_can0(), output);
  }

  // optional int32 cnt_stu_gtw_to_veh_can1 = 8 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cnt_stu_gtw_to_veh_can1(), output);
  }

  // optional int32 cnt_stu_gtw_to_veh_can2 = 9 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cnt_stu_gtw_to_veh_can2(), output);
  }

  // optional int32 cnt_stu_gtw_to_veh_can3 = 10 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->cnt_stu_gtw_to_veh_can3(), output);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can0 = 11 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cnt_stu_ctl_to_gtw_can0(), output);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can1 = 12 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->cnt_stu_ctl_to_gtw_can1(), output);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can2 = 13 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->cnt_stu_ctl_to_gtw_can2(), output);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can3 = 14 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->cnt_stu_ctl_to_gtw_can3(), output);
  }

  // optional int32 cnt_stu_ctl_to_gtw = 15 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->cnt_stu_ctl_to_gtw(), output);
  }

  // optional .phoenix.msg.control.ChassisFtAuman ft_auman = 16;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->ft_auman_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phoenix.msg.control.SpecialChassisInfo)
}

::google::protobuf::uint8* SpecialChassisInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phoenix.msg.control.SpecialChassisInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .phoenix.msg.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // optional int32 start_adas = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->start_adas(), target);
  }

  // optional int32 cnt_stu_frame_loss_can0 = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cnt_stu_frame_loss_can0(), target);
  }

  // optional int32 cnt_stu_frame_loss_can1 = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cnt_stu_frame_loss_can1(), target);
  }

  // optional int32 cnt_stu_frame_loss_can2 = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cnt_stu_frame_loss_can2(), target);
  }

  // optional int32 cnt_stu_frame_loss_can3 = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cnt_stu_frame_loss_can3(), target);
  }

  // optional int32 cnt_stu_gtw_to_veh_can0 = 7 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cnt_stu_gtw_to_veh_can0(), target);
  }

  // optional int32 cnt_stu_gtw_to_veh_can1 = 8 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cnt_stu_gtw_to_veh_can1(), target);
  }

  // optional int32 cnt_stu_gtw_to_veh_can2 = 9 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cnt_stu_gtw_to_veh_can2(), target);
  }

  // optional int32 cnt_stu_gtw_to_veh_can3 = 10 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->cnt_stu_gtw_to_veh_can3(), target);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can0 = 11 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cnt_stu_ctl_to_gtw_can0(), target);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can1 = 12 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->cnt_stu_ctl_to_gtw_can1(), target);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can2 = 13 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->cnt_stu_ctl_to_gtw_can2(), target);
  }

  // optional int32 cnt_stu_ctl_to_gtw_can3 = 14 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->cnt_stu_ctl_to_gtw_can3(), target);
  }

  // optional int32 cnt_stu_ctl_to_gtw = 15 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->cnt_stu_ctl_to_gtw(), target);
  }

  // optional .phoenix.msg.control.ChassisFtAuman ft_auman = 16;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->ft_auman_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phoenix.msg.control.SpecialChassisInfo)
  return target;
}

size_t SpecialChassisInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.msg.control.SpecialChassisInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .phoenix.msg.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->header_);
    }

    // optional .phoenix.msg.control.ChassisFtAuman ft_auman = 16;
    if (has_ft_auman()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->ft_auman_);
    }

    // optional int32 start_adas = 2 [default = 0];
    if (has_start_adas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_adas());
    }

    // optional int32 cnt_stu_frame_loss_can0 = 3 [default = 0];
    if (has_cnt_stu_frame_loss_can0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_frame_loss_can0());
    }

    // optional int32 cnt_stu_frame_loss_can1 = 4 [default = 0];
    if (has_cnt_stu_frame_loss_can1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_frame_loss_can1());
    }

    // optional int32 cnt_stu_frame_loss_can2 = 5 [default = 0];
    if (has_cnt_stu_frame_loss_can2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_frame_loss_can2());
    }

    // optional int32 cnt_stu_frame_loss_can3 = 6 [default = 0];
    if (has_cnt_stu_frame_loss_can3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_frame_loss_can3());
    }

    // optional int32 cnt_stu_gtw_to_veh_can0 = 7 [default = 0];
    if (has_cnt_stu_gtw_to_veh_can0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_gtw_to_veh_can0());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 cnt_stu_gtw_to_veh_can1 = 8 [default = 0];
    if (has_cnt_stu_gtw_to_veh_can1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_gtw_to_veh_can1());
    }

    // optional int32 cnt_stu_gtw_to_veh_can2 = 9 [default = 0];
    if (has_cnt_stu_gtw_to_veh_can2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_gtw_to_veh_can2());
    }

    // optional int32 cnt_stu_gtw_to_veh_can3 = 10 [default = 0];
    if (has_cnt_stu_gtw_to_veh_can3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_gtw_to_veh_can3());
    }

    // optional int32 cnt_stu_ctl_to_gtw_can0 = 11 [default = 0];
    if (has_cnt_stu_ctl_to_gtw_can0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_ctl_to_gtw_can0());
    }

    // optional int32 cnt_stu_ctl_to_gtw_can1 = 12 [default = 0];
    if (has_cnt_stu_ctl_to_gtw_can1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_ctl_to_gtw_can1());
    }

    // optional int32 cnt_stu_ctl_to_gtw_can2 = 13 [default = 0];
    if (has_cnt_stu_ctl_to_gtw_can2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_ctl_to_gtw_can2());
    }

    // optional int32 cnt_stu_ctl_to_gtw_can3 = 14 [default = 0];
    if (has_cnt_stu_ctl_to_gtw_can3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_ctl_to_gtw_can3());
    }

    // optional int32 cnt_stu_ctl_to_gtw = 15 [default = 0];
    if (has_cnt_stu_ctl_to_gtw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cnt_stu_ctl_to_gtw());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpecialChassisInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phoenix.msg.control.SpecialChassisInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecialChassisInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpecialChassisInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phoenix.msg.control.SpecialChassisInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phoenix.msg.control.SpecialChassisInfo)
    MergeFrom(*source);
  }
}

void SpecialChassisInfo::MergeFrom(const SpecialChassisInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.msg.control.SpecialChassisInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::phoenix::msg::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ft_auman()->::phoenix::msg::control::ChassisFtAuman::MergeFrom(from.ft_auman());
    }
    if (cached_has_bits & 0x00000004u) {
      start_adas_ = from.start_adas_;
    }
    if (cached_has_bits & 0x00000008u) {
      cnt_stu_frame_loss_can0_ = from.cnt_stu_frame_loss_can0_;
    }
    if (cached_has_bits & 0x00000010u) {
      cnt_stu_frame_loss_can1_ = from.cnt_stu_frame_loss_can1_;
    }
    if (cached_has_bits & 0x00000020u) {
      cnt_stu_frame_loss_can2_ = from.cnt_stu_frame_loss_can2_;
    }
    if (cached_has_bits & 0x00000040u) {
      cnt_stu_frame_loss_can3_ = from.cnt_stu_frame_loss_can3_;
    }
    if (cached_has_bits & 0x00000080u) {
      cnt_stu_gtw_to_veh_can0_ = from.cnt_stu_gtw_to_veh_can0_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      cnt_stu_gtw_to_veh_can1_ = from.cnt_stu_gtw_to_veh_can1_;
    }
    if (cached_has_bits & 0x00000200u) {
      cnt_stu_gtw_to_veh_can2_ = from.cnt_stu_gtw_to_veh_can2_;
    }
    if (cached_has_bits & 0x00000400u) {
      cnt_stu_gtw_to_veh_can3_ = from.cnt_stu_gtw_to_veh_can3_;
    }
    if (cached_has_bits & 0x00000800u) {
      cnt_stu_ctl_to_gtw_can0_ = from.cnt_stu_ctl_to_gtw_can0_;
    }
    if (cached_has_bits & 0x00001000u) {
      cnt_stu_ctl_to_gtw_can1_ = from.cnt_stu_ctl_to_gtw_can1_;
    }
    if (cached_has_bits & 0x00002000u) {
      cnt_stu_ctl_to_gtw_can2_ = from.cnt_stu_ctl_to_gtw_can2_;
    }
    if (cached_has_bits & 0x00004000u) {
      cnt_stu_ctl_to_gtw_can3_ = from.cnt_stu_ctl_to_gtw_can3_;
    }
    if (cached_has_bits & 0x00008000u) {
      cnt_stu_ctl_to_gtw_ = from.cnt_stu_ctl_to_gtw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecialChassisInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phoenix.msg.control.SpecialChassisInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecialChassisInfo::CopyFrom(const SpecialChassisInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.msg.control.SpecialChassisInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecialChassisInfo::IsInitialized() const {
  return true;
}

void SpecialChassisInfo::Swap(SpecialChassisInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpecialChassisInfo::InternalSwap(SpecialChassisInfo* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(ft_auman_, other->ft_auman_);
  swap(start_adas_, other->start_adas_);
  swap(cnt_stu_frame_loss_can0_, other->cnt_stu_frame_loss_can0_);
  swap(cnt_stu_frame_loss_can1_, other->cnt_stu_frame_loss_can1_);
  swap(cnt_stu_frame_loss_can2_, other->cnt_stu_frame_loss_can2_);
  swap(cnt_stu_frame_loss_can3_, other->cnt_stu_frame_loss_can3_);
  swap(cnt_stu_gtw_to_veh_can0_, other->cnt_stu_gtw_to_veh_can0_);
  swap(cnt_stu_gtw_to_veh_can1_, other->cnt_stu_gtw_to_veh_can1_);
  swap(cnt_stu_gtw_to_veh_can2_, other->cnt_stu_gtw_to_veh_can2_);
  swap(cnt_stu_gtw_to_veh_can3_, other->cnt_stu_gtw_to_veh_can3_);
  swap(cnt_stu_ctl_to_gtw_can0_, other->cnt_stu_ctl_to_gtw_can0_);
  swap(cnt_stu_ctl_to_gtw_can1_, other->cnt_stu_ctl_to_gtw_can1_);
  swap(cnt_stu_ctl_to_gtw_can2_, other->cnt_stu_ctl_to_gtw_can2_);
  swap(cnt_stu_ctl_to_gtw_can3_, other->cnt_stu_ctl_to_gtw_can3_);
  swap(cnt_stu_ctl_to_gtw_, other->cnt_stu_ctl_to_gtw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpecialChassisInfo::GetMetadata() const {
  protobuf_special_5fchassis_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_special_5fchassis_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace control
}  // namespace msg
}  // namespace phoenix

// @@protoc_insertion_point(global_scope)
