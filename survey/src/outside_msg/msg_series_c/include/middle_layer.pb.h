// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: middle_layer.proto

#ifndef PROTOBUF_middle_5flayer_2eproto__INCLUDED
#define PROTOBUF_middle_5flayer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_middle_5flayer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[92];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsQueryImpl();
void InitDefaultsQuery();
void InitDefaultsAnswerImpl();
void InitDefaultsAnswer();
void InitDefaultsEmptyImpl();
void InitDefaultsEmpty();
void InitDefaultsPointENUImpl();
void InitDefaultsPointENU();
void InitDefaultsPointLLHImpl();
void InitDefaultsPointLLH();
void InitDefaultsPoint2DImpl();
void InitDefaultsPoint2D();
void InitDefaultsPoint3DImpl();
void InitDefaultsPoint3D();
void InitDefaultsQuaternionImpl();
void InitDefaultsQuaternion();
void InitDefaultsImuAccelMessageImpl();
void InitDefaultsImuAccelMessage();
void InitDefaultsImuGyroMessageImpl();
void InitDefaultsImuGyroMessage();
void InitDefaultsImuEulerMessageImpl();
void InitDefaultsImuEulerMessage();
void InitDefaultsRobotCoreStateReqImpl();
void InitDefaultsRobotCoreStateReq();
void InitDefaultsRobotCoreState_SystemStateMessageImpl();
void InitDefaultsRobotCoreState_SystemStateMessage();
void InitDefaultsRobotCoreState_MotionStateMessageImpl();
void InitDefaultsRobotCoreState_MotionStateMessage();
void InitDefaultsRobotCoreState_RcStateMessageImpl();
void InitDefaultsRobotCoreState_RcStateMessage();
void InitDefaultsRobotCoreState_BmsBasicMessageImpl();
void InitDefaultsRobotCoreState_BmsBasicMessage();
void InitDefaultsRobotCoreState_OdometryMessageImpl();
void InitDefaultsRobotCoreState_OdometryMessage();
void InitDefaultsRobotCoreStateImpl();
void InitDefaultsRobotCoreState();
void InitDefaultsRobotCoreStateResImpl();
void InitDefaultsRobotCoreStateRes();
void InitDefaultsRobotCoreStateNotifyImpl();
void InitDefaultsRobotCoreStateNotify();
void InitDefaultsAppLoginReqImpl();
void InitDefaultsAppLoginReq();
void InitDefaultsAppLoginResImpl();
void InitDefaultsAppLoginRes();
void InitDefaultsRobotLoginReqImpl();
void InitDefaultsRobotLoginReq();
void InitDefaultsRobotLoginResImpl();
void InitDefaultsRobotLoginRes();
void InitDefaultsCloudLoginReqImpl();
void InitDefaultsCloudLoginReq();
void InitDefaultsCloudLoginResImpl();
void InitDefaultsCloudLoginRes();
void InitDefaultsLaserResultImpl();
void InitDefaultsLaserResult();
void InitDefaultsRtkResultImpl();
void InitDefaultsRtkResult();
void InitDefaultsRtkDataSourceImpl();
void InitDefaultsRtkDataSource();
void InitDefaultsSensorInfoNotifyImpl();
void InitDefaultsSensorInfoNotify();
void InitDefaultsMeasureResultNotify_PointImpl();
void InitDefaultsMeasureResultNotify_Point();
void InitDefaultsMeasureResultNotifyImpl();
void InitDefaultsMeasureResultNotify();
void InitDefaultsTaskStateImpl();
void InitDefaultsTaskState();
void InitDefaultsTaskStateNotifyImpl();
void InitDefaultsTaskStateNotify();
void InitDefaultsTargetTrackNotify_PointImpl();
void InitDefaultsTargetTrackNotify_Point();
void InitDefaultsTargetTrackNotifyImpl();
void InitDefaultsTargetTrackNotify();
void InitDefaultsRtkOperationCmdReqImpl();
void InitDefaultsRtkOperationCmdReq();
void InitDefaultsRtkOperationCmdResImpl();
void InitDefaultsRtkOperationCmdRes();
void InitDefaultsRtkOffsetInfoImpl();
void InitDefaultsRtkOffsetInfo();
void InitDefaultsWorkMessageIssuedImpl();
void InitDefaultsWorkMessageIssued();
void InitDefaultsWorkMessageIssuedResImpl();
void InitDefaultsWorkMessageIssuedRes();
void InitDefaultsDeviceTaskImpl();
void InitDefaultsDeviceTask();
void InitDefaultsStakeDtoImpl();
void InitDefaultsStakeDto();
void InitDefaultsStakeDtoListImpl();
void InitDefaultsStakeDtoList();
void InitDefaultsStakeInfoImpl();
void InitDefaultsStakeInfo();
void InitDefaultsStakeDtoListReqImpl();
void InitDefaultsStakeDtoListReq();
void InitDefaultsStakeDtoListResImpl();
void InitDefaultsStakeDtoListRes();
void InitDefaultsPutSideLineParamImpl();
void InitDefaultsPutSideLineParam();
void InitDefaultsPutMidLineParamImpl();
void InitDefaultsPutMidLineParam();
void InitDefaultsPutLevellingParamImpl();
void InitDefaultsPutLevellingParam();
void InitDefaultsPutLaneLineParamImpl();
void InitDefaultsPutLaneLineParam();
void InitDefaultsPutCrossSectionParamImpl();
void InitDefaultsPutCrossSectionParam();
void InitDefaultsDrawStandardSquareParamImpl();
void InitDefaultsDrawStandardSquareParam();
void InitDefaultsDrawSideLineParamImpl();
void InitDefaultsDrawSideLineParam();
void InitDefaultsDrawMidLineParamImpl();
void InitDefaultsDrawMidLineParam();
void InitDefaultsDrawStakesHelpParamImpl();
void InitDefaultsDrawStakesHelpParam();
void InitDefaultsWorkEndNotifyImpl();
void InitDefaultsWorkEndNotify();
void InitDefaultsOperationRobotReqImpl();
void InitDefaultsOperationRobotReq();
void InitDefaultsOperationRobotResImpl();
void InitDefaultsOperationRobotRes();
void InitDefaultsCalSideStakeReqImpl();
void InitDefaultsCalSideStakeReq();
void InitDefaultsCalSideStakeResImpl();
void InitDefaultsCalSideStakeRes();
void InitDefaultsCalSideStakeListReqImpl();
void InitDefaultsCalSideStakeListReq();
void InitDefaultsCalSideStakeListResImpl();
void InitDefaultsCalSideStakeListRes();
void InitDefaultsCalLaneStakeListResImpl();
void InitDefaultsCalLaneStakeListRes();
void InitDefaultsCalLaneStakeListReqImpl();
void InitDefaultsCalLaneStakeListReq();
void InitDefaultsCalCrossSectionStakeArrayReqImpl();
void InitDefaultsCalCrossSectionStakeArrayReq();
void InitDefaultsCalCrossSectionStakeArrayResImpl();
void InitDefaultsCalCrossSectionStakeArrayRes();
void InitDefaultsCalStandardSquareParamReqImpl();
void InitDefaultsCalStandardSquareParamReq();
void InitDefaultsCalStandardSquareParamResImpl();
void InitDefaultsCalStandardSquareParamRes();
void InitDefaultsCalSquareWidthStakeReqImpl();
void InitDefaultsCalSquareWidthStakeReq();
void InitDefaultsCalSquareWidthStakeResImpl();
void InitDefaultsCalSquareWidthStakeRes();
void InitDefaultsCalSquareStakeArrayReqImpl();
void InitDefaultsCalSquareStakeArrayReq();
void InitDefaultsCalSquareStakeArrayResImpl();
void InitDefaultsCalSquareStakeArrayRes();
void InitDefaultsCalLevellingStakeArrayReqImpl();
void InitDefaultsCalLevellingStakeArrayReq();
void InitDefaultsCalLevellingStakeArrayResImpl();
void InitDefaultsCalLevellingStakeArrayRes();
void InitDefaultsCalStakesHelpReqImpl();
void InitDefaultsCalStakesHelpReq();
void InitDefaultsCalStakesHelpResImpl();
void InitDefaultsCalStakesHelpRes();
void InitDefaultsRobotManualOperationReqImpl();
void InitDefaultsRobotManualOperationReq();
void InitDefaultsRobotManualOperationResImpl();
void InitDefaultsRobotManualOperationRes();
void InitDefaultsRobotAutopilotModeReqImpl();
void InitDefaultsRobotAutopilotModeReq();
void InitDefaultsPlaneCoordinatesParamsImpl();
void InitDefaultsPlaneCoordinatesParams();
void InitDefaultsRobotAutopilotModeResImpl();
void InitDefaultsRobotAutopilotModeRes();
void InitDefaultsRobotDustingNotifyImpl();
void InitDefaultsRobotDustingNotify();
void InitDefaultsRobotSiloParamsImpl();
void InitDefaultsRobotSiloParams();
void InitDefaultsRobotDustingSliderParamsImpl();
void InitDefaultsRobotDustingSliderParams();
void InitDefaultsFourParamImpl();
void InitDefaultsFourParam();
void InitDefaultsProjectionParamImpl();
void InitDefaultsProjectionParam();
void InitDefaultsEllipsoidParamImpl();
void InitDefaultsEllipsoidParam();
void InitDefaultsCoordinateCalibrationReqImpl();
void InitDefaultsCoordinateCalibrationReq();
void InitDefaultsCoordinateCalibrationResImpl();
void InitDefaultsCoordinateCalibrationRes();
void InitDefaultsWriteWordReqImpl();
void InitDefaultsWriteWordReq();
void InitDefaultsWriteWordResImpl();
void InitDefaultsWriteWordRes();
inline void InitDefaults() {
  InitDefaultsQuery();
  InitDefaultsAnswer();
  InitDefaultsEmpty();
  InitDefaultsPointENU();
  InitDefaultsPointLLH();
  InitDefaultsPoint2D();
  InitDefaultsPoint3D();
  InitDefaultsQuaternion();
  InitDefaultsImuAccelMessage();
  InitDefaultsImuGyroMessage();
  InitDefaultsImuEulerMessage();
  InitDefaultsRobotCoreStateReq();
  InitDefaultsRobotCoreState_SystemStateMessage();
  InitDefaultsRobotCoreState_MotionStateMessage();
  InitDefaultsRobotCoreState_RcStateMessage();
  InitDefaultsRobotCoreState_BmsBasicMessage();
  InitDefaultsRobotCoreState_OdometryMessage();
  InitDefaultsRobotCoreState();
  InitDefaultsRobotCoreStateRes();
  InitDefaultsRobotCoreStateNotify();
  InitDefaultsAppLoginReq();
  InitDefaultsAppLoginRes();
  InitDefaultsRobotLoginReq();
  InitDefaultsRobotLoginRes();
  InitDefaultsCloudLoginReq();
  InitDefaultsCloudLoginRes();
  InitDefaultsLaserResult();
  InitDefaultsRtkResult();
  InitDefaultsRtkDataSource();
  InitDefaultsSensorInfoNotify();
  InitDefaultsMeasureResultNotify_Point();
  InitDefaultsMeasureResultNotify();
  InitDefaultsTaskState();
  InitDefaultsTaskStateNotify();
  InitDefaultsTargetTrackNotify_Point();
  InitDefaultsTargetTrackNotify();
  InitDefaultsRtkOperationCmdReq();
  InitDefaultsRtkOperationCmdRes();
  InitDefaultsRtkOffsetInfo();
  InitDefaultsWorkMessageIssued();
  InitDefaultsWorkMessageIssuedRes();
  InitDefaultsDeviceTask();
  InitDefaultsStakeDto();
  InitDefaultsStakeDtoList();
  InitDefaultsStakeInfo();
  InitDefaultsStakeDtoListReq();
  InitDefaultsStakeDtoListRes();
  InitDefaultsPutSideLineParam();
  InitDefaultsPutMidLineParam();
  InitDefaultsPutLevellingParam();
  InitDefaultsPutLaneLineParam();
  InitDefaultsPutCrossSectionParam();
  InitDefaultsDrawStandardSquareParam();
  InitDefaultsDrawSideLineParam();
  InitDefaultsDrawMidLineParam();
  InitDefaultsDrawStakesHelpParam();
  InitDefaultsWorkEndNotify();
  InitDefaultsOperationRobotReq();
  InitDefaultsOperationRobotRes();
  InitDefaultsCalSideStakeReq();
  InitDefaultsCalSideStakeRes();
  InitDefaultsCalSideStakeListReq();
  InitDefaultsCalSideStakeListRes();
  InitDefaultsCalLaneStakeListRes();
  InitDefaultsCalLaneStakeListReq();
  InitDefaultsCalCrossSectionStakeArrayReq();
  InitDefaultsCalCrossSectionStakeArrayRes();
  InitDefaultsCalStandardSquareParamReq();
  InitDefaultsCalStandardSquareParamRes();
  InitDefaultsCalSquareWidthStakeReq();
  InitDefaultsCalSquareWidthStakeRes();
  InitDefaultsCalSquareStakeArrayReq();
  InitDefaultsCalSquareStakeArrayRes();
  InitDefaultsCalLevellingStakeArrayReq();
  InitDefaultsCalLevellingStakeArrayRes();
  InitDefaultsCalStakesHelpReq();
  InitDefaultsCalStakesHelpRes();
  InitDefaultsRobotManualOperationReq();
  InitDefaultsRobotManualOperationRes();
  InitDefaultsRobotAutopilotModeReq();
  InitDefaultsPlaneCoordinatesParams();
  InitDefaultsRobotAutopilotModeRes();
  InitDefaultsRobotDustingNotify();
  InitDefaultsRobotSiloParams();
  InitDefaultsRobotDustingSliderParams();
  InitDefaultsFourParam();
  InitDefaultsProjectionParam();
  InitDefaultsEllipsoidParam();
  InitDefaultsCoordinateCalibrationReq();
  InitDefaultsCoordinateCalibrationRes();
  InitDefaultsWriteWordReq();
  InitDefaultsWriteWordRes();
}
}  // namespace protobuf_middle_5flayer_2eproto
namespace middle_layer_pb {
class Answer;
class AnswerDefaultTypeInternal;
extern AnswerDefaultTypeInternal _Answer_default_instance_;
class AppLoginReq;
class AppLoginReqDefaultTypeInternal;
extern AppLoginReqDefaultTypeInternal _AppLoginReq_default_instance_;
class AppLoginRes;
class AppLoginResDefaultTypeInternal;
extern AppLoginResDefaultTypeInternal _AppLoginRes_default_instance_;
class CalCrossSectionStakeArrayReq;
class CalCrossSectionStakeArrayReqDefaultTypeInternal;
extern CalCrossSectionStakeArrayReqDefaultTypeInternal _CalCrossSectionStakeArrayReq_default_instance_;
class CalCrossSectionStakeArrayRes;
class CalCrossSectionStakeArrayResDefaultTypeInternal;
extern CalCrossSectionStakeArrayResDefaultTypeInternal _CalCrossSectionStakeArrayRes_default_instance_;
class CalLaneStakeListReq;
class CalLaneStakeListReqDefaultTypeInternal;
extern CalLaneStakeListReqDefaultTypeInternal _CalLaneStakeListReq_default_instance_;
class CalLaneStakeListRes;
class CalLaneStakeListResDefaultTypeInternal;
extern CalLaneStakeListResDefaultTypeInternal _CalLaneStakeListRes_default_instance_;
class CalLevellingStakeArrayReq;
class CalLevellingStakeArrayReqDefaultTypeInternal;
extern CalLevellingStakeArrayReqDefaultTypeInternal _CalLevellingStakeArrayReq_default_instance_;
class CalLevellingStakeArrayRes;
class CalLevellingStakeArrayResDefaultTypeInternal;
extern CalLevellingStakeArrayResDefaultTypeInternal _CalLevellingStakeArrayRes_default_instance_;
class CalSideStakeListReq;
class CalSideStakeListReqDefaultTypeInternal;
extern CalSideStakeListReqDefaultTypeInternal _CalSideStakeListReq_default_instance_;
class CalSideStakeListRes;
class CalSideStakeListResDefaultTypeInternal;
extern CalSideStakeListResDefaultTypeInternal _CalSideStakeListRes_default_instance_;
class CalSideStakeReq;
class CalSideStakeReqDefaultTypeInternal;
extern CalSideStakeReqDefaultTypeInternal _CalSideStakeReq_default_instance_;
class CalSideStakeRes;
class CalSideStakeResDefaultTypeInternal;
extern CalSideStakeResDefaultTypeInternal _CalSideStakeRes_default_instance_;
class CalSquareStakeArrayReq;
class CalSquareStakeArrayReqDefaultTypeInternal;
extern CalSquareStakeArrayReqDefaultTypeInternal _CalSquareStakeArrayReq_default_instance_;
class CalSquareStakeArrayRes;
class CalSquareStakeArrayResDefaultTypeInternal;
extern CalSquareStakeArrayResDefaultTypeInternal _CalSquareStakeArrayRes_default_instance_;
class CalSquareWidthStakeReq;
class CalSquareWidthStakeReqDefaultTypeInternal;
extern CalSquareWidthStakeReqDefaultTypeInternal _CalSquareWidthStakeReq_default_instance_;
class CalSquareWidthStakeRes;
class CalSquareWidthStakeResDefaultTypeInternal;
extern CalSquareWidthStakeResDefaultTypeInternal _CalSquareWidthStakeRes_default_instance_;
class CalStakesHelpReq;
class CalStakesHelpReqDefaultTypeInternal;
extern CalStakesHelpReqDefaultTypeInternal _CalStakesHelpReq_default_instance_;
class CalStakesHelpRes;
class CalStakesHelpResDefaultTypeInternal;
extern CalStakesHelpResDefaultTypeInternal _CalStakesHelpRes_default_instance_;
class CalStandardSquareParamReq;
class CalStandardSquareParamReqDefaultTypeInternal;
extern CalStandardSquareParamReqDefaultTypeInternal _CalStandardSquareParamReq_default_instance_;
class CalStandardSquareParamRes;
class CalStandardSquareParamResDefaultTypeInternal;
extern CalStandardSquareParamResDefaultTypeInternal _CalStandardSquareParamRes_default_instance_;
class CloudLoginReq;
class CloudLoginReqDefaultTypeInternal;
extern CloudLoginReqDefaultTypeInternal _CloudLoginReq_default_instance_;
class CloudLoginRes;
class CloudLoginResDefaultTypeInternal;
extern CloudLoginResDefaultTypeInternal _CloudLoginRes_default_instance_;
class CoordinateCalibrationReq;
class CoordinateCalibrationReqDefaultTypeInternal;
extern CoordinateCalibrationReqDefaultTypeInternal _CoordinateCalibrationReq_default_instance_;
class CoordinateCalibrationRes;
class CoordinateCalibrationResDefaultTypeInternal;
extern CoordinateCalibrationResDefaultTypeInternal _CoordinateCalibrationRes_default_instance_;
class DeviceTask;
class DeviceTaskDefaultTypeInternal;
extern DeviceTaskDefaultTypeInternal _DeviceTask_default_instance_;
class DrawMidLineParam;
class DrawMidLineParamDefaultTypeInternal;
extern DrawMidLineParamDefaultTypeInternal _DrawMidLineParam_default_instance_;
class DrawSideLineParam;
class DrawSideLineParamDefaultTypeInternal;
extern DrawSideLineParamDefaultTypeInternal _DrawSideLineParam_default_instance_;
class DrawStakesHelpParam;
class DrawStakesHelpParamDefaultTypeInternal;
extern DrawStakesHelpParamDefaultTypeInternal _DrawStakesHelpParam_default_instance_;
class DrawStandardSquareParam;
class DrawStandardSquareParamDefaultTypeInternal;
extern DrawStandardSquareParamDefaultTypeInternal _DrawStandardSquareParam_default_instance_;
class EllipsoidParam;
class EllipsoidParamDefaultTypeInternal;
extern EllipsoidParamDefaultTypeInternal _EllipsoidParam_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class FourParam;
class FourParamDefaultTypeInternal;
extern FourParamDefaultTypeInternal _FourParam_default_instance_;
class ImuAccelMessage;
class ImuAccelMessageDefaultTypeInternal;
extern ImuAccelMessageDefaultTypeInternal _ImuAccelMessage_default_instance_;
class ImuEulerMessage;
class ImuEulerMessageDefaultTypeInternal;
extern ImuEulerMessageDefaultTypeInternal _ImuEulerMessage_default_instance_;
class ImuGyroMessage;
class ImuGyroMessageDefaultTypeInternal;
extern ImuGyroMessageDefaultTypeInternal _ImuGyroMessage_default_instance_;
class LaserResult;
class LaserResultDefaultTypeInternal;
extern LaserResultDefaultTypeInternal _LaserResult_default_instance_;
class MeasureResultNotify;
class MeasureResultNotifyDefaultTypeInternal;
extern MeasureResultNotifyDefaultTypeInternal _MeasureResultNotify_default_instance_;
class MeasureResultNotify_Point;
class MeasureResultNotify_PointDefaultTypeInternal;
extern MeasureResultNotify_PointDefaultTypeInternal _MeasureResultNotify_Point_default_instance_;
class OperationRobotReq;
class OperationRobotReqDefaultTypeInternal;
extern OperationRobotReqDefaultTypeInternal _OperationRobotReq_default_instance_;
class OperationRobotRes;
class OperationRobotResDefaultTypeInternal;
extern OperationRobotResDefaultTypeInternal _OperationRobotRes_default_instance_;
class PlaneCoordinatesParams;
class PlaneCoordinatesParamsDefaultTypeInternal;
extern PlaneCoordinatesParamsDefaultTypeInternal _PlaneCoordinatesParams_default_instance_;
class Point2D;
class Point2DDefaultTypeInternal;
extern Point2DDefaultTypeInternal _Point2D_default_instance_;
class Point3D;
class Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class PointENU;
class PointENUDefaultTypeInternal;
extern PointENUDefaultTypeInternal _PointENU_default_instance_;
class PointLLH;
class PointLLHDefaultTypeInternal;
extern PointLLHDefaultTypeInternal _PointLLH_default_instance_;
class ProjectionParam;
class ProjectionParamDefaultTypeInternal;
extern ProjectionParamDefaultTypeInternal _ProjectionParam_default_instance_;
class PutCrossSectionParam;
class PutCrossSectionParamDefaultTypeInternal;
extern PutCrossSectionParamDefaultTypeInternal _PutCrossSectionParam_default_instance_;
class PutLaneLineParam;
class PutLaneLineParamDefaultTypeInternal;
extern PutLaneLineParamDefaultTypeInternal _PutLaneLineParam_default_instance_;
class PutLevellingParam;
class PutLevellingParamDefaultTypeInternal;
extern PutLevellingParamDefaultTypeInternal _PutLevellingParam_default_instance_;
class PutMidLineParam;
class PutMidLineParamDefaultTypeInternal;
extern PutMidLineParamDefaultTypeInternal _PutMidLineParam_default_instance_;
class PutSideLineParam;
class PutSideLineParamDefaultTypeInternal;
extern PutSideLineParamDefaultTypeInternal _PutSideLineParam_default_instance_;
class Quaternion;
class QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
class Query;
class QueryDefaultTypeInternal;
extern QueryDefaultTypeInternal _Query_default_instance_;
class RobotAutopilotModeReq;
class RobotAutopilotModeReqDefaultTypeInternal;
extern RobotAutopilotModeReqDefaultTypeInternal _RobotAutopilotModeReq_default_instance_;
class RobotAutopilotModeRes;
class RobotAutopilotModeResDefaultTypeInternal;
extern RobotAutopilotModeResDefaultTypeInternal _RobotAutopilotModeRes_default_instance_;
class RobotCoreState;
class RobotCoreStateDefaultTypeInternal;
extern RobotCoreStateDefaultTypeInternal _RobotCoreState_default_instance_;
class RobotCoreStateNotify;
class RobotCoreStateNotifyDefaultTypeInternal;
extern RobotCoreStateNotifyDefaultTypeInternal _RobotCoreStateNotify_default_instance_;
class RobotCoreStateReq;
class RobotCoreStateReqDefaultTypeInternal;
extern RobotCoreStateReqDefaultTypeInternal _RobotCoreStateReq_default_instance_;
class RobotCoreStateRes;
class RobotCoreStateResDefaultTypeInternal;
extern RobotCoreStateResDefaultTypeInternal _RobotCoreStateRes_default_instance_;
class RobotCoreState_BmsBasicMessage;
class RobotCoreState_BmsBasicMessageDefaultTypeInternal;
extern RobotCoreState_BmsBasicMessageDefaultTypeInternal _RobotCoreState_BmsBasicMessage_default_instance_;
class RobotCoreState_MotionStateMessage;
class RobotCoreState_MotionStateMessageDefaultTypeInternal;
extern RobotCoreState_MotionStateMessageDefaultTypeInternal _RobotCoreState_MotionStateMessage_default_instance_;
class RobotCoreState_OdometryMessage;
class RobotCoreState_OdometryMessageDefaultTypeInternal;
extern RobotCoreState_OdometryMessageDefaultTypeInternal _RobotCoreState_OdometryMessage_default_instance_;
class RobotCoreState_RcStateMessage;
class RobotCoreState_RcStateMessageDefaultTypeInternal;
extern RobotCoreState_RcStateMessageDefaultTypeInternal _RobotCoreState_RcStateMessage_default_instance_;
class RobotCoreState_SystemStateMessage;
class RobotCoreState_SystemStateMessageDefaultTypeInternal;
extern RobotCoreState_SystemStateMessageDefaultTypeInternal _RobotCoreState_SystemStateMessage_default_instance_;
class RobotDustingNotify;
class RobotDustingNotifyDefaultTypeInternal;
extern RobotDustingNotifyDefaultTypeInternal _RobotDustingNotify_default_instance_;
class RobotDustingSliderParams;
class RobotDustingSliderParamsDefaultTypeInternal;
extern RobotDustingSliderParamsDefaultTypeInternal _RobotDustingSliderParams_default_instance_;
class RobotLoginReq;
class RobotLoginReqDefaultTypeInternal;
extern RobotLoginReqDefaultTypeInternal _RobotLoginReq_default_instance_;
class RobotLoginRes;
class RobotLoginResDefaultTypeInternal;
extern RobotLoginResDefaultTypeInternal _RobotLoginRes_default_instance_;
class RobotManualOperationReq;
class RobotManualOperationReqDefaultTypeInternal;
extern RobotManualOperationReqDefaultTypeInternal _RobotManualOperationReq_default_instance_;
class RobotManualOperationRes;
class RobotManualOperationResDefaultTypeInternal;
extern RobotManualOperationResDefaultTypeInternal _RobotManualOperationRes_default_instance_;
class RobotSiloParams;
class RobotSiloParamsDefaultTypeInternal;
extern RobotSiloParamsDefaultTypeInternal _RobotSiloParams_default_instance_;
class RtkDataSource;
class RtkDataSourceDefaultTypeInternal;
extern RtkDataSourceDefaultTypeInternal _RtkDataSource_default_instance_;
class RtkOffsetInfo;
class RtkOffsetInfoDefaultTypeInternal;
extern RtkOffsetInfoDefaultTypeInternal _RtkOffsetInfo_default_instance_;
class RtkOperationCmdReq;
class RtkOperationCmdReqDefaultTypeInternal;
extern RtkOperationCmdReqDefaultTypeInternal _RtkOperationCmdReq_default_instance_;
class RtkOperationCmdRes;
class RtkOperationCmdResDefaultTypeInternal;
extern RtkOperationCmdResDefaultTypeInternal _RtkOperationCmdRes_default_instance_;
class RtkResult;
class RtkResultDefaultTypeInternal;
extern RtkResultDefaultTypeInternal _RtkResult_default_instance_;
class SensorInfoNotify;
class SensorInfoNotifyDefaultTypeInternal;
extern SensorInfoNotifyDefaultTypeInternal _SensorInfoNotify_default_instance_;
class StakeDto;
class StakeDtoDefaultTypeInternal;
extern StakeDtoDefaultTypeInternal _StakeDto_default_instance_;
class StakeDtoList;
class StakeDtoListDefaultTypeInternal;
extern StakeDtoListDefaultTypeInternal _StakeDtoList_default_instance_;
class StakeDtoListReq;
class StakeDtoListReqDefaultTypeInternal;
extern StakeDtoListReqDefaultTypeInternal _StakeDtoListReq_default_instance_;
class StakeDtoListRes;
class StakeDtoListResDefaultTypeInternal;
extern StakeDtoListResDefaultTypeInternal _StakeDtoListRes_default_instance_;
class StakeInfo;
class StakeInfoDefaultTypeInternal;
extern StakeInfoDefaultTypeInternal _StakeInfo_default_instance_;
class TargetTrackNotify;
class TargetTrackNotifyDefaultTypeInternal;
extern TargetTrackNotifyDefaultTypeInternal _TargetTrackNotify_default_instance_;
class TargetTrackNotify_Point;
class TargetTrackNotify_PointDefaultTypeInternal;
extern TargetTrackNotify_PointDefaultTypeInternal _TargetTrackNotify_Point_default_instance_;
class TaskState;
class TaskStateDefaultTypeInternal;
extern TaskStateDefaultTypeInternal _TaskState_default_instance_;
class TaskStateNotify;
class TaskStateNotifyDefaultTypeInternal;
extern TaskStateNotifyDefaultTypeInternal _TaskStateNotify_default_instance_;
class WorkEndNotify;
class WorkEndNotifyDefaultTypeInternal;
extern WorkEndNotifyDefaultTypeInternal _WorkEndNotify_default_instance_;
class WorkMessageIssued;
class WorkMessageIssuedDefaultTypeInternal;
extern WorkMessageIssuedDefaultTypeInternal _WorkMessageIssued_default_instance_;
class WorkMessageIssuedRes;
class WorkMessageIssuedResDefaultTypeInternal;
extern WorkMessageIssuedResDefaultTypeInternal _WorkMessageIssuedRes_default_instance_;
class WriteWordReq;
class WriteWordReqDefaultTypeInternal;
extern WriteWordReqDefaultTypeInternal _WriteWordReq_default_instance_;
class WriteWordRes;
class WriteWordResDefaultTypeInternal;
extern WriteWordResDefaultTypeInternal _WriteWordRes_default_instance_;
}  // namespace middle_layer_pb
namespace middle_layer_pb {

enum RobotCoreState_AgxVehicleState {
  RobotCoreState_AgxVehicleState_VEHICLE_STATE_NORMAL = 0,
  RobotCoreState_AgxVehicleState_VEHICLE_STATE_ESTOP = 1,
  RobotCoreState_AgxVehicleState_VEHICLE_STATE_EXCEPTION = 2
};
bool RobotCoreState_AgxVehicleState_IsValid(int value);
const RobotCoreState_AgxVehicleState RobotCoreState_AgxVehicleState_AgxVehicleState_MIN = RobotCoreState_AgxVehicleState_VEHICLE_STATE_NORMAL;
const RobotCoreState_AgxVehicleState RobotCoreState_AgxVehicleState_AgxVehicleState_MAX = RobotCoreState_AgxVehicleState_VEHICLE_STATE_EXCEPTION;
const int RobotCoreState_AgxVehicleState_AgxVehicleState_ARRAYSIZE = RobotCoreState_AgxVehicleState_AgxVehicleState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotCoreState_AgxVehicleState_descriptor();
inline const ::std::string& RobotCoreState_AgxVehicleState_Name(RobotCoreState_AgxVehicleState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotCoreState_AgxVehicleState_descriptor(), value);
}
inline bool RobotCoreState_AgxVehicleState_Parse(
    const ::std::string& name, RobotCoreState_AgxVehicleState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotCoreState_AgxVehicleState>(
    RobotCoreState_AgxVehicleState_descriptor(), name, value);
}
enum RobotCoreState_AgxControlMode {
  RobotCoreState_AgxControlMode_CONTROL_MODE_RC = 0,
  RobotCoreState_AgxControlMode_CONTROL_MODE_CAN = 1,
  RobotCoreState_AgxControlMode_CONTROL_MODE_UART = 2
};
bool RobotCoreState_AgxControlMode_IsValid(int value);
const RobotCoreState_AgxControlMode RobotCoreState_AgxControlMode_AgxControlMode_MIN = RobotCoreState_AgxControlMode_CONTROL_MODE_RC;
const RobotCoreState_AgxControlMode RobotCoreState_AgxControlMode_AgxControlMode_MAX = RobotCoreState_AgxControlMode_CONTROL_MODE_UART;
const int RobotCoreState_AgxControlMode_AgxControlMode_ARRAYSIZE = RobotCoreState_AgxControlMode_AgxControlMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotCoreState_AgxControlMode_descriptor();
inline const ::std::string& RobotCoreState_AgxControlMode_Name(RobotCoreState_AgxControlMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotCoreState_AgxControlMode_descriptor(), value);
}
inline bool RobotCoreState_AgxControlMode_Parse(
    const ::std::string& name, RobotCoreState_AgxControlMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotCoreState_AgxControlMode>(
    RobotCoreState_AgxControlMode_descriptor(), name, value);
}
enum RobotCoreState_AgxRcSwitchState {
  RobotCoreState_AgxRcSwitchState_RC_SWITCH_UP = 0,
  RobotCoreState_AgxRcSwitchState_RC_SWITCH_MIDDLE = 1,
  RobotCoreState_AgxRcSwitchState_RC_SWITCH_DOWN = 2
};
bool RobotCoreState_AgxRcSwitchState_IsValid(int value);
const RobotCoreState_AgxRcSwitchState RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_MIN = RobotCoreState_AgxRcSwitchState_RC_SWITCH_UP;
const RobotCoreState_AgxRcSwitchState RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_MAX = RobotCoreState_AgxRcSwitchState_RC_SWITCH_DOWN;
const int RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_ARRAYSIZE = RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotCoreState_AgxRcSwitchState_descriptor();
inline const ::std::string& RobotCoreState_AgxRcSwitchState_Name(RobotCoreState_AgxRcSwitchState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotCoreState_AgxRcSwitchState_descriptor(), value);
}
inline bool RobotCoreState_AgxRcSwitchState_Parse(
    const ::std::string& name, RobotCoreState_AgxRcSwitchState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotCoreState_AgxRcSwitchState>(
    RobotCoreState_AgxRcSwitchState_descriptor(), name, value);
}
enum TaskState_enState {
  TaskState_enState_TASK_STATE_INVALID = 255,
  TaskState_enState_TASK_STATE_NORMAL = 0,
  TaskState_enState_TASK_STATE_PLAY = 1,
  TaskState_enState_TASK_STATE_PAUSE = 2,
  TaskState_enState_TASK_STATE_STOP = 3,
  TaskState_enState_TASK_STATE_UNKNOWN = 15
};
bool TaskState_enState_IsValid(int value);
const TaskState_enState TaskState_enState_enState_MIN = TaskState_enState_TASK_STATE_NORMAL;
const TaskState_enState TaskState_enState_enState_MAX = TaskState_enState_TASK_STATE_INVALID;
const int TaskState_enState_enState_ARRAYSIZE = TaskState_enState_enState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskState_enState_descriptor();
inline const ::std::string& TaskState_enState_Name(TaskState_enState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskState_enState_descriptor(), value);
}
inline bool TaskState_enState_Parse(
    const ::std::string& name, TaskState_enState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskState_enState>(
    TaskState_enState_descriptor(), name, value);
}
enum RtkOperationCmdReq_enOperationType {
  RtkOperationCmdReq_enOperationType_OPERATION_TYPE_INVALID = 255,
  RtkOperationCmdReq_enOperationType_OPERATION_TYPE_CONNECT = 0,
  RtkOperationCmdReq_enOperationType_OPERATION_TYPE_DISCONNECT = 1
};
bool RtkOperationCmdReq_enOperationType_IsValid(int value);
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq_enOperationType_enOperationType_MIN = RtkOperationCmdReq_enOperationType_OPERATION_TYPE_CONNECT;
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq_enOperationType_enOperationType_MAX = RtkOperationCmdReq_enOperationType_OPERATION_TYPE_INVALID;
const int RtkOperationCmdReq_enOperationType_enOperationType_ARRAYSIZE = RtkOperationCmdReq_enOperationType_enOperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RtkOperationCmdReq_enOperationType_descriptor();
inline const ::std::string& RtkOperationCmdReq_enOperationType_Name(RtkOperationCmdReq_enOperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RtkOperationCmdReq_enOperationType_descriptor(), value);
}
inline bool RtkOperationCmdReq_enOperationType_Parse(
    const ::std::string& name, RtkOperationCmdReq_enOperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RtkOperationCmdReq_enOperationType>(
    RtkOperationCmdReq_enOperationType_descriptor(), name, value);
}
enum RobotManualOperationReq_enDirectionType {
  RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_INVALID = 255,
  RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_LEFT = 0,
  RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_RIGHT = 1,
  RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_FRONT = 2,
  RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_AFTER = 3
};
bool RobotManualOperationReq_enDirectionType_IsValid(int value);
const RobotManualOperationReq_enDirectionType RobotManualOperationReq_enDirectionType_enDirectionType_MIN = RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_LEFT;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq_enDirectionType_enDirectionType_MAX = RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_INVALID;
const int RobotManualOperationReq_enDirectionType_enDirectionType_ARRAYSIZE = RobotManualOperationReq_enDirectionType_enDirectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotManualOperationReq_enDirectionType_descriptor();
inline const ::std::string& RobotManualOperationReq_enDirectionType_Name(RobotManualOperationReq_enDirectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotManualOperationReq_enDirectionType_descriptor(), value);
}
inline bool RobotManualOperationReq_enDirectionType_Parse(
    const ::std::string& name, RobotManualOperationReq_enDirectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotManualOperationReq_enDirectionType>(
    RobotManualOperationReq_enDirectionType_descriptor(), name, value);
}
enum RobotDustingNotify_DustingSwitchType {
  RobotDustingNotify_DustingSwitchType_switch_close = 0,
  RobotDustingNotify_DustingSwitchType_switch_open = 1
};
bool RobotDustingNotify_DustingSwitchType_IsValid(int value);
const RobotDustingNotify_DustingSwitchType RobotDustingNotify_DustingSwitchType_DustingSwitchType_MIN = RobotDustingNotify_DustingSwitchType_switch_close;
const RobotDustingNotify_DustingSwitchType RobotDustingNotify_DustingSwitchType_DustingSwitchType_MAX = RobotDustingNotify_DustingSwitchType_switch_open;
const int RobotDustingNotify_DustingSwitchType_DustingSwitchType_ARRAYSIZE = RobotDustingNotify_DustingSwitchType_DustingSwitchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotDustingNotify_DustingSwitchType_descriptor();
inline const ::std::string& RobotDustingNotify_DustingSwitchType_Name(RobotDustingNotify_DustingSwitchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotDustingNotify_DustingSwitchType_descriptor(), value);
}
inline bool RobotDustingNotify_DustingSwitchType_Parse(
    const ::std::string& name, RobotDustingNotify_DustingSwitchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotDustingNotify_DustingSwitchType>(
    RobotDustingNotify_DustingSwitchType_descriptor(), name, value);
}
enum ErrorCode {
  kNoError = 0,
  kInvalidError = 2,
  kUnknownError = 3
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = kNoError;
const ErrorCode ErrorCode_MAX = kUnknownError;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum WorkType {
  PUT_MID_LINE = 1,
  PUT_SIDE_LINE = 2,
  PUT_LEVELLING_PARAM = 3,
  PUT_LANE_LINE = 4,
  PUT_CROSS_SECTION = 5,
  DRAW_STANDARD_SQUARE = 6,
  DRAW_MID_LINE_PARAM = 7,
  DRAW_SIDE_LINE_PARAM = 8,
  DRAW_STAKES_HELP_PARAM = 9,
  DRAW_LANE_LINE = 16
};
bool WorkType_IsValid(int value);
const WorkType WorkType_MIN = PUT_MID_LINE;
const WorkType WorkType_MAX = DRAW_LANE_LINE;
const int WorkType_ARRAYSIZE = WorkType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorkType_descriptor();
inline const ::std::string& WorkType_Name(WorkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorkType_descriptor(), value);
}
inline bool WorkType_Parse(
    const ::std::string& name, WorkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorkType>(
    WorkType_descriptor(), name, value);
}
enum enOperationType {
  OPERATION_TYPE_INVALID = 255,
  OPERATION_TYPE_PLAY = 0,
  OPERATION_TYPE_PAUSE = 1,
  OPERATION_TYPE_STOP = 2,
  OPERATION_TYPE_ADD_MATERIAL = 3
};
bool enOperationType_IsValid(int value);
const enOperationType enOperationType_MIN = OPERATION_TYPE_PLAY;
const enOperationType enOperationType_MAX = OPERATION_TYPE_INVALID;
const int enOperationType_ARRAYSIZE = enOperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enOperationType_descriptor();
inline const ::std::string& enOperationType_Name(enOperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enOperationType_descriptor(), value);
}
inline bool enOperationType_Parse(
    const ::std::string& name, enOperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enOperationType>(
    enOperationType_descriptor(), name, value);
}
// ===================================================================

class Query : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.Query) */ {
 public:
  Query();
  virtual ~Query();

  Query(const Query& from);

  inline Query& operator=(const Query& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Query(Query&& from) noexcept
    : Query() {
    *this = ::std::move(from);
  }

  inline Query& operator=(Query&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Query& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Query* internal_default_instance() {
    return reinterpret_cast<const Query*>(
               &_Query_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Query* other);
  friend void swap(Query& a, Query& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Query* New() const PROTOBUF_FINAL { return New(NULL); }

  Query* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Query& from);
  void MergeFrom(const Query& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Query* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string question = 3;
  int question_size() const;
  void clear_question();
  static const int kQuestionFieldNumber = 3;
  const ::std::string& question(int index) const;
  ::std::string* mutable_question(int index);
  void set_question(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_question(int index, ::std::string&& value);
  #endif
  void set_question(int index, const char* value);
  void set_question(int index, const char* value, size_t size);
  ::std::string* add_question();
  void add_question(const ::std::string& value);
  #if LANG_CXX11
  void add_question(::std::string&& value);
  #endif
  void add_question(const char* value);
  void add_question(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& question() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_question();

  // required string questioner = 2;
  bool has_questioner() const;
  void clear_questioner();
  static const int kQuestionerFieldNumber = 2;
  const ::std::string& questioner() const;
  void set_questioner(const ::std::string& value);
  #if LANG_CXX11
  void set_questioner(::std::string&& value);
  #endif
  void set_questioner(const char* value);
  void set_questioner(const char* value, size_t size);
  ::std::string* mutable_questioner();
  ::std::string* release_questioner();
  void set_allocated_questioner(::std::string* questioner);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.Query)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_questioner();
  void clear_has_questioner();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> question_;
  ::google::protobuf::internal::ArenaStringPtr questioner_;
  ::google::protobuf::int64 id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsQueryImpl();
};
// -------------------------------------------------------------------

class Answer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.Answer) */ {
 public:
  Answer();
  virtual ~Answer();

  Answer(const Answer& from);

  inline Answer& operator=(const Answer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Answer(Answer&& from) noexcept
    : Answer() {
    *this = ::std::move(from);
  }

  inline Answer& operator=(Answer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Answer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Answer* internal_default_instance() {
    return reinterpret_cast<const Answer*>(
               &_Answer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Answer* other);
  friend void swap(Answer& a, Answer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Answer* New() const PROTOBUF_FINAL { return New(NULL); }

  Answer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Answer& from);
  void MergeFrom(const Answer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Answer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string solution = 4;
  int solution_size() const;
  void clear_solution();
  static const int kSolutionFieldNumber = 4;
  const ::std::string& solution(int index) const;
  ::std::string* mutable_solution(int index);
  void set_solution(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_solution(int index, ::std::string&& value);
  #endif
  void set_solution(int index, const char* value);
  void set_solution(int index, const char* value, size_t size);
  ::std::string* add_solution();
  void add_solution(const ::std::string& value);
  #if LANG_CXX11
  void add_solution(::std::string&& value);
  #endif
  void add_solution(const char* value);
  void add_solution(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& solution() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_solution();

  // required string questioner = 2;
  bool has_questioner() const;
  void clear_questioner();
  static const int kQuestionerFieldNumber = 2;
  const ::std::string& questioner() const;
  void set_questioner(const ::std::string& value);
  #if LANG_CXX11
  void set_questioner(::std::string&& value);
  #endif
  void set_questioner(const char* value);
  void set_questioner(const char* value, size_t size);
  ::std::string* mutable_questioner();
  ::std::string* release_questioner();
  void set_allocated_questioner(::std::string* questioner);

  // required string answerer = 3;
  bool has_answerer() const;
  void clear_answerer();
  static const int kAnswererFieldNumber = 3;
  const ::std::string& answerer() const;
  void set_answerer(const ::std::string& value);
  #if LANG_CXX11
  void set_answerer(::std::string&& value);
  #endif
  void set_answerer(const char* value);
  void set_answerer(const char* value, size_t size);
  ::std::string* mutable_answerer();
  ::std::string* release_answerer();
  void set_allocated_answerer(::std::string* answerer);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.Answer)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_questioner();
  void clear_has_questioner();
  void set_has_answerer();
  void clear_has_answerer();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> solution_;
  ::google::protobuf::internal::ArenaStringPtr questioner_;
  ::google::protobuf::internal::ArenaStringPtr answerer_;
  ::google::protobuf::int64 id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsAnswerImpl();
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.Empty)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsEmptyImpl();
};
// -------------------------------------------------------------------

class PointENU : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PointENU) */ {
 public:
  PointENU();
  virtual ~PointENU();

  PointENU(const PointENU& from);

  inline PointENU& operator=(const PointENU& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointENU(PointENU&& from) noexcept
    : PointENU() {
    *this = ::std::move(from);
  }

  inline PointENU& operator=(PointENU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointENU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointENU* internal_default_instance() {
    return reinterpret_cast<const PointENU*>(
               &_PointENU_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PointENU* other);
  friend void swap(PointENU& a, PointENU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointENU* New() const PROTOBUF_FINAL { return New(NULL); }

  PointENU* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PointENU& from);
  void MergeFrom(const PointENU& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PointENU* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double z = 3 [default = 0];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PointENU)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double z_;
  double x_;
  double y_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPointENUImpl();
};
// -------------------------------------------------------------------

class PointLLH : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PointLLH) */ {
 public:
  PointLLH();
  virtual ~PointLLH();

  PointLLH(const PointLLH& from);

  inline PointLLH& operator=(const PointLLH& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointLLH(PointLLH&& from) noexcept
    : PointLLH() {
    *this = ::std::move(from);
  }

  inline PointLLH& operator=(PointLLH&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointLLH& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointLLH* internal_default_instance() {
    return reinterpret_cast<const PointLLH*>(
               &_PointLLH_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PointLLH* other);
  friend void swap(PointLLH& a, PointLLH& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointLLH* New() const PROTOBUF_FINAL { return New(NULL); }

  PointLLH* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PointLLH& from);
  void MergeFrom(const PointLLH& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PointLLH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double height = 3 [default = 0];
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  double height() const;
  void set_height(double value);

  // optional double heading = 4 [default = 0];
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 4;
  double heading() const;
  void set_heading(double value);

  // optional double lon = 1 [default = nan];
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 1;
  double lon() const;
  void set_lon(double value);

  // optional double lat = 2 [default = nan];
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 2;
  double lat() const;
  void set_lat(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PointLLH)
 private:
  void set_has_lon();
  void clear_has_lon();
  void set_has_lat();
  void clear_has_lat();
  void set_has_height();
  void clear_has_height();
  void set_has_heading();
  void clear_has_heading();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double height_;
  double heading_;
  double lon_;
  double lat_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPointLLHImpl();
};
// -------------------------------------------------------------------

class Point2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.Point2D) */ {
 public:
  Point2D();
  virtual ~Point2D();

  Point2D(const Point2D& from);

  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point2D(Point2D&& from) noexcept
    : Point2D() {
    *this = ::std::move(from);
  }

  inline Point2D& operator=(Point2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point2D* internal_default_instance() {
    return reinterpret_cast<const Point2D*>(
               &_Point2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Point2D* other);
  friend void swap(Point2D& a, Point2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point2D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point2D& from);
  void MergeFrom(const Point2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.Point2D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double x_;
  double y_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPoint2DImpl();
};
// -------------------------------------------------------------------

class Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3D(Point3D&& from) noexcept
    : Point3D() {
    *this = ::std::move(from);
  }

  inline Point3D& operator=(Point3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
               &_Point3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Point3D* other);
  friend void swap(Point3D& a, Point3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3 [default = nan];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.Point3D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPoint3DImpl();
};
// -------------------------------------------------------------------

class Quaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quaternion(Quaternion&& from) noexcept
    : Quaternion() {
    *this = ::std::move(from);
  }

  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quaternion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
               &_Quaternion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Quaternion* other);
  friend void swap(Quaternion& a, Quaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quaternion* New() const PROTOBUF_FINAL { return New(NULL); }

  Quaternion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double qx = 1 [default = nan];
  bool has_qx() const;
  void clear_qx();
  static const int kQxFieldNumber = 1;
  double qx() const;
  void set_qx(double value);

  // optional double qy = 2 [default = nan];
  bool has_qy() const;
  void clear_qy();
  static const int kQyFieldNumber = 2;
  double qy() const;
  void set_qy(double value);

  // optional double qz = 3 [default = nan];
  bool has_qz() const;
  void clear_qz();
  static const int kQzFieldNumber = 3;
  double qz() const;
  void set_qz(double value);

  // optional double qw = 4 [default = nan];
  bool has_qw() const;
  void clear_qw();
  static const int kQwFieldNumber = 4;
  double qw() const;
  void set_qw(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.Quaternion)
 private:
  void set_has_qx();
  void clear_has_qx();
  void set_has_qy();
  void clear_has_qy();
  void set_has_qz();
  void clear_has_qz();
  void set_has_qw();
  void clear_has_qw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double qx_;
  double qy_;
  double qz_;
  double qw_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsQuaternionImpl();
};
// -------------------------------------------------------------------

class ImuAccelMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.ImuAccelMessage) */ {
 public:
  ImuAccelMessage();
  virtual ~ImuAccelMessage();

  ImuAccelMessage(const ImuAccelMessage& from);

  inline ImuAccelMessage& operator=(const ImuAccelMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImuAccelMessage(ImuAccelMessage&& from) noexcept
    : ImuAccelMessage() {
    *this = ::std::move(from);
  }

  inline ImuAccelMessage& operator=(ImuAccelMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImuAccelMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImuAccelMessage* internal_default_instance() {
    return reinterpret_cast<const ImuAccelMessage*>(
               &_ImuAccelMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ImuAccelMessage* other);
  friend void swap(ImuAccelMessage& a, ImuAccelMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImuAccelMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ImuAccelMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImuAccelMessage& from);
  void MergeFrom(const ImuAccelMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImuAccelMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float accel_x = 1;
  bool has_accel_x() const;
  void clear_accel_x();
  static const int kAccelXFieldNumber = 1;
  float accel_x() const;
  void set_accel_x(float value);

  // required float accel_y = 2;
  bool has_accel_y() const;
  void clear_accel_y();
  static const int kAccelYFieldNumber = 2;
  float accel_y() const;
  void set_accel_y(float value);

  // required float accel_z = 3;
  bool has_accel_z() const;
  void clear_accel_z();
  static const int kAccelZFieldNumber = 3;
  float accel_z() const;
  void set_accel_z(float value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.ImuAccelMessage)
 private:
  void set_has_accel_x();
  void clear_has_accel_x();
  void set_has_accel_y();
  void clear_has_accel_y();
  void set_has_accel_z();
  void clear_has_accel_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float accel_x_;
  float accel_y_;
  float accel_z_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsImuAccelMessageImpl();
};
// -------------------------------------------------------------------

class ImuGyroMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.ImuGyroMessage) */ {
 public:
  ImuGyroMessage();
  virtual ~ImuGyroMessage();

  ImuGyroMessage(const ImuGyroMessage& from);

  inline ImuGyroMessage& operator=(const ImuGyroMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImuGyroMessage(ImuGyroMessage&& from) noexcept
    : ImuGyroMessage() {
    *this = ::std::move(from);
  }

  inline ImuGyroMessage& operator=(ImuGyroMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImuGyroMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImuGyroMessage* internal_default_instance() {
    return reinterpret_cast<const ImuGyroMessage*>(
               &_ImuGyroMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ImuGyroMessage* other);
  friend void swap(ImuGyroMessage& a, ImuGyroMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImuGyroMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ImuGyroMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImuGyroMessage& from);
  void MergeFrom(const ImuGyroMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImuGyroMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float gyro_x = 1;
  bool has_gyro_x() const;
  void clear_gyro_x();
  static const int kGyroXFieldNumber = 1;
  float gyro_x() const;
  void set_gyro_x(float value);

  // required float gyro_y = 2;
  bool has_gyro_y() const;
  void clear_gyro_y();
  static const int kGyroYFieldNumber = 2;
  float gyro_y() const;
  void set_gyro_y(float value);

  // required float gyro_z = 3;
  bool has_gyro_z() const;
  void clear_gyro_z();
  static const int kGyroZFieldNumber = 3;
  float gyro_z() const;
  void set_gyro_z(float value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.ImuGyroMessage)
 private:
  void set_has_gyro_x();
  void clear_has_gyro_x();
  void set_has_gyro_y();
  void clear_has_gyro_y();
  void set_has_gyro_z();
  void clear_has_gyro_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float gyro_x_;
  float gyro_y_;
  float gyro_z_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsImuGyroMessageImpl();
};
// -------------------------------------------------------------------

class ImuEulerMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.ImuEulerMessage) */ {
 public:
  ImuEulerMessage();
  virtual ~ImuEulerMessage();

  ImuEulerMessage(const ImuEulerMessage& from);

  inline ImuEulerMessage& operator=(const ImuEulerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImuEulerMessage(ImuEulerMessage&& from) noexcept
    : ImuEulerMessage() {
    *this = ::std::move(from);
  }

  inline ImuEulerMessage& operator=(ImuEulerMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImuEulerMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImuEulerMessage* internal_default_instance() {
    return reinterpret_cast<const ImuEulerMessage*>(
               &_ImuEulerMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ImuEulerMessage* other);
  friend void swap(ImuEulerMessage& a, ImuEulerMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImuEulerMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ImuEulerMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImuEulerMessage& from);
  void MergeFrom(const ImuEulerMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImuEulerMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float yaw = 1;
  bool has_yaw() const;
  void clear_yaw();
  static const int kYawFieldNumber = 1;
  float yaw() const;
  void set_yaw(float value);

  // required float pitch = 2;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 2;
  float pitch() const;
  void set_pitch(float value);

  // required float roll = 3;
  bool has_roll() const;
  void clear_roll();
  static const int kRollFieldNumber = 3;
  float roll() const;
  void set_roll(float value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.ImuEulerMessage)
 private:
  void set_has_yaw();
  void clear_has_yaw();
  void set_has_pitch();
  void clear_has_pitch();
  void set_has_roll();
  void clear_has_roll();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float yaw_;
  float pitch_;
  float roll_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsImuEulerMessageImpl();
};
// -------------------------------------------------------------------

class RobotCoreStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreStateReq) */ {
 public:
  RobotCoreStateReq();
  virtual ~RobotCoreStateReq();

  RobotCoreStateReq(const RobotCoreStateReq& from);

  inline RobotCoreStateReq& operator=(const RobotCoreStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreStateReq(RobotCoreStateReq&& from) noexcept
    : RobotCoreStateReq() {
    *this = ::std::move(from);
  }

  inline RobotCoreStateReq& operator=(RobotCoreStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreStateReq* internal_default_instance() {
    return reinterpret_cast<const RobotCoreStateReq*>(
               &_RobotCoreStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RobotCoreStateReq* other);
  friend void swap(RobotCoreStateReq& a, RobotCoreStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreStateReq& from);
  void MergeFrom(const RobotCoreStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreStateReq)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateReqImpl();
};
// -------------------------------------------------------------------

class RobotCoreState_SystemStateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreState.SystemStateMessage) */ {
 public:
  RobotCoreState_SystemStateMessage();
  virtual ~RobotCoreState_SystemStateMessage();

  RobotCoreState_SystemStateMessage(const RobotCoreState_SystemStateMessage& from);

  inline RobotCoreState_SystemStateMessage& operator=(const RobotCoreState_SystemStateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreState_SystemStateMessage(RobotCoreState_SystemStateMessage&& from) noexcept
    : RobotCoreState_SystemStateMessage() {
    *this = ::std::move(from);
  }

  inline RobotCoreState_SystemStateMessage& operator=(RobotCoreState_SystemStateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreState_SystemStateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreState_SystemStateMessage* internal_default_instance() {
    return reinterpret_cast<const RobotCoreState_SystemStateMessage*>(
               &_RobotCoreState_SystemStateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RobotCoreState_SystemStateMessage* other);
  friend void swap(RobotCoreState_SystemStateMessage& a, RobotCoreState_SystemStateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreState_SystemStateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreState_SystemStateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreState_SystemStateMessage& from);
  void MergeFrom(const RobotCoreState_SystemStateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreState_SystemStateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.RobotCoreState.AgxVehicleState vehicle_state = 1;
  bool has_vehicle_state() const;
  void clear_vehicle_state();
  static const int kVehicleStateFieldNumber = 1;
  ::middle_layer_pb::RobotCoreState_AgxVehicleState vehicle_state() const;
  void set_vehicle_state(::middle_layer_pb::RobotCoreState_AgxVehicleState value);

  // optional .middle_layer_pb.RobotCoreState.AgxControlMode control_mode = 2;
  bool has_control_mode() const;
  void clear_control_mode();
  static const int kControlModeFieldNumber = 2;
  ::middle_layer_pb::RobotCoreState_AgxControlMode control_mode() const;
  void set_control_mode(::middle_layer_pb::RobotCoreState_AgxControlMode value);

  // optional float battery_voltage = 3;
  bool has_battery_voltage() const;
  void clear_battery_voltage();
  static const int kBatteryVoltageFieldNumber = 3;
  float battery_voltage() const;
  void set_battery_voltage(float value);

  // optional int32 error_code = 4;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 4;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreState.SystemStateMessage)
 private:
  void set_has_vehicle_state();
  void clear_has_vehicle_state();
  void set_has_control_mode();
  void clear_has_control_mode();
  void set_has_battery_voltage();
  void clear_has_battery_voltage();
  void set_has_error_code();
  void clear_has_error_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int vehicle_state_;
  int control_mode_;
  float battery_voltage_;
  ::google::protobuf::int32 error_code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_SystemStateMessageImpl();
};
// -------------------------------------------------------------------

class RobotCoreState_MotionStateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreState.MotionStateMessage) */ {
 public:
  RobotCoreState_MotionStateMessage();
  virtual ~RobotCoreState_MotionStateMessage();

  RobotCoreState_MotionStateMessage(const RobotCoreState_MotionStateMessage& from);

  inline RobotCoreState_MotionStateMessage& operator=(const RobotCoreState_MotionStateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreState_MotionStateMessage(RobotCoreState_MotionStateMessage&& from) noexcept
    : RobotCoreState_MotionStateMessage() {
    *this = ::std::move(from);
  }

  inline RobotCoreState_MotionStateMessage& operator=(RobotCoreState_MotionStateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreState_MotionStateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreState_MotionStateMessage* internal_default_instance() {
    return reinterpret_cast<const RobotCoreState_MotionStateMessage*>(
               &_RobotCoreState_MotionStateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RobotCoreState_MotionStateMessage* other);
  friend void swap(RobotCoreState_MotionStateMessage& a, RobotCoreState_MotionStateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreState_MotionStateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreState_MotionStateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreState_MotionStateMessage& from);
  void MergeFrom(const RobotCoreState_MotionStateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreState_MotionStateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float linear_velocity = 1;
  bool has_linear_velocity() const;
  void clear_linear_velocity();
  static const int kLinearVelocityFieldNumber = 1;
  float linear_velocity() const;
  void set_linear_velocity(float value);

  // optional float angular_velocity = 2;
  bool has_angular_velocity() const;
  void clear_angular_velocity();
  static const int kAngularVelocityFieldNumber = 2;
  float angular_velocity() const;
  void set_angular_velocity(float value);

  // optional float lateral_velocity = 3;
  bool has_lateral_velocity() const;
  void clear_lateral_velocity();
  static const int kLateralVelocityFieldNumber = 3;
  float lateral_velocity() const;
  void set_lateral_velocity(float value);

  // optional float steering_angle = 4;
  bool has_steering_angle() const;
  void clear_steering_angle();
  static const int kSteeringAngleFieldNumber = 4;
  float steering_angle() const;
  void set_steering_angle(float value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreState.MotionStateMessage)
 private:
  void set_has_linear_velocity();
  void clear_has_linear_velocity();
  void set_has_angular_velocity();
  void clear_has_angular_velocity();
  void set_has_lateral_velocity();
  void clear_has_lateral_velocity();
  void set_has_steering_angle();
  void clear_has_steering_angle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float linear_velocity_;
  float angular_velocity_;
  float lateral_velocity_;
  float steering_angle_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_MotionStateMessageImpl();
};
// -------------------------------------------------------------------

class RobotCoreState_RcStateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreState.RcStateMessage) */ {
 public:
  RobotCoreState_RcStateMessage();
  virtual ~RobotCoreState_RcStateMessage();

  RobotCoreState_RcStateMessage(const RobotCoreState_RcStateMessage& from);

  inline RobotCoreState_RcStateMessage& operator=(const RobotCoreState_RcStateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreState_RcStateMessage(RobotCoreState_RcStateMessage&& from) noexcept
    : RobotCoreState_RcStateMessage() {
    *this = ::std::move(from);
  }

  inline RobotCoreState_RcStateMessage& operator=(RobotCoreState_RcStateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreState_RcStateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreState_RcStateMessage* internal_default_instance() {
    return reinterpret_cast<const RobotCoreState_RcStateMessage*>(
               &_RobotCoreState_RcStateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(RobotCoreState_RcStateMessage* other);
  friend void swap(RobotCoreState_RcStateMessage& a, RobotCoreState_RcStateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreState_RcStateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreState_RcStateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreState_RcStateMessage& from);
  void MergeFrom(const RobotCoreState_RcStateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreState_RcStateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swa = 1;
  bool has_swa() const;
  void clear_swa();
  static const int kSwaFieldNumber = 1;
  ::middle_layer_pb::RobotCoreState_AgxRcSwitchState swa() const;
  void set_swa(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value);

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swb = 2;
  bool has_swb() const;
  void clear_swb();
  static const int kSwbFieldNumber = 2;
  ::middle_layer_pb::RobotCoreState_AgxRcSwitchState swb() const;
  void set_swb(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value);

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swc = 3;
  bool has_swc() const;
  void clear_swc();
  static const int kSwcFieldNumber = 3;
  ::middle_layer_pb::RobotCoreState_AgxRcSwitchState swc() const;
  void set_swc(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value);

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swd = 4;
  bool has_swd() const;
  void clear_swd();
  static const int kSwdFieldNumber = 4;
  ::middle_layer_pb::RobotCoreState_AgxRcSwitchState swd() const;
  void set_swd(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value);

  // optional int32 stick_right_v = 5;
  bool has_stick_right_v() const;
  void clear_stick_right_v();
  static const int kStickRightVFieldNumber = 5;
  ::google::protobuf::int32 stick_right_v() const;
  void set_stick_right_v(::google::protobuf::int32 value);

  // optional int32 stick_right_h = 6;
  bool has_stick_right_h() const;
  void clear_stick_right_h();
  static const int kStickRightHFieldNumber = 6;
  ::google::protobuf::int32 stick_right_h() const;
  void set_stick_right_h(::google::protobuf::int32 value);

  // optional int32 stick_left_v = 7;
  bool has_stick_left_v() const;
  void clear_stick_left_v();
  static const int kStickLeftVFieldNumber = 7;
  ::google::protobuf::int32 stick_left_v() const;
  void set_stick_left_v(::google::protobuf::int32 value);

  // optional int32 stick_left_h = 8;
  bool has_stick_left_h() const;
  void clear_stick_left_h();
  static const int kStickLeftHFieldNumber = 8;
  ::google::protobuf::int32 stick_left_h() const;
  void set_stick_left_h(::google::protobuf::int32 value);

  // optional int32 var_a = 9;
  bool has_var_a() const;
  void clear_var_a();
  static const int kVarAFieldNumber = 9;
  ::google::protobuf::int32 var_a() const;
  void set_var_a(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreState.RcStateMessage)
 private:
  void set_has_swa();
  void clear_has_swa();
  void set_has_swb();
  void clear_has_swb();
  void set_has_swc();
  void clear_has_swc();
  void set_has_swd();
  void clear_has_swd();
  void set_has_stick_right_v();
  void clear_has_stick_right_v();
  void set_has_stick_right_h();
  void clear_has_stick_right_h();
  void set_has_stick_left_v();
  void clear_has_stick_left_v();
  void set_has_stick_left_h();
  void clear_has_stick_left_h();
  void set_has_var_a();
  void clear_has_var_a();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int swa_;
  int swb_;
  int swc_;
  int swd_;
  ::google::protobuf::int32 stick_right_v_;
  ::google::protobuf::int32 stick_right_h_;
  ::google::protobuf::int32 stick_left_v_;
  ::google::protobuf::int32 stick_left_h_;
  ::google::protobuf::int32 var_a_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_RcStateMessageImpl();
};
// -------------------------------------------------------------------

class RobotCoreState_BmsBasicMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreState.BmsBasicMessage) */ {
 public:
  RobotCoreState_BmsBasicMessage();
  virtual ~RobotCoreState_BmsBasicMessage();

  RobotCoreState_BmsBasicMessage(const RobotCoreState_BmsBasicMessage& from);

  inline RobotCoreState_BmsBasicMessage& operator=(const RobotCoreState_BmsBasicMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreState_BmsBasicMessage(RobotCoreState_BmsBasicMessage&& from) noexcept
    : RobotCoreState_BmsBasicMessage() {
    *this = ::std::move(from);
  }

  inline RobotCoreState_BmsBasicMessage& operator=(RobotCoreState_BmsBasicMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreState_BmsBasicMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreState_BmsBasicMessage* internal_default_instance() {
    return reinterpret_cast<const RobotCoreState_BmsBasicMessage*>(
               &_RobotCoreState_BmsBasicMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(RobotCoreState_BmsBasicMessage* other);
  friend void swap(RobotCoreState_BmsBasicMessage& a, RobotCoreState_BmsBasicMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreState_BmsBasicMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreState_BmsBasicMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreState_BmsBasicMessage& from);
  void MergeFrom(const RobotCoreState_BmsBasicMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreState_BmsBasicMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 battery_soc = 1;
  bool has_battery_soc() const;
  void clear_battery_soc();
  static const int kBatterySocFieldNumber = 1;
  ::google::protobuf::uint32 battery_soc() const;
  void set_battery_soc(::google::protobuf::uint32 value);

  // optional uint32 battery_soh = 2;
  bool has_battery_soh() const;
  void clear_battery_soh();
  static const int kBatterySohFieldNumber = 2;
  ::google::protobuf::uint32 battery_soh() const;
  void set_battery_soh(::google::protobuf::uint32 value);

  // optional float voltage = 3;
  bool has_voltage() const;
  void clear_voltage();
  static const int kVoltageFieldNumber = 3;
  float voltage() const;
  void set_voltage(float value);

  // optional float current = 4;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 4;
  float current() const;
  void set_current(float value);

  // optional float temperature = 5;
  bool has_temperature() const;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 5;
  float temperature() const;
  void set_temperature(float value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreState.BmsBasicMessage)
 private:
  void set_has_battery_soc();
  void clear_has_battery_soc();
  void set_has_battery_soh();
  void clear_has_battery_soh();
  void set_has_voltage();
  void clear_has_voltage();
  void set_has_current();
  void clear_has_current();
  void set_has_temperature();
  void clear_has_temperature();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 battery_soc_;
  ::google::protobuf::uint32 battery_soh_;
  float voltage_;
  float current_;
  float temperature_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_BmsBasicMessageImpl();
};
// -------------------------------------------------------------------

class RobotCoreState_OdometryMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreState.OdometryMessage) */ {
 public:
  RobotCoreState_OdometryMessage();
  virtual ~RobotCoreState_OdometryMessage();

  RobotCoreState_OdometryMessage(const RobotCoreState_OdometryMessage& from);

  inline RobotCoreState_OdometryMessage& operator=(const RobotCoreState_OdometryMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreState_OdometryMessage(RobotCoreState_OdometryMessage&& from) noexcept
    : RobotCoreState_OdometryMessage() {
    *this = ::std::move(from);
  }

  inline RobotCoreState_OdometryMessage& operator=(RobotCoreState_OdometryMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreState_OdometryMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreState_OdometryMessage* internal_default_instance() {
    return reinterpret_cast<const RobotCoreState_OdometryMessage*>(
               &_RobotCoreState_OdometryMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RobotCoreState_OdometryMessage* other);
  friend void swap(RobotCoreState_OdometryMessage& a, RobotCoreState_OdometryMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreState_OdometryMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreState_OdometryMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreState_OdometryMessage& from);
  void MergeFrom(const RobotCoreState_OdometryMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreState_OdometryMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float left_wheel = 1;
  bool has_left_wheel() const;
  void clear_left_wheel();
  static const int kLeftWheelFieldNumber = 1;
  float left_wheel() const;
  void set_left_wheel(float value);

  // optional float right_wheel = 2;
  bool has_right_wheel() const;
  void clear_right_wheel();
  static const int kRightWheelFieldNumber = 2;
  float right_wheel() const;
  void set_right_wheel(float value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreState.OdometryMessage)
 private:
  void set_has_left_wheel();
  void clear_has_left_wheel();
  void set_has_right_wheel();
  void clear_has_right_wheel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float left_wheel_;
  float right_wheel_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_OdometryMessageImpl();
};
// -------------------------------------------------------------------

class RobotCoreState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreState) */ {
 public:
  RobotCoreState();
  virtual ~RobotCoreState();

  RobotCoreState(const RobotCoreState& from);

  inline RobotCoreState& operator=(const RobotCoreState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreState(RobotCoreState&& from) noexcept
    : RobotCoreState() {
    *this = ::std::move(from);
  }

  inline RobotCoreState& operator=(RobotCoreState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreState* internal_default_instance() {
    return reinterpret_cast<const RobotCoreState*>(
               &_RobotCoreState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(RobotCoreState* other);
  friend void swap(RobotCoreState& a, RobotCoreState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreState* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreState& from);
  void MergeFrom(const RobotCoreState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RobotCoreState_SystemStateMessage SystemStateMessage;
  typedef RobotCoreState_MotionStateMessage MotionStateMessage;
  typedef RobotCoreState_RcStateMessage RcStateMessage;
  typedef RobotCoreState_BmsBasicMessage BmsBasicMessage;
  typedef RobotCoreState_OdometryMessage OdometryMessage;

  typedef RobotCoreState_AgxVehicleState AgxVehicleState;
  static const AgxVehicleState VEHICLE_STATE_NORMAL =
    RobotCoreState_AgxVehicleState_VEHICLE_STATE_NORMAL;
  static const AgxVehicleState VEHICLE_STATE_ESTOP =
    RobotCoreState_AgxVehicleState_VEHICLE_STATE_ESTOP;
  static const AgxVehicleState VEHICLE_STATE_EXCEPTION =
    RobotCoreState_AgxVehicleState_VEHICLE_STATE_EXCEPTION;
  static inline bool AgxVehicleState_IsValid(int value) {
    return RobotCoreState_AgxVehicleState_IsValid(value);
  }
  static const AgxVehicleState AgxVehicleState_MIN =
    RobotCoreState_AgxVehicleState_AgxVehicleState_MIN;
  static const AgxVehicleState AgxVehicleState_MAX =
    RobotCoreState_AgxVehicleState_AgxVehicleState_MAX;
  static const int AgxVehicleState_ARRAYSIZE =
    RobotCoreState_AgxVehicleState_AgxVehicleState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AgxVehicleState_descriptor() {
    return RobotCoreState_AgxVehicleState_descriptor();
  }
  static inline const ::std::string& AgxVehicleState_Name(AgxVehicleState value) {
    return RobotCoreState_AgxVehicleState_Name(value);
  }
  static inline bool AgxVehicleState_Parse(const ::std::string& name,
      AgxVehicleState* value) {
    return RobotCoreState_AgxVehicleState_Parse(name, value);
  }

  typedef RobotCoreState_AgxControlMode AgxControlMode;
  static const AgxControlMode CONTROL_MODE_RC =
    RobotCoreState_AgxControlMode_CONTROL_MODE_RC;
  static const AgxControlMode CONTROL_MODE_CAN =
    RobotCoreState_AgxControlMode_CONTROL_MODE_CAN;
  static const AgxControlMode CONTROL_MODE_UART =
    RobotCoreState_AgxControlMode_CONTROL_MODE_UART;
  static inline bool AgxControlMode_IsValid(int value) {
    return RobotCoreState_AgxControlMode_IsValid(value);
  }
  static const AgxControlMode AgxControlMode_MIN =
    RobotCoreState_AgxControlMode_AgxControlMode_MIN;
  static const AgxControlMode AgxControlMode_MAX =
    RobotCoreState_AgxControlMode_AgxControlMode_MAX;
  static const int AgxControlMode_ARRAYSIZE =
    RobotCoreState_AgxControlMode_AgxControlMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AgxControlMode_descriptor() {
    return RobotCoreState_AgxControlMode_descriptor();
  }
  static inline const ::std::string& AgxControlMode_Name(AgxControlMode value) {
    return RobotCoreState_AgxControlMode_Name(value);
  }
  static inline bool AgxControlMode_Parse(const ::std::string& name,
      AgxControlMode* value) {
    return RobotCoreState_AgxControlMode_Parse(name, value);
  }

  typedef RobotCoreState_AgxRcSwitchState AgxRcSwitchState;
  static const AgxRcSwitchState RC_SWITCH_UP =
    RobotCoreState_AgxRcSwitchState_RC_SWITCH_UP;
  static const AgxRcSwitchState RC_SWITCH_MIDDLE =
    RobotCoreState_AgxRcSwitchState_RC_SWITCH_MIDDLE;
  static const AgxRcSwitchState RC_SWITCH_DOWN =
    RobotCoreState_AgxRcSwitchState_RC_SWITCH_DOWN;
  static inline bool AgxRcSwitchState_IsValid(int value) {
    return RobotCoreState_AgxRcSwitchState_IsValid(value);
  }
  static const AgxRcSwitchState AgxRcSwitchState_MIN =
    RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_MIN;
  static const AgxRcSwitchState AgxRcSwitchState_MAX =
    RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_MAX;
  static const int AgxRcSwitchState_ARRAYSIZE =
    RobotCoreState_AgxRcSwitchState_AgxRcSwitchState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AgxRcSwitchState_descriptor() {
    return RobotCoreState_AgxRcSwitchState_descriptor();
  }
  static inline const ::std::string& AgxRcSwitchState_Name(AgxRcSwitchState value) {
    return RobotCoreState_AgxRcSwitchState_Name(value);
  }
  static inline bool AgxRcSwitchState_Parse(const ::std::string& name,
      AgxRcSwitchState* value) {
    return RobotCoreState_AgxRcSwitchState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.RobotCoreState.SystemStateMessage system_state = 3;
  bool has_system_state() const;
  void clear_system_state();
  static const int kSystemStateFieldNumber = 3;
  const ::middle_layer_pb::RobotCoreState_SystemStateMessage& system_state() const;
  ::middle_layer_pb::RobotCoreState_SystemStateMessage* release_system_state();
  ::middle_layer_pb::RobotCoreState_SystemStateMessage* mutable_system_state();
  void set_allocated_system_state(::middle_layer_pb::RobotCoreState_SystemStateMessage* system_state);

  // optional .middle_layer_pb.RobotCoreState.MotionStateMessage motion_state = 4;
  bool has_motion_state() const;
  void clear_motion_state();
  static const int kMotionStateFieldNumber = 4;
  const ::middle_layer_pb::RobotCoreState_MotionStateMessage& motion_state() const;
  ::middle_layer_pb::RobotCoreState_MotionStateMessage* release_motion_state();
  ::middle_layer_pb::RobotCoreState_MotionStateMessage* mutable_motion_state();
  void set_allocated_motion_state(::middle_layer_pb::RobotCoreState_MotionStateMessage* motion_state);

  // optional .middle_layer_pb.RobotCoreState.RcStateMessage rc_state = 5;
  bool has_rc_state() const;
  void clear_rc_state();
  static const int kRcStateFieldNumber = 5;
  const ::middle_layer_pb::RobotCoreState_RcStateMessage& rc_state() const;
  ::middle_layer_pb::RobotCoreState_RcStateMessage* release_rc_state();
  ::middle_layer_pb::RobotCoreState_RcStateMessage* mutable_rc_state();
  void set_allocated_rc_state(::middle_layer_pb::RobotCoreState_RcStateMessage* rc_state);

  // optional .middle_layer_pb.RobotCoreState.BmsBasicMessage bms_state = 6;
  bool has_bms_state() const;
  void clear_bms_state();
  static const int kBmsStateFieldNumber = 6;
  const ::middle_layer_pb::RobotCoreState_BmsBasicMessage& bms_state() const;
  ::middle_layer_pb::RobotCoreState_BmsBasicMessage* release_bms_state();
  ::middle_layer_pb::RobotCoreState_BmsBasicMessage* mutable_bms_state();
  void set_allocated_bms_state(::middle_layer_pb::RobotCoreState_BmsBasicMessage* bms_state);

  // optional .middle_layer_pb.RobotCoreState.OdometryMessage odom_state = 7;
  bool has_odom_state() const;
  void clear_odom_state();
  static const int kOdomStateFieldNumber = 7;
  const ::middle_layer_pb::RobotCoreState_OdometryMessage& odom_state() const;
  ::middle_layer_pb::RobotCoreState_OdometryMessage* release_odom_state();
  ::middle_layer_pb::RobotCoreState_OdometryMessage* mutable_odom_state();
  void set_allocated_odom_state(::middle_layer_pb::RobotCoreState_OdometryMessage* odom_state);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreState)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_system_state();
  void clear_has_system_state();
  void set_has_motion_state();
  void clear_has_motion_state();
  void set_has_rc_state();
  void clear_has_rc_state();
  void set_has_bms_state();
  void clear_has_bms_state();
  void set_has_odom_state();
  void clear_has_odom_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::RobotCoreState_SystemStateMessage* system_state_;
  ::middle_layer_pb::RobotCoreState_MotionStateMessage* motion_state_;
  ::middle_layer_pb::RobotCoreState_RcStateMessage* rc_state_;
  ::middle_layer_pb::RobotCoreState_BmsBasicMessage* bms_state_;
  ::middle_layer_pb::RobotCoreState_OdometryMessage* odom_state_;
  ::google::protobuf::int64 timestamp_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateImpl();
};
// -------------------------------------------------------------------

class RobotCoreStateRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreStateRes) */ {
 public:
  RobotCoreStateRes();
  virtual ~RobotCoreStateRes();

  RobotCoreStateRes(const RobotCoreStateRes& from);

  inline RobotCoreStateRes& operator=(const RobotCoreStateRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreStateRes(RobotCoreStateRes&& from) noexcept
    : RobotCoreStateRes() {
    *this = ::std::move(from);
  }

  inline RobotCoreStateRes& operator=(RobotCoreStateRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreStateRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreStateRes* internal_default_instance() {
    return reinterpret_cast<const RobotCoreStateRes*>(
               &_RobotCoreStateRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(RobotCoreStateRes* other);
  friend void swap(RobotCoreStateRes& a, RobotCoreStateRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreStateRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreStateRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreStateRes& from);
  void MergeFrom(const RobotCoreStateRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreStateRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .middle_layer_pb.RobotCoreState state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::middle_layer_pb::RobotCoreState& state() const;
  ::middle_layer_pb::RobotCoreState* release_state();
  ::middle_layer_pb::RobotCoreState* mutable_state();
  void set_allocated_state(::middle_layer_pb::RobotCoreState* state);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreStateRes)
 private:
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::middle_layer_pb::RobotCoreState* state_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateResImpl();
};
// -------------------------------------------------------------------

class RobotCoreStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotCoreStateNotify) */ {
 public:
  RobotCoreStateNotify();
  virtual ~RobotCoreStateNotify();

  RobotCoreStateNotify(const RobotCoreStateNotify& from);

  inline RobotCoreStateNotify& operator=(const RobotCoreStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotCoreStateNotify(RobotCoreStateNotify&& from) noexcept
    : RobotCoreStateNotify() {
    *this = ::std::move(from);
  }

  inline RobotCoreStateNotify& operator=(RobotCoreStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotCoreStateNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotCoreStateNotify* internal_default_instance() {
    return reinterpret_cast<const RobotCoreStateNotify*>(
               &_RobotCoreStateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(RobotCoreStateNotify* other);
  friend void swap(RobotCoreStateNotify& a, RobotCoreStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotCoreStateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotCoreStateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotCoreStateNotify& from);
  void MergeFrom(const RobotCoreStateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotCoreStateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .middle_layer_pb.RobotCoreState state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::middle_layer_pb::RobotCoreState& state() const;
  ::middle_layer_pb::RobotCoreState* release_state();
  ::middle_layer_pb::RobotCoreState* mutable_state();
  void set_allocated_state(::middle_layer_pb::RobotCoreState* state);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotCoreStateNotify)
 private:
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::middle_layer_pb::RobotCoreState* state_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateNotifyImpl();
};
// -------------------------------------------------------------------

class AppLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.AppLoginReq) */ {
 public:
  AppLoginReq();
  virtual ~AppLoginReq();

  AppLoginReq(const AppLoginReq& from);

  inline AppLoginReq& operator=(const AppLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppLoginReq(AppLoginReq&& from) noexcept
    : AppLoginReq() {
    *this = ::std::move(from);
  }

  inline AppLoginReq& operator=(AppLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppLoginReq* internal_default_instance() {
    return reinterpret_cast<const AppLoginReq*>(
               &_AppLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AppLoginReq* other);
  friend void swap(AppLoginReq& a, AppLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AppLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppLoginReq& from);
  void MergeFrom(const AppLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.AppLoginReq)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsAppLoginReqImpl();
};
// -------------------------------------------------------------------

class AppLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.AppLoginRes) */ {
 public:
  AppLoginRes();
  virtual ~AppLoginRes();

  AppLoginRes(const AppLoginRes& from);

  inline AppLoginRes& operator=(const AppLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppLoginRes(AppLoginRes&& from) noexcept
    : AppLoginRes() {
    *this = ::std::move(from);
  }

  inline AppLoginRes& operator=(AppLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppLoginRes* internal_default_instance() {
    return reinterpret_cast<const AppLoginRes*>(
               &_AppLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(AppLoginRes* other);
  friend void swap(AppLoginRes& a, AppLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  AppLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppLoginRes& from);
  void MergeFrom(const AppLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.AppLoginRes)
 private:
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsAppLoginResImpl();
};
// -------------------------------------------------------------------

class RobotLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotLoginReq) */ {
 public:
  RobotLoginReq();
  virtual ~RobotLoginReq();

  RobotLoginReq(const RobotLoginReq& from);

  inline RobotLoginReq& operator=(const RobotLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotLoginReq(RobotLoginReq&& from) noexcept
    : RobotLoginReq() {
    *this = ::std::move(from);
  }

  inline RobotLoginReq& operator=(RobotLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotLoginReq* internal_default_instance() {
    return reinterpret_cast<const RobotLoginReq*>(
               &_RobotLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(RobotLoginReq* other);
  friend void swap(RobotLoginReq& a, RobotLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotLoginReq& from);
  void MergeFrom(const RobotLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotLoginReq)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotLoginReqImpl();
};
// -------------------------------------------------------------------

class RobotLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotLoginRes) */ {
 public:
  RobotLoginRes();
  virtual ~RobotLoginRes();

  RobotLoginRes(const RobotLoginRes& from);

  inline RobotLoginRes& operator=(const RobotLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotLoginRes(RobotLoginRes&& from) noexcept
    : RobotLoginRes() {
    *this = ::std::move(from);
  }

  inline RobotLoginRes& operator=(RobotLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotLoginRes* internal_default_instance() {
    return reinterpret_cast<const RobotLoginRes*>(
               &_RobotLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(RobotLoginRes* other);
  friend void swap(RobotLoginRes& a, RobotLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotLoginRes& from);
  void MergeFrom(const RobotLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotLoginRes)
 private:
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotLoginResImpl();
};
// -------------------------------------------------------------------

class CloudLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CloudLoginReq) */ {
 public:
  CloudLoginReq();
  virtual ~CloudLoginReq();

  CloudLoginReq(const CloudLoginReq& from);

  inline CloudLoginReq& operator=(const CloudLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloudLoginReq(CloudLoginReq&& from) noexcept
    : CloudLoginReq() {
    *this = ::std::move(from);
  }

  inline CloudLoginReq& operator=(CloudLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloudLoginReq* internal_default_instance() {
    return reinterpret_cast<const CloudLoginReq*>(
               &_CloudLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CloudLoginReq* other);
  friend void swap(CloudLoginReq& a, CloudLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloudLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudLoginReq& from);
  void MergeFrom(const CloudLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CloudLoginReq)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCloudLoginReqImpl();
};
// -------------------------------------------------------------------

class CloudLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CloudLoginRes) */ {
 public:
  CloudLoginRes();
  virtual ~CloudLoginRes();

  CloudLoginRes(const CloudLoginRes& from);

  inline CloudLoginRes& operator=(const CloudLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloudLoginRes(CloudLoginRes&& from) noexcept
    : CloudLoginRes() {
    *this = ::std::move(from);
  }

  inline CloudLoginRes& operator=(CloudLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloudLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloudLoginRes* internal_default_instance() {
    return reinterpret_cast<const CloudLoginRes*>(
               &_CloudLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CloudLoginRes* other);
  friend void swap(CloudLoginRes& a, CloudLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloudLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CloudLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloudLoginRes& from);
  void MergeFrom(const CloudLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloudLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CloudLoginRes)
 private:
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCloudLoginResImpl();
};
// -------------------------------------------------------------------

class LaserResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.LaserResult) */ {
 public:
  LaserResult();
  virtual ~LaserResult();

  LaserResult(const LaserResult& from);

  inline LaserResult& operator=(const LaserResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaserResult(LaserResult&& from) noexcept
    : LaserResult() {
    *this = ::std::move(from);
  }

  inline LaserResult& operator=(LaserResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LaserResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaserResult* internal_default_instance() {
    return reinterpret_cast<const LaserResult*>(
               &_LaserResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(LaserResult* other);
  friend void swap(LaserResult& a, LaserResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaserResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LaserResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LaserResult& from);
  void MergeFrom(const LaserResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LaserResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double height = 1;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  double height() const;
  void set_height(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.LaserResult)
 private:
  void set_has_height();
  void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double height_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsLaserResultImpl();
};
// -------------------------------------------------------------------

class RtkResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RtkResult) */ {
 public:
  RtkResult();
  virtual ~RtkResult();

  RtkResult(const RtkResult& from);

  inline RtkResult& operator=(const RtkResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RtkResult(RtkResult&& from) noexcept
    : RtkResult() {
    *this = ::std::move(from);
  }

  inline RtkResult& operator=(RtkResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtkResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RtkResult* internal_default_instance() {
    return reinterpret_cast<const RtkResult*>(
               &_RtkResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(RtkResult* other);
  friend void swap(RtkResult& a, RtkResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RtkResult* New() const PROTOBUF_FINAL { return New(NULL); }

  RtkResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtkResult& from);
  void MergeFrom(const RtkResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtkResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.PointENU utm_result = 1;
  bool has_utm_result() const;
  void clear_utm_result();
  static const int kUtmResultFieldNumber = 1;
  const ::middle_layer_pb::PointENU& utm_result() const;
  ::middle_layer_pb::PointENU* release_utm_result();
  ::middle_layer_pb::PointENU* mutable_utm_result();
  void set_allocated_utm_result(::middle_layer_pb::PointENU* utm_result);

  // optional .middle_layer_pb.PointLLH gnss_result = 2;
  bool has_gnss_result() const;
  void clear_gnss_result();
  static const int kGnssResultFieldNumber = 2;
  const ::middle_layer_pb::PointLLH& gnss_result() const;
  ::middle_layer_pb::PointLLH* release_gnss_result();
  ::middle_layer_pb::PointLLH* mutable_gnss_result();
  void set_allocated_gnss_result(::middle_layer_pb::PointLLH* gnss_result);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RtkResult)
 private:
  void set_has_utm_result();
  void clear_has_utm_result();
  void set_has_gnss_result();
  void clear_has_gnss_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::middle_layer_pb::PointENU* utm_result_;
  ::middle_layer_pb::PointLLH* gnss_result_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkResultImpl();
};
// -------------------------------------------------------------------

class RtkDataSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RtkDataSource) */ {
 public:
  RtkDataSource();
  virtual ~RtkDataSource();

  RtkDataSource(const RtkDataSource& from);

  inline RtkDataSource& operator=(const RtkDataSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RtkDataSource(RtkDataSource&& from) noexcept
    : RtkDataSource() {
    *this = ::std::move(from);
  }

  inline RtkDataSource& operator=(RtkDataSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtkDataSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RtkDataSource* internal_default_instance() {
    return reinterpret_cast<const RtkDataSource*>(
               &_RtkDataSource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(RtkDataSource* other);
  friend void swap(RtkDataSource& a, RtkDataSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RtkDataSource* New() const PROTOBUF_FINAL { return New(NULL); }

  RtkDataSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtkDataSource& from);
  void MergeFrom(const RtkDataSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtkDataSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RtkDataSource)
 private:
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkDataSourceImpl();
};
// -------------------------------------------------------------------

class SensorInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.SensorInfoNotify) */ {
 public:
  SensorInfoNotify();
  virtual ~SensorInfoNotify();

  SensorInfoNotify(const SensorInfoNotify& from);

  inline SensorInfoNotify& operator=(const SensorInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorInfoNotify(SensorInfoNotify&& from) noexcept
    : SensorInfoNotify() {
    *this = ::std::move(from);
  }

  inline SensorInfoNotify& operator=(SensorInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorInfoNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorInfoNotify* internal_default_instance() {
    return reinterpret_cast<const SensorInfoNotify*>(
               &_SensorInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SensorInfoNotify* other);
  friend void swap(SensorInfoNotify& a, SensorInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SensorInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SensorInfoNotify& from);
  void MergeFrom(const SensorInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SensorInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ImuAccelMessage imu_accel = 3;
  bool has_imu_accel() const;
  void clear_imu_accel();
  static const int kImuAccelFieldNumber = 3;
  const ::middle_layer_pb::ImuAccelMessage& imu_accel() const;
  ::middle_layer_pb::ImuAccelMessage* release_imu_accel();
  ::middle_layer_pb::ImuAccelMessage* mutable_imu_accel();
  void set_allocated_imu_accel(::middle_layer_pb::ImuAccelMessage* imu_accel);

  // optional .middle_layer_pb.ImuGyroMessage imu_gyro = 4;
  bool has_imu_gyro() const;
  void clear_imu_gyro();
  static const int kImuGyroFieldNumber = 4;
  const ::middle_layer_pb::ImuGyroMessage& imu_gyro() const;
  ::middle_layer_pb::ImuGyroMessage* release_imu_gyro();
  ::middle_layer_pb::ImuGyroMessage* mutable_imu_gyro();
  void set_allocated_imu_gyro(::middle_layer_pb::ImuGyroMessage* imu_gyro);

  // optional .middle_layer_pb.ImuEulerMessage imu_euler = 5;
  bool has_imu_euler() const;
  void clear_imu_euler();
  static const int kImuEulerFieldNumber = 5;
  const ::middle_layer_pb::ImuEulerMessage& imu_euler() const;
  ::middle_layer_pb::ImuEulerMessage* release_imu_euler();
  ::middle_layer_pb::ImuEulerMessage* mutable_imu_euler();
  void set_allocated_imu_euler(::middle_layer_pb::ImuEulerMessage* imu_euler);

  // optional .middle_layer_pb.PointLLH gnss = 6;
  bool has_gnss() const;
  void clear_gnss();
  static const int kGnssFieldNumber = 6;
  const ::middle_layer_pb::PointLLH& gnss() const;
  ::middle_layer_pb::PointLLH* release_gnss();
  ::middle_layer_pb::PointLLH* mutable_gnss();
  void set_allocated_gnss(::middle_layer_pb::PointLLH* gnss);

  // optional .middle_layer_pb.RtkDataSource rtk = 7;
  bool has_rtk() const;
  void clear_rtk();
  static const int kRtkFieldNumber = 7;
  const ::middle_layer_pb::RtkDataSource& rtk() const;
  ::middle_layer_pb::RtkDataSource* release_rtk();
  ::middle_layer_pb::RtkDataSource* mutable_rtk();
  void set_allocated_rtk(::middle_layer_pb::RtkDataSource* rtk);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.SensorInfoNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_imu_accel();
  void clear_has_imu_accel();
  void set_has_imu_gyro();
  void clear_has_imu_gyro();
  void set_has_imu_euler();
  void clear_has_imu_euler();
  void set_has_gnss();
  void clear_has_gnss();
  void set_has_rtk();
  void clear_has_rtk();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::ImuAccelMessage* imu_accel_;
  ::middle_layer_pb::ImuGyroMessage* imu_gyro_;
  ::middle_layer_pb::ImuEulerMessage* imu_euler_;
  ::middle_layer_pb::PointLLH* gnss_;
  ::middle_layer_pb::RtkDataSource* rtk_;
  ::google::protobuf::int64 timestamp_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsSensorInfoNotifyImpl();
};
// -------------------------------------------------------------------

class MeasureResultNotify_Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.MeasureResultNotify.Point) */ {
 public:
  MeasureResultNotify_Point();
  virtual ~MeasureResultNotify_Point();

  MeasureResultNotify_Point(const MeasureResultNotify_Point& from);

  inline MeasureResultNotify_Point& operator=(const MeasureResultNotify_Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureResultNotify_Point(MeasureResultNotify_Point&& from) noexcept
    : MeasureResultNotify_Point() {
    *this = ::std::move(from);
  }

  inline MeasureResultNotify_Point& operator=(MeasureResultNotify_Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureResultNotify_Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureResultNotify_Point* internal_default_instance() {
    return reinterpret_cast<const MeasureResultNotify_Point*>(
               &_MeasureResultNotify_Point_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(MeasureResultNotify_Point* other);
  friend void swap(MeasureResultNotify_Point& a, MeasureResultNotify_Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureResultNotify_Point* New() const PROTOBUF_FINAL { return New(NULL); }

  MeasureResultNotify_Point* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeasureResultNotify_Point& from);
  void MergeFrom(const MeasureResultNotify_Point& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeasureResultNotify_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string task_code = 4;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 4;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.StakeDto stake_dto = 1;
  bool has_stake_dto() const;
  void clear_stake_dto();
  static const int kStakeDtoFieldNumber = 1;
  const ::middle_layer_pb::StakeDto& stake_dto() const;
  ::middle_layer_pb::StakeDto* release_stake_dto();
  ::middle_layer_pb::StakeDto* mutable_stake_dto();
  void set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto);

  // required .middle_layer_pb.PointLLH rtk_res = 2;
  bool has_rtk_res() const;
  void clear_rtk_res();
  static const int kRtkResFieldNumber = 2;
  const ::middle_layer_pb::PointLLH& rtk_res() const;
  ::middle_layer_pb::PointLLH* release_rtk_res();
  ::middle_layer_pb::PointLLH* mutable_rtk_res();
  void set_allocated_rtk_res(::middle_layer_pb::PointLLH* rtk_res);

  // optional .middle_layer_pb.PointLLH pl = 3;
  bool has_pl() const;
  void clear_pl();
  static const int kPlFieldNumber = 3;
  const ::middle_layer_pb::PointLLH& pl() const;
  ::middle_layer_pb::PointLLH* release_pl();
  ::middle_layer_pb::PointLLH* mutable_pl();
  void set_allocated_pl(::middle_layer_pb::PointLLH* pl);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.MeasureResultNotify.Point)
 private:
  void set_has_stake_dto();
  void clear_has_stake_dto();
  void set_has_rtk_res();
  void clear_has_rtk_res();
  void set_has_pl();
  void clear_has_pl();
  void set_has_task_code();
  void clear_has_task_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::StakeDto* stake_dto_;
  ::middle_layer_pb::PointLLH* rtk_res_;
  ::middle_layer_pb::PointLLH* pl_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotify_PointImpl();
};
// -------------------------------------------------------------------

class MeasureResultNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.MeasureResultNotify) */ {
 public:
  MeasureResultNotify();
  virtual ~MeasureResultNotify();

  MeasureResultNotify(const MeasureResultNotify& from);

  inline MeasureResultNotify& operator=(const MeasureResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureResultNotify(MeasureResultNotify&& from) noexcept
    : MeasureResultNotify() {
    *this = ::std::move(from);
  }

  inline MeasureResultNotify& operator=(MeasureResultNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureResultNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureResultNotify* internal_default_instance() {
    return reinterpret_cast<const MeasureResultNotify*>(
               &_MeasureResultNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(MeasureResultNotify* other);
  friend void swap(MeasureResultNotify& a, MeasureResultNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureResultNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MeasureResultNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeasureResultNotify& from);
  void MergeFrom(const MeasureResultNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeasureResultNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MeasureResultNotify_Point Point;

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.MeasureResultNotify.Point pos_list = 3;
  int pos_list_size() const;
  void clear_pos_list();
  static const int kPosListFieldNumber = 3;
  const ::middle_layer_pb::MeasureResultNotify_Point& pos_list(int index) const;
  ::middle_layer_pb::MeasureResultNotify_Point* mutable_pos_list(int index);
  ::middle_layer_pb::MeasureResultNotify_Point* add_pos_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::MeasureResultNotify_Point >*
      mutable_pos_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::MeasureResultNotify_Point >&
      pos_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.MeasureResultNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::MeasureResultNotify_Point > pos_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int64 timestamp_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotifyImpl();
};
// -------------------------------------------------------------------

class TaskState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.TaskState) */ {
 public:
  TaskState();
  virtual ~TaskState();

  TaskState(const TaskState& from);

  inline TaskState& operator=(const TaskState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskState(TaskState&& from) noexcept
    : TaskState() {
    *this = ::std::move(from);
  }

  inline TaskState& operator=(TaskState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskState* internal_default_instance() {
    return reinterpret_cast<const TaskState*>(
               &_TaskState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(TaskState* other);
  friend void swap(TaskState& a, TaskState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskState* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskState& from);
  void MergeFrom(const TaskState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TaskState_enState enState;
  static const enState TASK_STATE_INVALID =
    TaskState_enState_TASK_STATE_INVALID;
  static const enState TASK_STATE_NORMAL =
    TaskState_enState_TASK_STATE_NORMAL;
  static const enState TASK_STATE_PLAY =
    TaskState_enState_TASK_STATE_PLAY;
  static const enState TASK_STATE_PAUSE =
    TaskState_enState_TASK_STATE_PAUSE;
  static const enState TASK_STATE_STOP =
    TaskState_enState_TASK_STATE_STOP;
  static const enState TASK_STATE_UNKNOWN =
    TaskState_enState_TASK_STATE_UNKNOWN;
  static inline bool enState_IsValid(int value) {
    return TaskState_enState_IsValid(value);
  }
  static const enState enState_MIN =
    TaskState_enState_enState_MIN;
  static const enState enState_MAX =
    TaskState_enState_enState_MAX;
  static const int enState_ARRAYSIZE =
    TaskState_enState_enState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  enState_descriptor() {
    return TaskState_enState_descriptor();
  }
  static inline const ::std::string& enState_Name(enState value) {
    return TaskState_enState_Name(value);
  }
  static inline bool enState_Parse(const ::std::string& name,
      enState* value) {
    return TaskState_enState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // optional .middle_layer_pb.StakeDto stake_dto = 3;
  bool has_stake_dto() const;
  void clear_stake_dto();
  static const int kStakeDtoFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto() const;
  ::middle_layer_pb::StakeDto* release_stake_dto();
  ::middle_layer_pb::StakeDto* mutable_stake_dto();
  void set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto);

  // required .middle_layer_pb.TaskState.enState state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::middle_layer_pb::TaskState_enState state() const;
  void set_state(::middle_layer_pb::TaskState_enState value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.TaskState)
 private:
  void set_has_state();
  void clear_has_state();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_stake_dto();
  void clear_has_stake_dto();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::StakeDto* stake_dto_;
  int state_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsTaskStateImpl();
};
// -------------------------------------------------------------------

class TaskStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.TaskStateNotify) */ {
 public:
  TaskStateNotify();
  virtual ~TaskStateNotify();

  TaskStateNotify(const TaskStateNotify& from);

  inline TaskStateNotify& operator=(const TaskStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskStateNotify(TaskStateNotify&& from) noexcept
    : TaskStateNotify() {
    *this = ::std::move(from);
  }

  inline TaskStateNotify& operator=(TaskStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStateNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskStateNotify* internal_default_instance() {
    return reinterpret_cast<const TaskStateNotify*>(
               &_TaskStateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(TaskStateNotify* other);
  friend void swap(TaskStateNotify& a, TaskStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskStateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskStateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskStateNotify& from);
  void MergeFrom(const TaskStateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskStateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.TaskState state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  const ::middle_layer_pb::TaskState& state() const;
  ::middle_layer_pb::TaskState* release_state();
  ::middle_layer_pb::TaskState* mutable_state();
  void set_allocated_state(::middle_layer_pb::TaskState* state);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.TaskStateNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_state();
  void clear_has_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::TaskState* state_;
  ::google::protobuf::int64 timestamp_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsTaskStateNotifyImpl();
};
// -------------------------------------------------------------------

class TargetTrackNotify_Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.TargetTrackNotify.Point) */ {
 public:
  TargetTrackNotify_Point();
  virtual ~TargetTrackNotify_Point();

  TargetTrackNotify_Point(const TargetTrackNotify_Point& from);

  inline TargetTrackNotify_Point& operator=(const TargetTrackNotify_Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetTrackNotify_Point(TargetTrackNotify_Point&& from) noexcept
    : TargetTrackNotify_Point() {
    *this = ::std::move(from);
  }

  inline TargetTrackNotify_Point& operator=(TargetTrackNotify_Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetTrackNotify_Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetTrackNotify_Point* internal_default_instance() {
    return reinterpret_cast<const TargetTrackNotify_Point*>(
               &_TargetTrackNotify_Point_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(TargetTrackNotify_Point* other);
  friend void swap(TargetTrackNotify_Point& a, TargetTrackNotify_Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetTrackNotify_Point* New() const PROTOBUF_FINAL { return New(NULL); }

  TargetTrackNotify_Point* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TargetTrackNotify_Point& from);
  void MergeFrom(const TargetTrackNotify_Point& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TargetTrackNotify_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .middle_layer_pb.Point2D pt_x_y = 1;
  bool has_pt_x_y() const;
  void clear_pt_x_y();
  static const int kPtXYFieldNumber = 1;
  const ::middle_layer_pb::Point2D& pt_x_y() const;
  ::middle_layer_pb::Point2D* release_pt_x_y();
  ::middle_layer_pb::Point2D* mutable_pt_x_y();
  void set_allocated_pt_x_y(::middle_layer_pb::Point2D* pt_x_y);

  // required double pt_h = 2;
  bool has_pt_h() const;
  void clear_pt_h();
  static const int kPtHFieldNumber = 2;
  double pt_h() const;
  void set_pt_h(double value);

  // required double pt_c = 3;
  bool has_pt_c() const;
  void clear_pt_c();
  static const int kPtCFieldNumber = 3;
  double pt_c() const;
  void set_pt_c(double value);

  // required double pt_s = 4;
  bool has_pt_s() const;
  void clear_pt_s();
  static const int kPtSFieldNumber = 4;
  double pt_s() const;
  void set_pt_s(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.TargetTrackNotify.Point)
 private:
  void set_has_pt_x_y();
  void clear_has_pt_x_y();
  void set_has_pt_h();
  void clear_has_pt_h();
  void set_has_pt_c();
  void clear_has_pt_c();
  void set_has_pt_s();
  void clear_has_pt_s();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::middle_layer_pb::Point2D* pt_x_y_;
  double pt_h_;
  double pt_c_;
  double pt_s_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotify_PointImpl();
};
// -------------------------------------------------------------------

class TargetTrackNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.TargetTrackNotify) */ {
 public:
  TargetTrackNotify();
  virtual ~TargetTrackNotify();

  TargetTrackNotify(const TargetTrackNotify& from);

  inline TargetTrackNotify& operator=(const TargetTrackNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetTrackNotify(TargetTrackNotify&& from) noexcept
    : TargetTrackNotify() {
    *this = ::std::move(from);
  }

  inline TargetTrackNotify& operator=(TargetTrackNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetTrackNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetTrackNotify* internal_default_instance() {
    return reinterpret_cast<const TargetTrackNotify*>(
               &_TargetTrackNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(TargetTrackNotify* other);
  friend void swap(TargetTrackNotify& a, TargetTrackNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetTrackNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TargetTrackNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TargetTrackNotify& from);
  void MergeFrom(const TargetTrackNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TargetTrackNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TargetTrackNotify_Point Point;

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.TargetTrackNotify.Point pos_list = 4;
  int pos_list_size() const;
  void clear_pos_list();
  static const int kPosListFieldNumber = 4;
  const ::middle_layer_pb::TargetTrackNotify_Point& pos_list(int index) const;
  ::middle_layer_pb::TargetTrackNotify_Point* mutable_pos_list(int index);
  ::middle_layer_pb::TargetTrackNotify_Point* add_pos_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::TargetTrackNotify_Point >*
      mutable_pos_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::TargetTrackNotify_Point >&
      pos_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.TargetTrackNotify.Point curr_pos = 3;
  bool has_curr_pos() const;
  void clear_curr_pos();
  static const int kCurrPosFieldNumber = 3;
  const ::middle_layer_pb::TargetTrackNotify_Point& curr_pos() const;
  ::middle_layer_pb::TargetTrackNotify_Point* release_curr_pos();
  ::middle_layer_pb::TargetTrackNotify_Point* mutable_curr_pos();
  void set_allocated_curr_pos(::middle_layer_pb::TargetTrackNotify_Point* curr_pos);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.TargetTrackNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_curr_pos();
  void clear_has_curr_pos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::TargetTrackNotify_Point > pos_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::TargetTrackNotify_Point* curr_pos_;
  ::google::protobuf::int64 timestamp_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotifyImpl();
};
// -------------------------------------------------------------------

class RtkOperationCmdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RtkOperationCmdReq) */ {
 public:
  RtkOperationCmdReq();
  virtual ~RtkOperationCmdReq();

  RtkOperationCmdReq(const RtkOperationCmdReq& from);

  inline RtkOperationCmdReq& operator=(const RtkOperationCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RtkOperationCmdReq(RtkOperationCmdReq&& from) noexcept
    : RtkOperationCmdReq() {
    *this = ::std::move(from);
  }

  inline RtkOperationCmdReq& operator=(RtkOperationCmdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtkOperationCmdReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RtkOperationCmdReq* internal_default_instance() {
    return reinterpret_cast<const RtkOperationCmdReq*>(
               &_RtkOperationCmdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(RtkOperationCmdReq* other);
  friend void swap(RtkOperationCmdReq& a, RtkOperationCmdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RtkOperationCmdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RtkOperationCmdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtkOperationCmdReq& from);
  void MergeFrom(const RtkOperationCmdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtkOperationCmdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RtkOperationCmdReq_enOperationType enOperationType;
  static const enOperationType OPERATION_TYPE_INVALID =
    RtkOperationCmdReq_enOperationType_OPERATION_TYPE_INVALID;
  static const enOperationType OPERATION_TYPE_CONNECT =
    RtkOperationCmdReq_enOperationType_OPERATION_TYPE_CONNECT;
  static const enOperationType OPERATION_TYPE_DISCONNECT =
    RtkOperationCmdReq_enOperationType_OPERATION_TYPE_DISCONNECT;
  static inline bool enOperationType_IsValid(int value) {
    return RtkOperationCmdReq_enOperationType_IsValid(value);
  }
  static const enOperationType enOperationType_MIN =
    RtkOperationCmdReq_enOperationType_enOperationType_MIN;
  static const enOperationType enOperationType_MAX =
    RtkOperationCmdReq_enOperationType_enOperationType_MAX;
  static const int enOperationType_ARRAYSIZE =
    RtkOperationCmdReq_enOperationType_enOperationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  enOperationType_descriptor() {
    return RtkOperationCmdReq_enOperationType_descriptor();
  }
  static inline const ::std::string& enOperationType_Name(enOperationType value) {
    return RtkOperationCmdReq_enOperationType_Name(value);
  }
  static inline bool enOperationType_Parse(const ::std::string& name,
      enOperationType* value) {
    return RtkOperationCmdReq_enOperationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::middle_layer_pb::RtkOperationCmdReq_enOperationType type() const;
  void set_type(::middle_layer_pb::RtkOperationCmdReq_enOperationType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RtkOperationCmdReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int type_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOperationCmdReqImpl();
};
// -------------------------------------------------------------------

class RtkOperationCmdRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RtkOperationCmdRes) */ {
 public:
  RtkOperationCmdRes();
  virtual ~RtkOperationCmdRes();

  RtkOperationCmdRes(const RtkOperationCmdRes& from);

  inline RtkOperationCmdRes& operator=(const RtkOperationCmdRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RtkOperationCmdRes(RtkOperationCmdRes&& from) noexcept
    : RtkOperationCmdRes() {
    *this = ::std::move(from);
  }

  inline RtkOperationCmdRes& operator=(RtkOperationCmdRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtkOperationCmdRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RtkOperationCmdRes* internal_default_instance() {
    return reinterpret_cast<const RtkOperationCmdRes*>(
               &_RtkOperationCmdRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(RtkOperationCmdRes* other);
  friend void swap(RtkOperationCmdRes& a, RtkOperationCmdRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RtkOperationCmdRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RtkOperationCmdRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtkOperationCmdRes& from);
  void MergeFrom(const RtkOperationCmdRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtkOperationCmdRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RtkOperationCmdRes)
 private:
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOperationCmdResImpl();
};
// -------------------------------------------------------------------

class RtkOffsetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RtkOffsetInfo) */ {
 public:
  RtkOffsetInfo();
  virtual ~RtkOffsetInfo();

  RtkOffsetInfo(const RtkOffsetInfo& from);

  inline RtkOffsetInfo& operator=(const RtkOffsetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RtkOffsetInfo(RtkOffsetInfo&& from) noexcept
    : RtkOffsetInfo() {
    *this = ::std::move(from);
  }

  inline RtkOffsetInfo& operator=(RtkOffsetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtkOffsetInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RtkOffsetInfo* internal_default_instance() {
    return reinterpret_cast<const RtkOffsetInfo*>(
               &_RtkOffsetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(RtkOffsetInfo* other);
  friend void swap(RtkOffsetInfo& a, RtkOffsetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RtkOffsetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RtkOffsetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtkOffsetInfo& from);
  void MergeFrom(const RtkOffsetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtkOffsetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  const ::std::string& level() const;
  void set_level(const ::std::string& value);
  #if LANG_CXX11
  void set_level(::std::string&& value);
  #endif
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  ::std::string* mutable_level();
  ::std::string* release_level();
  void set_allocated_level(::std::string* level);

  // required .middle_layer_pb.PointLLH pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::middle_layer_pb::PointLLH& pos() const;
  ::middle_layer_pb::PointLLH* release_pos();
  ::middle_layer_pb::PointLLH* mutable_pos();
  void set_allocated_pos(::middle_layer_pb::PointLLH* pos);

  // required double offset_x = 4;
  bool has_offset_x() const;
  void clear_offset_x();
  static const int kOffsetXFieldNumber = 4;
  double offset_x() const;
  void set_offset_x(double value);

  // required double offset_y = 5;
  bool has_offset_y() const;
  void clear_offset_y();
  static const int kOffsetYFieldNumber = 5;
  double offset_y() const;
  void set_offset_y(double value);

  // required double offset_z = 6;
  bool has_offset_z() const;
  void clear_offset_z();
  static const int kOffsetZFieldNumber = 6;
  double offset_z() const;
  void set_offset_z(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RtkOffsetInfo)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_name();
  void clear_has_name();
  void set_has_level();
  void clear_has_level();
  void set_has_offset_x();
  void clear_has_offset_x();
  void set_has_offset_y();
  void clear_has_offset_y();
  void set_has_offset_z();
  void clear_has_offset_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr level_;
  ::middle_layer_pb::PointLLH* pos_;
  double offset_x_;
  double offset_y_;
  double offset_z_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOffsetInfoImpl();
};
// -------------------------------------------------------------------

class WorkMessageIssued : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.WorkMessageIssued) */ {
 public:
  WorkMessageIssued();
  virtual ~WorkMessageIssued();

  WorkMessageIssued(const WorkMessageIssued& from);

  inline WorkMessageIssued& operator=(const WorkMessageIssued& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkMessageIssued(WorkMessageIssued&& from) noexcept
    : WorkMessageIssued() {
    *this = ::std::move(from);
  }

  inline WorkMessageIssued& operator=(WorkMessageIssued&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkMessageIssued& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkMessageIssued* internal_default_instance() {
    return reinterpret_cast<const WorkMessageIssued*>(
               &_WorkMessageIssued_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(WorkMessageIssued* other);
  friend void swap(WorkMessageIssued& a, WorkMessageIssued& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkMessageIssued* New() const PROTOBUF_FINAL { return New(NULL); }

  WorkMessageIssued* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorkMessageIssued& from);
  void MergeFrom(const WorkMessageIssued& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorkMessageIssued* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 5;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.DeviceTask device_task = 2;
  bool has_device_task() const;
  void clear_device_task();
  static const int kDeviceTaskFieldNumber = 2;
  const ::middle_layer_pb::DeviceTask& device_task() const;
  ::middle_layer_pb::DeviceTask* release_device_task();
  ::middle_layer_pb::DeviceTask* mutable_device_task();
  void set_allocated_device_task(::middle_layer_pb::DeviceTask* device_task);

  // required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
  bool has_rtk_offset_info() const;
  void clear_rtk_offset_info();
  static const int kRtkOffsetInfoFieldNumber = 4;
  const ::middle_layer_pb::RtkOffsetInfo& rtk_offset_info() const;
  ::middle_layer_pb::RtkOffsetInfo* release_rtk_offset_info();
  ::middle_layer_pb::RtkOffsetInfo* mutable_rtk_offset_info();
  void set_allocated_rtk_offset_info(::middle_layer_pb::RtkOffsetInfo* rtk_offset_info);

  // optional .middle_layer_pb.PutSideLineParam put_side_line_param = 6;
  bool has_put_side_line_param() const;
  void clear_put_side_line_param();
  static const int kPutSideLineParamFieldNumber = 6;
  const ::middle_layer_pb::PutSideLineParam& put_side_line_param() const;
  ::middle_layer_pb::PutSideLineParam* release_put_side_line_param();
  ::middle_layer_pb::PutSideLineParam* mutable_put_side_line_param();
  void set_allocated_put_side_line_param(::middle_layer_pb::PutSideLineParam* put_side_line_param);

  // optional .middle_layer_pb.DrawSideLineParam draw_side_line_param = 7;
  bool has_draw_side_line_param() const;
  void clear_draw_side_line_param();
  static const int kDrawSideLineParamFieldNumber = 7;
  const ::middle_layer_pb::DrawSideLineParam& draw_side_line_param() const;
  ::middle_layer_pb::DrawSideLineParam* release_draw_side_line_param();
  ::middle_layer_pb::DrawSideLineParam* mutable_draw_side_line_param();
  void set_allocated_draw_side_line_param(::middle_layer_pb::DrawSideLineParam* draw_side_line_param);

  // optional .middle_layer_pb.PutMidLineParam put_mid_line_param = 8;
  bool has_put_mid_line_param() const;
  void clear_put_mid_line_param();
  static const int kPutMidLineParamFieldNumber = 8;
  const ::middle_layer_pb::PutMidLineParam& put_mid_line_param() const;
  ::middle_layer_pb::PutMidLineParam* release_put_mid_line_param();
  ::middle_layer_pb::PutMidLineParam* mutable_put_mid_line_param();
  void set_allocated_put_mid_line_param(::middle_layer_pb::PutMidLineParam* put_mid_line_param);

  // optional .middle_layer_pb.DrawMidLineParam draw_mid_line_param = 9;
  bool has_draw_mid_line_param() const;
  void clear_draw_mid_line_param();
  static const int kDrawMidLineParamFieldNumber = 9;
  const ::middle_layer_pb::DrawMidLineParam& draw_mid_line_param() const;
  ::middle_layer_pb::DrawMidLineParam* release_draw_mid_line_param();
  ::middle_layer_pb::DrawMidLineParam* mutable_draw_mid_line_param();
  void set_allocated_draw_mid_line_param(::middle_layer_pb::DrawMidLineParam* draw_mid_line_param);

  // optional .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 10;
  bool has_draw_standard_square_param() const;
  void clear_draw_standard_square_param();
  static const int kDrawStandardSquareParamFieldNumber = 10;
  const ::middle_layer_pb::DrawStandardSquareParam& draw_standard_square_param() const;
  ::middle_layer_pb::DrawStandardSquareParam* release_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* mutable_draw_standard_square_param();
  void set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param);

  // optional .middle_layer_pb.PutLevellingParam put_levelling_param = 11;
  bool has_put_levelling_param() const;
  void clear_put_levelling_param();
  static const int kPutLevellingParamFieldNumber = 11;
  const ::middle_layer_pb::PutLevellingParam& put_levelling_param() const;
  ::middle_layer_pb::PutLevellingParam* release_put_levelling_param();
  ::middle_layer_pb::PutLevellingParam* mutable_put_levelling_param();
  void set_allocated_put_levelling_param(::middle_layer_pb::PutLevellingParam* put_levelling_param);

  // optional .middle_layer_pb.PutLaneLineParam put_lane_line_param = 12;
  bool has_put_lane_line_param() const;
  void clear_put_lane_line_param();
  static const int kPutLaneLineParamFieldNumber = 12;
  const ::middle_layer_pb::PutLaneLineParam& put_lane_line_param() const;
  ::middle_layer_pb::PutLaneLineParam* release_put_lane_line_param();
  ::middle_layer_pb::PutLaneLineParam* mutable_put_lane_line_param();
  void set_allocated_put_lane_line_param(::middle_layer_pb::PutLaneLineParam* put_lane_line_param);

  // optional .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 13;
  bool has_draw_stakes_help_param() const;
  void clear_draw_stakes_help_param();
  static const int kDrawStakesHelpParamFieldNumber = 13;
  const ::middle_layer_pb::DrawStakesHelpParam& draw_stakes_help_param() const;
  ::middle_layer_pb::DrawStakesHelpParam* release_draw_stakes_help_param();
  ::middle_layer_pb::DrawStakesHelpParam* mutable_draw_stakes_help_param();
  void set_allocated_draw_stakes_help_param(::middle_layer_pb::DrawStakesHelpParam* draw_stakes_help_param);

  // optional .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 14;
  bool has_put_cross_section_param() const;
  void clear_put_cross_section_param();
  static const int kPutCrossSectionParamFieldNumber = 14;
  const ::middle_layer_pb::PutCrossSectionParam& put_cross_section_param() const;
  ::middle_layer_pb::PutCrossSectionParam* release_put_cross_section_param();
  ::middle_layer_pb::PutCrossSectionParam* mutable_put_cross_section_param();
  void set_allocated_put_cross_section_param(::middle_layer_pb::PutCrossSectionParam* put_cross_section_param);

  // required .middle_layer_pb.WorkType work_type = 3;
  bool has_work_type() const;
  void clear_work_type();
  static const int kWorkTypeFieldNumber = 3;
  ::middle_layer_pb::WorkType work_type() const;
  void set_work_type(::middle_layer_pb::WorkType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.WorkMessageIssued)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_device_task();
  void clear_has_device_task();
  void set_has_work_type();
  void clear_has_work_type();
  void set_has_rtk_offset_info();
  void clear_has_rtk_offset_info();
  void set_has_put_side_line_param();
  void clear_has_put_side_line_param();
  void set_has_draw_side_line_param();
  void clear_has_draw_side_line_param();
  void set_has_put_mid_line_param();
  void clear_has_put_mid_line_param();
  void set_has_draw_mid_line_param();
  void clear_has_draw_mid_line_param();
  void set_has_draw_standard_square_param();
  void clear_has_draw_standard_square_param();
  void set_has_put_levelling_param();
  void clear_has_put_levelling_param();
  void set_has_put_lane_line_param();
  void clear_has_put_lane_line_param();
  void set_has_draw_stakes_help_param();
  void clear_has_draw_stakes_help_param();
  void set_has_put_cross_section_param();
  void clear_has_put_cross_section_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::DeviceTask* device_task_;
  ::middle_layer_pb::RtkOffsetInfo* rtk_offset_info_;
  ::middle_layer_pb::PutSideLineParam* put_side_line_param_;
  ::middle_layer_pb::DrawSideLineParam* draw_side_line_param_;
  ::middle_layer_pb::PutMidLineParam* put_mid_line_param_;
  ::middle_layer_pb::DrawMidLineParam* draw_mid_line_param_;
  ::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param_;
  ::middle_layer_pb::PutLevellingParam* put_levelling_param_;
  ::middle_layer_pb::PutLaneLineParam* put_lane_line_param_;
  ::middle_layer_pb::DrawStakesHelpParam* draw_stakes_help_param_;
  ::middle_layer_pb::PutCrossSectionParam* put_cross_section_param_;
  int work_type_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkMessageIssuedImpl();
};
// -------------------------------------------------------------------

class WorkMessageIssuedRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.WorkMessageIssuedRes) */ {
 public:
  WorkMessageIssuedRes();
  virtual ~WorkMessageIssuedRes();

  WorkMessageIssuedRes(const WorkMessageIssuedRes& from);

  inline WorkMessageIssuedRes& operator=(const WorkMessageIssuedRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkMessageIssuedRes(WorkMessageIssuedRes&& from) noexcept
    : WorkMessageIssuedRes() {
    *this = ::std::move(from);
  }

  inline WorkMessageIssuedRes& operator=(WorkMessageIssuedRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkMessageIssuedRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkMessageIssuedRes* internal_default_instance() {
    return reinterpret_cast<const WorkMessageIssuedRes*>(
               &_WorkMessageIssuedRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(WorkMessageIssuedRes* other);
  friend void swap(WorkMessageIssuedRes& a, WorkMessageIssuedRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkMessageIssuedRes* New() const PROTOBUF_FINAL { return New(NULL); }

  WorkMessageIssuedRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorkMessageIssuedRes& from);
  void MergeFrom(const WorkMessageIssuedRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorkMessageIssuedRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.DeviceTask device_task = 2;
  bool has_device_task() const;
  void clear_device_task();
  static const int kDeviceTaskFieldNumber = 2;
  const ::middle_layer_pb::DeviceTask& device_task() const;
  ::middle_layer_pb::DeviceTask* release_device_task();
  ::middle_layer_pb::DeviceTask* mutable_device_task();
  void set_allocated_device_task(::middle_layer_pb::DeviceTask* device_task);

  // required .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.WorkMessageIssuedRes)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_device_task();
  void clear_has_device_task();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::middle_layer_pb::DeviceTask* device_task_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkMessageIssuedResImpl();
};
// -------------------------------------------------------------------

class DeviceTask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.DeviceTask) */ {
 public:
  DeviceTask();
  virtual ~DeviceTask();

  DeviceTask(const DeviceTask& from);

  inline DeviceTask& operator=(const DeviceTask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceTask(DeviceTask&& from) noexcept
    : DeviceTask() {
    *this = ::std::move(from);
  }

  inline DeviceTask& operator=(DeviceTask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceTask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceTask* internal_default_instance() {
    return reinterpret_cast<const DeviceTask*>(
               &_DeviceTask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(DeviceTask* other);
  friend void swap(DeviceTask& a, DeviceTask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceTask* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceTask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceTask& from);
  void MergeFrom(const DeviceTask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceTask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string task_code = 1;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 1;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required string start_stake = 3;
  bool has_start_stake() const;
  void clear_start_stake();
  static const int kStartStakeFieldNumber = 3;
  const ::std::string& start_stake() const;
  void set_start_stake(const ::std::string& value);
  #if LANG_CXX11
  void set_start_stake(::std::string&& value);
  #endif
  void set_start_stake(const char* value);
  void set_start_stake(const char* value, size_t size);
  ::std::string* mutable_start_stake();
  ::std::string* release_start_stake();
  void set_allocated_start_stake(::std::string* start_stake);

  // required string end_stake = 4;
  bool has_end_stake() const;
  void clear_end_stake();
  static const int kEndStakeFieldNumber = 4;
  const ::std::string& end_stake() const;
  void set_end_stake(const ::std::string& value);
  #if LANG_CXX11
  void set_end_stake(::std::string&& value);
  #endif
  void set_end_stake(const char* value);
  void set_end_stake(const char* value, size_t size);
  ::std::string* mutable_end_stake();
  ::std::string* release_end_stake();
  void set_allocated_end_stake(::std::string* end_stake);

  // required int64 start_time = 5;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  ::google::protobuf::int64 start_time() const;
  void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 6;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  ::google::protobuf::int64 end_time() const;
  void set_end_time(::google::protobuf::int64 value);

  // required int32 status = 7;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.DeviceTask)
 private:
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_start_stake();
  void clear_has_start_stake();
  void set_has_end_stake();
  void clear_has_end_stake();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_status();
  void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::google::protobuf::internal::ArenaStringPtr start_stake_;
  ::google::protobuf::internal::ArenaStringPtr end_stake_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsDeviceTaskImpl();
};
// -------------------------------------------------------------------

class StakeDto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.StakeDto) */ {
 public:
  StakeDto();
  virtual ~StakeDto();

  StakeDto(const StakeDto& from);

  inline StakeDto& operator=(const StakeDto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StakeDto(StakeDto&& from) noexcept
    : StakeDto() {
    *this = ::std::move(from);
  }

  inline StakeDto& operator=(StakeDto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StakeDto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StakeDto* internal_default_instance() {
    return reinterpret_cast<const StakeDto*>(
               &_StakeDto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(StakeDto* other);
  friend void swap(StakeDto& a, StakeDto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StakeDto* New() const PROTOBUF_FINAL { return New(NULL); }

  StakeDto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StakeDto& from);
  void MergeFrom(const StakeDto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StakeDto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string stake = 1;
  bool has_stake() const;
  void clear_stake();
  static const int kStakeFieldNumber = 1;
  const ::std::string& stake() const;
  void set_stake(const ::std::string& value);
  #if LANG_CXX11
  void set_stake(::std::string&& value);
  #endif
  void set_stake(const char* value);
  void set_stake(const char* value, size_t size);
  ::std::string* mutable_stake();
  ::std::string* release_stake();
  void set_allocated_stake(::std::string* stake);

  // required double x = 4;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 4;
  double x() const;
  void set_x(double value);

  // required double y = 5;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 5;
  double y() const;
  void set_y(double value);

  // required double Z = 6;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 6;
  double z() const;
  void set_z(double value);

  // required double ground = 8;
  bool has_ground() const;
  void clear_ground();
  static const int kGroundFieldNumber = 8;
  double ground() const;
  void set_ground(double value);

  // required double angle = 9;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 9;
  double angle() const;
  void set_angle(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.StakeDto)
 private:
  void set_has_stake();
  void clear_has_stake();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();
  void set_has_ground();
  void clear_has_ground();
  void set_has_angle();
  void clear_has_angle();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr stake_;
  double x_;
  double y_;
  double z_;
  double ground_;
  double angle_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoImpl();
};
// -------------------------------------------------------------------

class StakeDtoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.StakeDtoList) */ {
 public:
  StakeDtoList();
  virtual ~StakeDtoList();

  StakeDtoList(const StakeDtoList& from);

  inline StakeDtoList& operator=(const StakeDtoList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StakeDtoList(StakeDtoList&& from) noexcept
    : StakeDtoList() {
    *this = ::std::move(from);
  }

  inline StakeDtoList& operator=(StakeDtoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StakeDtoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StakeDtoList* internal_default_instance() {
    return reinterpret_cast<const StakeDtoList*>(
               &_StakeDtoList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(StakeDtoList* other);
  friend void swap(StakeDtoList& a, StakeDtoList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StakeDtoList* New() const PROTOBUF_FINAL { return New(NULL); }

  StakeDtoList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StakeDtoList& from);
  void MergeFrom(const StakeDtoList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StakeDtoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 7;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 7;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // @@protoc_insertion_point(class_scope:middle_layer_pb.StakeDtoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListImpl();
};
// -------------------------------------------------------------------

class StakeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.StakeInfo) */ {
 public:
  StakeInfo();
  virtual ~StakeInfo();

  StakeInfo(const StakeInfo& from);

  inline StakeInfo& operator=(const StakeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StakeInfo(StakeInfo&& from) noexcept
    : StakeInfo() {
    *this = ::std::move(from);
  }

  inline StakeInfo& operator=(StakeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StakeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StakeInfo* internal_default_instance() {
    return reinterpret_cast<const StakeInfo*>(
               &_StakeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(StakeInfo* other);
  friend void swap(StakeInfo& a, StakeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StakeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  StakeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StakeInfo& from);
  void MergeFrom(const StakeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StakeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake = 1;
  int stake_size() const;
  void clear_stake();
  static const int kStakeFieldNumber = 1;
  const ::middle_layer_pb::StakeDto& stake(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake(int index);
  ::middle_layer_pb::StakeDto* add_stake();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake() const;

  // repeated string stop_line = 2;
  int stop_line_size() const;
  void clear_stop_line();
  static const int kStopLineFieldNumber = 2;
  const ::std::string& stop_line(int index) const;
  ::std::string* mutable_stop_line(int index);
  void set_stop_line(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_stop_line(int index, ::std::string&& value);
  #endif
  void set_stop_line(int index, const char* value);
  void set_stop_line(int index, const char* value, size_t size);
  ::std::string* add_stop_line();
  void add_stop_line(const ::std::string& value);
  #if LANG_CXX11
  void add_stop_line(::std::string&& value);
  #endif
  void add_stop_line(const char* value);
  void add_stop_line(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& stop_line() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stop_line();

  // @@protoc_insertion_point(class_scope:middle_layer_pb.StakeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stop_line_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeInfoImpl();
};
// -------------------------------------------------------------------

class StakeDtoListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.StakeDtoListReq) */ {
 public:
  StakeDtoListReq();
  virtual ~StakeDtoListReq();

  StakeDtoListReq(const StakeDtoListReq& from);

  inline StakeDtoListReq& operator=(const StakeDtoListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StakeDtoListReq(StakeDtoListReq&& from) noexcept
    : StakeDtoListReq() {
    *this = ::std::move(from);
  }

  inline StakeDtoListReq& operator=(StakeDtoListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StakeDtoListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StakeDtoListReq* internal_default_instance() {
    return reinterpret_cast<const StakeDtoListReq*>(
               &_StakeDtoListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(StakeDtoListReq* other);
  friend void swap(StakeDtoListReq& a, StakeDtoListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StakeDtoListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StakeDtoListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StakeDtoListReq& from);
  void MergeFrom(const StakeDtoListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StakeDtoListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeInfo stake_info = 3;
  int stake_info_size() const;
  void clear_stake_info();
  static const int kStakeInfoFieldNumber = 3;
  const ::middle_layer_pb::StakeInfo& stake_info(int index) const;
  ::middle_layer_pb::StakeInfo* mutable_stake_info(int index);
  ::middle_layer_pb::StakeInfo* add_stake_info();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeInfo >*
      mutable_stake_info();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeInfo >&
      stake_info() const;

  // required int32 section_index = 1;
  bool has_section_index() const;
  void clear_section_index();
  static const int kSectionIndexFieldNumber = 1;
  ::google::protobuf::int32 section_index() const;
  void set_section_index(::google::protobuf::int32 value);

  // required .middle_layer_pb.WorkType work_type = 2;
  bool has_work_type() const;
  void clear_work_type();
  static const int kWorkTypeFieldNumber = 2;
  ::middle_layer_pb::WorkType work_type() const;
  void set_work_type(::middle_layer_pb::WorkType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.StakeDtoListReq)
 private:
  void set_has_section_index();
  void clear_has_section_index();
  void set_has_work_type();
  void clear_has_work_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeInfo > stake_info_;
  ::google::protobuf::int32 section_index_;
  int work_type_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListReqImpl();
};
// -------------------------------------------------------------------

class StakeDtoListRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.StakeDtoListRes) */ {
 public:
  StakeDtoListRes();
  virtual ~StakeDtoListRes();

  StakeDtoListRes(const StakeDtoListRes& from);

  inline StakeDtoListRes& operator=(const StakeDtoListRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StakeDtoListRes(StakeDtoListRes&& from) noexcept
    : StakeDtoListRes() {
    *this = ::std::move(from);
  }

  inline StakeDtoListRes& operator=(StakeDtoListRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StakeDtoListRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StakeDtoListRes* internal_default_instance() {
    return reinterpret_cast<const StakeDtoListRes*>(
               &_StakeDtoListRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(StakeDtoListRes* other);
  friend void swap(StakeDtoListRes& a, StakeDtoListRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StakeDtoListRes* New() const PROTOBUF_FINAL { return New(NULL); }

  StakeDtoListRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StakeDtoListRes& from);
  void MergeFrom(const StakeDtoListRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StakeDtoListRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // required int32 section_index = 2;
  bool has_section_index() const;
  void clear_section_index();
  static const int kSectionIndexFieldNumber = 2;
  ::google::protobuf::int32 section_index() const;
  void set_section_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.StakeDtoListRes)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_section_index();
  void clear_has_section_index();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int code_;
  ::google::protobuf::int32 section_index_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListResImpl();
};
// -------------------------------------------------------------------

class PutSideLineParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PutSideLineParam) */ {
 public:
  PutSideLineParam();
  virtual ~PutSideLineParam();

  PutSideLineParam(const PutSideLineParam& from);

  inline PutSideLineParam& operator=(const PutSideLineParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutSideLineParam(PutSideLineParam&& from) noexcept
    : PutSideLineParam() {
    *this = ::std::move(from);
  }

  inline PutSideLineParam& operator=(PutSideLineParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutSideLineParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutSideLineParam* internal_default_instance() {
    return reinterpret_cast<const PutSideLineParam*>(
               &_PutSideLineParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(PutSideLineParam* other);
  friend void swap(PutSideLineParam& a, PutSideLineParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutSideLineParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PutSideLineParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutSideLineParam& from);
  void MergeFrom(const PutSideLineParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutSideLineParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 safety_offset = 4;
  bool has_safety_offset() const;
  void clear_safety_offset();
  static const int kSafetyOffsetFieldNumber = 4;
  ::google::protobuf::int32 safety_offset() const;
  void set_safety_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PutSideLineParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_safety_offset();
  void clear_has_safety_offset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 safety_offset_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPutSideLineParamImpl();
};
// -------------------------------------------------------------------

class PutMidLineParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PutMidLineParam) */ {
 public:
  PutMidLineParam();
  virtual ~PutMidLineParam();

  PutMidLineParam(const PutMidLineParam& from);

  inline PutMidLineParam& operator=(const PutMidLineParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutMidLineParam(PutMidLineParam&& from) noexcept
    : PutMidLineParam() {
    *this = ::std::move(from);
  }

  inline PutMidLineParam& operator=(PutMidLineParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutMidLineParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutMidLineParam* internal_default_instance() {
    return reinterpret_cast<const PutMidLineParam*>(
               &_PutMidLineParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(PutMidLineParam* other);
  friend void swap(PutMidLineParam& a, PutMidLineParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutMidLineParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PutMidLineParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutMidLineParam& from);
  void MergeFrom(const PutMidLineParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutMidLineParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lcSpacing = 1;
  bool has_lcspacing() const;
  void clear_lcspacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lcspacing() const;
  void set_lcspacing(::google::protobuf::int32 value);

  // required int32 measuringSpacing = 2;
  bool has_measuringspacing() const;
  void clear_measuringspacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuringspacing() const;
  void set_measuringspacing(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PutMidLineParam)
 private:
  void set_has_lcspacing();
  void clear_has_lcspacing();
  void set_has_measuringspacing();
  void clear_has_measuringspacing();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lcspacing_;
  ::google::protobuf::int32 measuringspacing_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPutMidLineParamImpl();
};
// -------------------------------------------------------------------

class PutLevellingParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PutLevellingParam) */ {
 public:
  PutLevellingParam();
  virtual ~PutLevellingParam();

  PutLevellingParam(const PutLevellingParam& from);

  inline PutLevellingParam& operator=(const PutLevellingParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutLevellingParam(PutLevellingParam&& from) noexcept
    : PutLevellingParam() {
    *this = ::std::move(from);
  }

  inline PutLevellingParam& operator=(PutLevellingParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutLevellingParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutLevellingParam* internal_default_instance() {
    return reinterpret_cast<const PutLevellingParam*>(
               &_PutLevellingParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(PutLevellingParam* other);
  friend void swap(PutLevellingParam& a, PutLevellingParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutLevellingParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PutLevellingParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutLevellingParam& from);
  void MergeFrom(const PutLevellingParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutLevellingParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 levelling_num = 4;
  bool has_levelling_num() const;
  void clear_levelling_num();
  static const int kLevellingNumFieldNumber = 4;
  ::google::protobuf::int32 levelling_num() const;
  void set_levelling_num(::google::protobuf::int32 value);

  // required double press_coefficient = 5;
  bool has_press_coefficient() const;
  void clear_press_coefficient();
  static const int kPressCoefficientFieldNumber = 5;
  double press_coefficient() const;
  void set_press_coefficient(double value);

  // required double point_density = 6;
  bool has_point_density() const;
  void clear_point_density();
  static const int kPointDensityFieldNumber = 6;
  double point_density() const;
  void set_point_density(double value);

  // required double Layer_thickness = 7;
  bool has_layer_thickness() const;
  void clear_layer_thickness();
  static const int kLayerThicknessFieldNumber = 7;
  double layer_thickness() const;
  void set_layer_thickness(double value);

  // required double total_thickness = 8;
  bool has_total_thickness() const;
  void clear_total_thickness();
  static const int kTotalThicknessFieldNumber = 8;
  double total_thickness() const;
  void set_total_thickness(double value);

  // required int32 safety_offset = 9;
  bool has_safety_offset() const;
  void clear_safety_offset();
  static const int kSafetyOffsetFieldNumber = 9;
  ::google::protobuf::int32 safety_offset() const;
  void set_safety_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PutLevellingParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_levelling_num();
  void clear_has_levelling_num();
  void set_has_press_coefficient();
  void clear_has_press_coefficient();
  void set_has_point_density();
  void clear_has_point_density();
  void set_has_layer_thickness();
  void clear_has_layer_thickness();
  void set_has_total_thickness();
  void clear_has_total_thickness();
  void set_has_safety_offset();
  void clear_has_safety_offset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 levelling_num_;
  double press_coefficient_;
  double point_density_;
  double layer_thickness_;
  double total_thickness_;
  ::google::protobuf::int32 safety_offset_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPutLevellingParamImpl();
};
// -------------------------------------------------------------------

class PutLaneLineParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PutLaneLineParam) */ {
 public:
  PutLaneLineParam();
  virtual ~PutLaneLineParam();

  PutLaneLineParam(const PutLaneLineParam& from);

  inline PutLaneLineParam& operator=(const PutLaneLineParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutLaneLineParam(PutLaneLineParam&& from) noexcept
    : PutLaneLineParam() {
    *this = ::std::move(from);
  }

  inline PutLaneLineParam& operator=(PutLaneLineParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutLaneLineParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutLaneLineParam* internal_default_instance() {
    return reinterpret_cast<const PutLaneLineParam*>(
               &_PutLaneLineParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(PutLaneLineParam* other);
  friend void swap(PutLaneLineParam& a, PutLaneLineParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutLaneLineParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PutLaneLineParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutLaneLineParam& from);
  void MergeFrom(const PutLaneLineParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutLaneLineParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 lane_num = 4;
  bool has_lane_num() const;
  void clear_lane_num();
  static const int kLaneNumFieldNumber = 4;
  ::google::protobuf::int32 lane_num() const;
  void set_lane_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PutLaneLineParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_lane_num();
  void clear_has_lane_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 lane_num_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPutLaneLineParamImpl();
};
// -------------------------------------------------------------------

class PutCrossSectionParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PutCrossSectionParam) */ {
 public:
  PutCrossSectionParam();
  virtual ~PutCrossSectionParam();

  PutCrossSectionParam(const PutCrossSectionParam& from);

  inline PutCrossSectionParam& operator=(const PutCrossSectionParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutCrossSectionParam(PutCrossSectionParam&& from) noexcept
    : PutCrossSectionParam() {
    *this = ::std::move(from);
  }

  inline PutCrossSectionParam& operator=(PutCrossSectionParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutCrossSectionParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutCrossSectionParam* internal_default_instance() {
    return reinterpret_cast<const PutCrossSectionParam*>(
               &_PutCrossSectionParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(PutCrossSectionParam* other);
  friend void swap(PutCrossSectionParam& a, PutCrossSectionParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutCrossSectionParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PutCrossSectionParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutCrossSectionParam& from);
  void MergeFrom(const PutCrossSectionParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutCrossSectionParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required double point_density = 4;
  bool has_point_density() const;
  void clear_point_density();
  static const int kPointDensityFieldNumber = 4;
  double point_density() const;
  void set_point_density(double value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PutCrossSectionParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_point_density();
  void clear_has_point_density();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  double point_density_;
  ::google::protobuf::int32 side_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPutCrossSectionParamImpl();
};
// -------------------------------------------------------------------

class DrawStandardSquareParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.DrawStandardSquareParam) */ {
 public:
  DrawStandardSquareParam();
  virtual ~DrawStandardSquareParam();

  DrawStandardSquareParam(const DrawStandardSquareParam& from);

  inline DrawStandardSquareParam& operator=(const DrawStandardSquareParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DrawStandardSquareParam(DrawStandardSquareParam&& from) noexcept
    : DrawStandardSquareParam() {
    *this = ::std::move(from);
  }

  inline DrawStandardSquareParam& operator=(DrawStandardSquareParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawStandardSquareParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrawStandardSquareParam* internal_default_instance() {
    return reinterpret_cast<const DrawStandardSquareParam*>(
               &_DrawStandardSquareParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(DrawStandardSquareParam* other);
  friend void swap(DrawStandardSquareParam& a, DrawStandardSquareParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrawStandardSquareParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DrawStandardSquareParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DrawStandardSquareParam& from);
  void MergeFrom(const DrawStandardSquareParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DrawStandardSquareParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required double square_length = 4;
  bool has_square_length() const;
  void clear_square_length();
  static const int kSquareLengthFieldNumber = 4;
  double square_length() const;
  void set_square_length(double value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 square_row = 6;
  bool has_square_row() const;
  void clear_square_row();
  static const int kSquareRowFieldNumber = 6;
  ::google::protobuf::int32 square_row() const;
  void set_square_row(::google::protobuf::int32 value);

  // required double square_width = 5;
  bool has_square_width() const;
  void clear_square_width();
  static const int kSquareWidthFieldNumber = 5;
  double square_width() const;
  void set_square_width(double value);

  // required double require_earthwork = 8;
  bool has_require_earthwork() const;
  void clear_require_earthwork();
  static const int kRequireEarthworkFieldNumber = 8;
  double require_earthwork() const;
  void set_require_earthwork(double value);

  // required int32 square_columns = 7;
  bool has_square_columns() const;
  void clear_square_columns();
  static const int kSquareColumnsFieldNumber = 7;
  ::google::protobuf::int32 square_columns() const;
  void set_square_columns(::google::protobuf::int32 value);

  // required int32 safety_offset = 10;
  bool has_safety_offset() const;
  void clear_safety_offset();
  static const int kSafetyOffsetFieldNumber = 10;
  ::google::protobuf::int32 safety_offset() const;
  void set_safety_offset(::google::protobuf::int32 value);

  // required double fill_dig_height = 9;
  bool has_fill_dig_height() const;
  void clear_fill_dig_height();
  static const int kFillDigHeightFieldNumber = 9;
  double fill_dig_height() const;
  void set_fill_dig_height(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.DrawStandardSquareParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_square_length();
  void clear_has_square_length();
  void set_has_square_width();
  void clear_has_square_width();
  void set_has_square_row();
  void clear_has_square_row();
  void set_has_square_columns();
  void clear_has_square_columns();
  void set_has_require_earthwork();
  void clear_has_require_earthwork();
  void set_has_fill_dig_height();
  void clear_has_fill_dig_height();
  void set_has_safety_offset();
  void clear_has_safety_offset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  double square_length_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 square_row_;
  double square_width_;
  double require_earthwork_;
  ::google::protobuf::int32 square_columns_;
  ::google::protobuf::int32 safety_offset_;
  double fill_dig_height_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParamImpl();
};
// -------------------------------------------------------------------

class DrawSideLineParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.DrawSideLineParam) */ {
 public:
  DrawSideLineParam();
  virtual ~DrawSideLineParam();

  DrawSideLineParam(const DrawSideLineParam& from);

  inline DrawSideLineParam& operator=(const DrawSideLineParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DrawSideLineParam(DrawSideLineParam&& from) noexcept
    : DrawSideLineParam() {
    *this = ::std::move(from);
  }

  inline DrawSideLineParam& operator=(DrawSideLineParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawSideLineParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrawSideLineParam* internal_default_instance() {
    return reinterpret_cast<const DrawSideLineParam*>(
               &_DrawSideLineParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(DrawSideLineParam* other);
  friend void swap(DrawSideLineParam& a, DrawSideLineParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrawSideLineParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DrawSideLineParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DrawSideLineParam& from);
  void MergeFrom(const DrawSideLineParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DrawSideLineParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 safety_offset = 4;
  bool has_safety_offset() const;
  void clear_safety_offset();
  static const int kSafetyOffsetFieldNumber = 4;
  ::google::protobuf::int32 safety_offset() const;
  void set_safety_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.DrawSideLineParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_safety_offset();
  void clear_has_safety_offset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 safety_offset_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawSideLineParamImpl();
};
// -------------------------------------------------------------------

class DrawMidLineParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.DrawMidLineParam) */ {
 public:
  DrawMidLineParam();
  virtual ~DrawMidLineParam();

  DrawMidLineParam(const DrawMidLineParam& from);

  inline DrawMidLineParam& operator=(const DrawMidLineParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DrawMidLineParam(DrawMidLineParam&& from) noexcept
    : DrawMidLineParam() {
    *this = ::std::move(from);
  }

  inline DrawMidLineParam& operator=(DrawMidLineParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawMidLineParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrawMidLineParam* internal_default_instance() {
    return reinterpret_cast<const DrawMidLineParam*>(
               &_DrawMidLineParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(DrawMidLineParam* other);
  friend void swap(DrawMidLineParam& a, DrawMidLineParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrawMidLineParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DrawMidLineParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DrawMidLineParam& from);
  void MergeFrom(const DrawMidLineParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DrawMidLineParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lcSpacing = 1;
  bool has_lcspacing() const;
  void clear_lcspacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lcspacing() const;
  void set_lcspacing(::google::protobuf::int32 value);

  // required int32 measuringSpacing = 2;
  bool has_measuringspacing() const;
  void clear_measuringspacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuringspacing() const;
  void set_measuringspacing(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.DrawMidLineParam)
 private:
  void set_has_lcspacing();
  void clear_has_lcspacing();
  void set_has_measuringspacing();
  void clear_has_measuringspacing();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lcspacing_;
  ::google::protobuf::int32 measuringspacing_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawMidLineParamImpl();
};
// -------------------------------------------------------------------

class DrawStakesHelpParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.DrawStakesHelpParam) */ {
 public:
  DrawStakesHelpParam();
  virtual ~DrawStakesHelpParam();

  DrawStakesHelpParam(const DrawStakesHelpParam& from);

  inline DrawStakesHelpParam& operator=(const DrawStakesHelpParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DrawStakesHelpParam(DrawStakesHelpParam&& from) noexcept
    : DrawStakesHelpParam() {
    *this = ::std::move(from);
  }

  inline DrawStakesHelpParam& operator=(DrawStakesHelpParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DrawStakesHelpParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrawStakesHelpParam* internal_default_instance() {
    return reinterpret_cast<const DrawStakesHelpParam*>(
               &_DrawStakesHelpParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(DrawStakesHelpParam* other);
  friend void swap(DrawStakesHelpParam& a, DrawStakesHelpParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrawStakesHelpParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DrawStakesHelpParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DrawStakesHelpParam& from);
  void MergeFrom(const DrawStakesHelpParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DrawStakesHelpParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lc_spacing = 1;
  bool has_lc_spacing() const;
  void clear_lc_spacing();
  static const int kLcSpacingFieldNumber = 1;
  ::google::protobuf::int32 lc_spacing() const;
  void set_lc_spacing(::google::protobuf::int32 value);

  // required int32 measuring_spacing = 2;
  bool has_measuring_spacing() const;
  void clear_measuring_spacing();
  static const int kMeasuringSpacingFieldNumber = 2;
  ::google::protobuf::int32 measuring_spacing() const;
  void set_measuring_spacing(::google::protobuf::int32 value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 levelling_num = 4;
  bool has_levelling_num() const;
  void clear_levelling_num();
  static const int kLevellingNumFieldNumber = 4;
  ::google::protobuf::int32 levelling_num() const;
  void set_levelling_num(::google::protobuf::int32 value);

  // required double press_coefficient = 5;
  bool has_press_coefficient() const;
  void clear_press_coefficient();
  static const int kPressCoefficientFieldNumber = 5;
  double press_coefficient() const;
  void set_press_coefficient(double value);

  // required double Layer_thickness = 6;
  bool has_layer_thickness() const;
  void clear_layer_thickness();
  static const int kLayerThicknessFieldNumber = 6;
  double layer_thickness() const;
  void set_layer_thickness(double value);

  // required double total_thickness = 7;
  bool has_total_thickness() const;
  void clear_total_thickness();
  static const int kTotalThicknessFieldNumber = 7;
  double total_thickness() const;
  void set_total_thickness(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.DrawStakesHelpParam)
 private:
  void set_has_lc_spacing();
  void clear_has_lc_spacing();
  void set_has_measuring_spacing();
  void clear_has_measuring_spacing();
  void set_has_side();
  void clear_has_side();
  void set_has_levelling_num();
  void clear_has_levelling_num();
  void set_has_press_coefficient();
  void clear_has_press_coefficient();
  void set_has_layer_thickness();
  void clear_has_layer_thickness();
  void set_has_total_thickness();
  void clear_has_total_thickness();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lc_spacing_;
  ::google::protobuf::int32 measuring_spacing_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 levelling_num_;
  double press_coefficient_;
  double layer_thickness_;
  double total_thickness_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawStakesHelpParamImpl();
};
// -------------------------------------------------------------------

class WorkEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.WorkEndNotify) */ {
 public:
  WorkEndNotify();
  virtual ~WorkEndNotify();

  WorkEndNotify(const WorkEndNotify& from);

  inline WorkEndNotify& operator=(const WorkEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkEndNotify(WorkEndNotify&& from) noexcept
    : WorkEndNotify() {
    *this = ::std::move(from);
  }

  inline WorkEndNotify& operator=(WorkEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkEndNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkEndNotify* internal_default_instance() {
    return reinterpret_cast<const WorkEndNotify*>(
               &_WorkEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(WorkEndNotify* other);
  friend void swap(WorkEndNotify& a, WorkEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorkEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorkEndNotify& from);
  void MergeFrom(const WorkEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorkEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.DeviceTask device_task = 2;
  bool has_device_task() const;
  void clear_device_task();
  static const int kDeviceTaskFieldNumber = 2;
  const ::middle_layer_pb::DeviceTask& device_task() const;
  ::middle_layer_pb::DeviceTask* release_device_task();
  ::middle_layer_pb::DeviceTask* mutable_device_task();
  void set_allocated_device_task(::middle_layer_pb::DeviceTask* device_task);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.WorkEndNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_device_task();
  void clear_has_device_task();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::DeviceTask* device_task_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkEndNotifyImpl();
};
// -------------------------------------------------------------------

class OperationRobotReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.OperationRobotReq) */ {
 public:
  OperationRobotReq();
  virtual ~OperationRobotReq();

  OperationRobotReq(const OperationRobotReq& from);

  inline OperationRobotReq& operator=(const OperationRobotReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationRobotReq(OperationRobotReq&& from) noexcept
    : OperationRobotReq() {
    *this = ::std::move(from);
  }

  inline OperationRobotReq& operator=(OperationRobotReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationRobotReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationRobotReq* internal_default_instance() {
    return reinterpret_cast<const OperationRobotReq*>(
               &_OperationRobotReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(OperationRobotReq* other);
  friend void swap(OperationRobotReq& a, OperationRobotReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationRobotReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationRobotReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationRobotReq& from);
  void MergeFrom(const OperationRobotReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationRobotReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.enOperationType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::middle_layer_pb::enOperationType type() const;
  void set_type(::middle_layer_pb::enOperationType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.OperationRobotReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int type_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsOperationRobotReqImpl();
};
// -------------------------------------------------------------------

class OperationRobotRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.OperationRobotRes) */ {
 public:
  OperationRobotRes();
  virtual ~OperationRobotRes();

  OperationRobotRes(const OperationRobotRes& from);

  inline OperationRobotRes& operator=(const OperationRobotRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationRobotRes(OperationRobotRes&& from) noexcept
    : OperationRobotRes() {
    *this = ::std::move(from);
  }

  inline OperationRobotRes& operator=(OperationRobotRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationRobotRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationRobotRes* internal_default_instance() {
    return reinterpret_cast<const OperationRobotRes*>(
               &_OperationRobotRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(OperationRobotRes* other);
  friend void swap(OperationRobotRes& a, OperationRobotRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationRobotRes* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationRobotRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationRobotRes& from);
  void MergeFrom(const OperationRobotRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationRobotRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .middle_layer_pb.ErrorCode code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // optional .middle_layer_pb.enOperationType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::middle_layer_pb::enOperationType type() const;
  void set_type(::middle_layer_pb::enOperationType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.OperationRobotRes)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int code_;
  int type_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsOperationRobotResImpl();
};
// -------------------------------------------------------------------

class CalSideStakeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSideStakeReq) */ {
 public:
  CalSideStakeReq();
  virtual ~CalSideStakeReq();

  CalSideStakeReq(const CalSideStakeReq& from);

  inline CalSideStakeReq& operator=(const CalSideStakeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSideStakeReq(CalSideStakeReq&& from) noexcept
    : CalSideStakeReq() {
    *this = ::std::move(from);
  }

  inline CalSideStakeReq& operator=(CalSideStakeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSideStakeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSideStakeReq* internal_default_instance() {
    return reinterpret_cast<const CalSideStakeReq*>(
               &_CalSideStakeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(CalSideStakeReq* other);
  friend void swap(CalSideStakeReq& a, CalSideStakeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSideStakeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSideStakeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSideStakeReq& from);
  void MergeFrom(const CalSideStakeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSideStakeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.StakeDto stake_dto = 3;
  bool has_stake_dto() const;
  void clear_stake_dto();
  static const int kStakeDtoFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto() const;
  ::middle_layer_pb::StakeDto* release_stake_dto();
  ::middle_layer_pb::StakeDto* mutable_stake_dto();
  void set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto);

  // required .middle_layer_pb.PointLLH pt = 4;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 4;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // required int32 side = 5;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 5;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSideStakeReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_stake_dto();
  void clear_has_stake_dto();
  void set_has_pt();
  void clear_has_pt();
  void set_has_side();
  void clear_has_side();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::StakeDto* stake_dto_;
  ::middle_layer_pb::PointLLH* pt_;
  ::google::protobuf::int32 side_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeReqImpl();
};
// -------------------------------------------------------------------

class CalSideStakeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSideStakeRes) */ {
 public:
  CalSideStakeRes();
  virtual ~CalSideStakeRes();

  CalSideStakeRes(const CalSideStakeRes& from);

  inline CalSideStakeRes& operator=(const CalSideStakeRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSideStakeRes(CalSideStakeRes&& from) noexcept
    : CalSideStakeRes() {
    *this = ::std::move(from);
  }

  inline CalSideStakeRes& operator=(CalSideStakeRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSideStakeRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSideStakeRes* internal_default_instance() {
    return reinterpret_cast<const CalSideStakeRes*>(
               &_CalSideStakeRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CalSideStakeRes* other);
  friend void swap(CalSideStakeRes& a, CalSideStakeRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSideStakeRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSideStakeRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSideStakeRes& from);
  void MergeFrom(const CalSideStakeRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSideStakeRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.StakeDto stake_dto = 3;
  bool has_stake_dto() const;
  void clear_stake_dto();
  static const int kStakeDtoFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto() const;
  ::middle_layer_pb::StakeDto* release_stake_dto();
  ::middle_layer_pb::StakeDto* mutable_stake_dto();
  void set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSideStakeRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();
  void set_has_stake_dto();
  void clear_has_stake_dto();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::StakeDto* stake_dto_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeResImpl();
};
// -------------------------------------------------------------------

class CalSideStakeListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSideStakeListReq) */ {
 public:
  CalSideStakeListReq();
  virtual ~CalSideStakeListReq();

  CalSideStakeListReq(const CalSideStakeListReq& from);

  inline CalSideStakeListReq& operator=(const CalSideStakeListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSideStakeListReq(CalSideStakeListReq&& from) noexcept
    : CalSideStakeListReq() {
    *this = ::std::move(from);
  }

  inline CalSideStakeListReq& operator=(CalSideStakeListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSideStakeListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSideStakeListReq* internal_default_instance() {
    return reinterpret_cast<const CalSideStakeListReq*>(
               &_CalSideStakeListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(CalSideStakeListReq* other);
  friend void swap(CalSideStakeListReq& a, CalSideStakeListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSideStakeListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSideStakeListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSideStakeListReq& from);
  void MergeFrom(const CalSideStakeListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSideStakeListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.PointLLH pt = 4;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 4;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // required int32 side = 5;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 5;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required int32 safety_offset = 6;
  bool has_safety_offset() const;
  void clear_safety_offset();
  static const int kSafetyOffsetFieldNumber = 6;
  ::google::protobuf::int32 safety_offset() const;
  void set_safety_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSideStakeListReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_pt();
  void clear_has_pt();
  void set_has_side();
  void clear_has_side();
  void set_has_safety_offset();
  void clear_has_safety_offset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::PointLLH* pt_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 safety_offset_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeListReqImpl();
};
// -------------------------------------------------------------------

class CalSideStakeListRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSideStakeListRes) */ {
 public:
  CalSideStakeListRes();
  virtual ~CalSideStakeListRes();

  CalSideStakeListRes(const CalSideStakeListRes& from);

  inline CalSideStakeListRes& operator=(const CalSideStakeListRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSideStakeListRes(CalSideStakeListRes&& from) noexcept
    : CalSideStakeListRes() {
    *this = ::std::move(from);
  }

  inline CalSideStakeListRes& operator=(CalSideStakeListRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSideStakeListRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSideStakeListRes* internal_default_instance() {
    return reinterpret_cast<const CalSideStakeListRes*>(
               &_CalSideStakeListRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(CalSideStakeListRes* other);
  friend void swap(CalSideStakeListRes& a, CalSideStakeListRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSideStakeListRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSideStakeListRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSideStakeListRes& from);
  void MergeFrom(const CalSideStakeListRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSideStakeListRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSideStakeListRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeListResImpl();
};
// -------------------------------------------------------------------

class CalLaneStakeListRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalLaneStakeListRes) */ {
 public:
  CalLaneStakeListRes();
  virtual ~CalLaneStakeListRes();

  CalLaneStakeListRes(const CalLaneStakeListRes& from);

  inline CalLaneStakeListRes& operator=(const CalLaneStakeListRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalLaneStakeListRes(CalLaneStakeListRes&& from) noexcept
    : CalLaneStakeListRes() {
    *this = ::std::move(from);
  }

  inline CalLaneStakeListRes& operator=(CalLaneStakeListRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalLaneStakeListRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalLaneStakeListRes* internal_default_instance() {
    return reinterpret_cast<const CalLaneStakeListRes*>(
               &_CalLaneStakeListRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(CalLaneStakeListRes* other);
  friend void swap(CalLaneStakeListRes& a, CalLaneStakeListRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalLaneStakeListRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalLaneStakeListRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalLaneStakeListRes& from);
  void MergeFrom(const CalLaneStakeListRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalLaneStakeListRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalLaneStakeListRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLaneStakeListResImpl();
};
// -------------------------------------------------------------------

class CalLaneStakeListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalLaneStakeListReq) */ {
 public:
  CalLaneStakeListReq();
  virtual ~CalLaneStakeListReq();

  CalLaneStakeListReq(const CalLaneStakeListReq& from);

  inline CalLaneStakeListReq& operator=(const CalLaneStakeListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalLaneStakeListReq(CalLaneStakeListReq&& from) noexcept
    : CalLaneStakeListReq() {
    *this = ::std::move(from);
  }

  inline CalLaneStakeListReq& operator=(CalLaneStakeListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalLaneStakeListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalLaneStakeListReq* internal_default_instance() {
    return reinterpret_cast<const CalLaneStakeListReq*>(
               &_CalLaneStakeListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(CalLaneStakeListReq* other);
  friend void swap(CalLaneStakeListReq& a, CalLaneStakeListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalLaneStakeListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalLaneStakeListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalLaneStakeListReq& from);
  void MergeFrom(const CalLaneStakeListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalLaneStakeListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
  bool has_put_lane_line_param() const;
  void clear_put_lane_line_param();
  static const int kPutLaneLineParamFieldNumber = 4;
  const ::middle_layer_pb::PutLaneLineParam& put_lane_line_param() const;
  ::middle_layer_pb::PutLaneLineParam* release_put_lane_line_param();
  ::middle_layer_pb::PutLaneLineParam* mutable_put_lane_line_param();
  void set_allocated_put_lane_line_param(::middle_layer_pb::PutLaneLineParam* put_lane_line_param);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalLaneStakeListReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_put_lane_line_param();
  void clear_has_put_lane_line_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::PutLaneLineParam* put_lane_line_param_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLaneStakeListReqImpl();
};
// -------------------------------------------------------------------

class CalCrossSectionStakeArrayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalCrossSectionStakeArrayReq) */ {
 public:
  CalCrossSectionStakeArrayReq();
  virtual ~CalCrossSectionStakeArrayReq();

  CalCrossSectionStakeArrayReq(const CalCrossSectionStakeArrayReq& from);

  inline CalCrossSectionStakeArrayReq& operator=(const CalCrossSectionStakeArrayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalCrossSectionStakeArrayReq(CalCrossSectionStakeArrayReq&& from) noexcept
    : CalCrossSectionStakeArrayReq() {
    *this = ::std::move(from);
  }

  inline CalCrossSectionStakeArrayReq& operator=(CalCrossSectionStakeArrayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalCrossSectionStakeArrayReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalCrossSectionStakeArrayReq* internal_default_instance() {
    return reinterpret_cast<const CalCrossSectionStakeArrayReq*>(
               &_CalCrossSectionStakeArrayReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(CalCrossSectionStakeArrayReq* other);
  friend void swap(CalCrossSectionStakeArrayReq& a, CalCrossSectionStakeArrayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalCrossSectionStakeArrayReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalCrossSectionStakeArrayReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalCrossSectionStakeArrayReq& from);
  void MergeFrom(const CalCrossSectionStakeArrayReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalCrossSectionStakeArrayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 5;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
  bool has_put_cross_section_param() const;
  void clear_put_cross_section_param();
  static const int kPutCrossSectionParamFieldNumber = 3;
  const ::middle_layer_pb::PutCrossSectionParam& put_cross_section_param() const;
  ::middle_layer_pb::PutCrossSectionParam* release_put_cross_section_param();
  ::middle_layer_pb::PutCrossSectionParam* mutable_put_cross_section_param();
  void set_allocated_put_cross_section_param(::middle_layer_pb::PutCrossSectionParam* put_cross_section_param);

  // required .middle_layer_pb.PointLLH pt = 4;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 4;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalCrossSectionStakeArrayReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_put_cross_section_param();
  void clear_has_put_cross_section_param();
  void set_has_pt();
  void clear_has_pt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::PutCrossSectionParam* put_cross_section_param_;
  ::middle_layer_pb::PointLLH* pt_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalCrossSectionStakeArrayReqImpl();
};
// -------------------------------------------------------------------

class CalCrossSectionStakeArrayRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalCrossSectionStakeArrayRes) */ {
 public:
  CalCrossSectionStakeArrayRes();
  virtual ~CalCrossSectionStakeArrayRes();

  CalCrossSectionStakeArrayRes(const CalCrossSectionStakeArrayRes& from);

  inline CalCrossSectionStakeArrayRes& operator=(const CalCrossSectionStakeArrayRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalCrossSectionStakeArrayRes(CalCrossSectionStakeArrayRes&& from) noexcept
    : CalCrossSectionStakeArrayRes() {
    *this = ::std::move(from);
  }

  inline CalCrossSectionStakeArrayRes& operator=(CalCrossSectionStakeArrayRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalCrossSectionStakeArrayRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalCrossSectionStakeArrayRes* internal_default_instance() {
    return reinterpret_cast<const CalCrossSectionStakeArrayRes*>(
               &_CalCrossSectionStakeArrayRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(CalCrossSectionStakeArrayRes* other);
  friend void swap(CalCrossSectionStakeArrayRes& a, CalCrossSectionStakeArrayRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalCrossSectionStakeArrayRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalCrossSectionStakeArrayRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalCrossSectionStakeArrayRes& from);
  void MergeFrom(const CalCrossSectionStakeArrayRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalCrossSectionStakeArrayRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  int stake_dto_two_list_size() const;
  void clear_stake_dto_two_list();
  static const int kStakeDtoTwoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDtoList& stake_dto_two_list(int index) const;
  ::middle_layer_pb::StakeDtoList* mutable_stake_dto_two_list(int index);
  ::middle_layer_pb::StakeDtoList* add_stake_dto_two_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >*
      mutable_stake_dto_two_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >&
      stake_dto_two_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalCrossSectionStakeArrayRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList > stake_dto_two_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalCrossSectionStakeArrayResImpl();
};
// -------------------------------------------------------------------

class CalStandardSquareParamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalStandardSquareParamReq) */ {
 public:
  CalStandardSquareParamReq();
  virtual ~CalStandardSquareParamReq();

  CalStandardSquareParamReq(const CalStandardSquareParamReq& from);

  inline CalStandardSquareParamReq& operator=(const CalStandardSquareParamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalStandardSquareParamReq(CalStandardSquareParamReq&& from) noexcept
    : CalStandardSquareParamReq() {
    *this = ::std::move(from);
  }

  inline CalStandardSquareParamReq& operator=(CalStandardSquareParamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalStandardSquareParamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalStandardSquareParamReq* internal_default_instance() {
    return reinterpret_cast<const CalStandardSquareParamReq*>(
               &_CalStandardSquareParamReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(CalStandardSquareParamReq* other);
  friend void swap(CalStandardSquareParamReq& a, CalStandardSquareParamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalStandardSquareParamReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalStandardSquareParamReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalStandardSquareParamReq& from);
  void MergeFrom(const CalStandardSquareParamReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalStandardSquareParamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  bool has_draw_standard_square_param() const;
  void clear_draw_standard_square_param();
  static const int kDrawStandardSquareParamFieldNumber = 3;
  const ::middle_layer_pb::DrawStandardSquareParam& draw_standard_square_param() const;
  ::middle_layer_pb::DrawStandardSquareParam* release_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* mutable_draw_standard_square_param();
  void set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param);

  // required .middle_layer_pb.StakeDto stake_dto = 4;
  bool has_stake_dto() const;
  void clear_stake_dto();
  static const int kStakeDtoFieldNumber = 4;
  const ::middle_layer_pb::StakeDto& stake_dto() const;
  ::middle_layer_pb::StakeDto* release_stake_dto();
  ::middle_layer_pb::StakeDto* mutable_stake_dto();
  void set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto);

  // required .middle_layer_pb.PointLLH pt = 5;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 5;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // required int32 side = 6;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 6;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalStandardSquareParamReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_draw_standard_square_param();
  void clear_has_draw_standard_square_param();
  void set_has_stake_dto();
  void clear_has_stake_dto();
  void set_has_pt();
  void clear_has_pt();
  void set_has_side();
  void clear_has_side();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param_;
  ::middle_layer_pb::StakeDto* stake_dto_;
  ::middle_layer_pb::PointLLH* pt_;
  ::google::protobuf::int32 side_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStandardSquareParamReqImpl();
};
// -------------------------------------------------------------------

class CalStandardSquareParamRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalStandardSquareParamRes) */ {
 public:
  CalStandardSquareParamRes();
  virtual ~CalStandardSquareParamRes();

  CalStandardSquareParamRes(const CalStandardSquareParamRes& from);

  inline CalStandardSquareParamRes& operator=(const CalStandardSquareParamRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalStandardSquareParamRes(CalStandardSquareParamRes&& from) noexcept
    : CalStandardSquareParamRes() {
    *this = ::std::move(from);
  }

  inline CalStandardSquareParamRes& operator=(CalStandardSquareParamRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalStandardSquareParamRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalStandardSquareParamRes* internal_default_instance() {
    return reinterpret_cast<const CalStandardSquareParamRes*>(
               &_CalStandardSquareParamRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CalStandardSquareParamRes* other);
  friend void swap(CalStandardSquareParamRes& a, CalStandardSquareParamRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalStandardSquareParamRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalStandardSquareParamRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalStandardSquareParamRes& from);
  void MergeFrom(const CalStandardSquareParamRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalStandardSquareParamRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  bool has_draw_standard_square_param() const;
  void clear_draw_standard_square_param();
  static const int kDrawStandardSquareParamFieldNumber = 3;
  const ::middle_layer_pb::DrawStandardSquareParam& draw_standard_square_param() const;
  ::middle_layer_pb::DrawStandardSquareParam* release_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* mutable_draw_standard_square_param();
  void set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalStandardSquareParamRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();
  void set_has_draw_standard_square_param();
  void clear_has_draw_standard_square_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStandardSquareParamResImpl();
};
// -------------------------------------------------------------------

class CalSquareWidthStakeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSquareWidthStakeReq) */ {
 public:
  CalSquareWidthStakeReq();
  virtual ~CalSquareWidthStakeReq();

  CalSquareWidthStakeReq(const CalSquareWidthStakeReq& from);

  inline CalSquareWidthStakeReq& operator=(const CalSquareWidthStakeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSquareWidthStakeReq(CalSquareWidthStakeReq&& from) noexcept
    : CalSquareWidthStakeReq() {
    *this = ::std::move(from);
  }

  inline CalSquareWidthStakeReq& operator=(CalSquareWidthStakeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSquareWidthStakeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSquareWidthStakeReq* internal_default_instance() {
    return reinterpret_cast<const CalSquareWidthStakeReq*>(
               &_CalSquareWidthStakeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(CalSquareWidthStakeReq* other);
  friend void swap(CalSquareWidthStakeReq& a, CalSquareWidthStakeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSquareWidthStakeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSquareWidthStakeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSquareWidthStakeReq& from);
  void MergeFrom(const CalSquareWidthStakeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSquareWidthStakeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  bool has_draw_standard_square_param() const;
  void clear_draw_standard_square_param();
  static const int kDrawStandardSquareParamFieldNumber = 3;
  const ::middle_layer_pb::DrawStandardSquareParam& draw_standard_square_param() const;
  ::middle_layer_pb::DrawStandardSquareParam* release_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* mutable_draw_standard_square_param();
  void set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param);

  // required .middle_layer_pb.StakeDto stake_dto = 4;
  bool has_stake_dto() const;
  void clear_stake_dto();
  static const int kStakeDtoFieldNumber = 4;
  const ::middle_layer_pb::StakeDto& stake_dto() const;
  ::middle_layer_pb::StakeDto* release_stake_dto();
  ::middle_layer_pb::StakeDto* mutable_stake_dto();
  void set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto);

  // required .middle_layer_pb.PointLLH pt = 5;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 5;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // required int32 side = 6;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 6;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSquareWidthStakeReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_draw_standard_square_param();
  void clear_has_draw_standard_square_param();
  void set_has_stake_dto();
  void clear_has_stake_dto();
  void set_has_pt();
  void clear_has_pt();
  void set_has_side();
  void clear_has_side();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param_;
  ::middle_layer_pb::StakeDto* stake_dto_;
  ::middle_layer_pb::PointLLH* pt_;
  ::google::protobuf::int32 side_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareWidthStakeReqImpl();
};
// -------------------------------------------------------------------

class CalSquareWidthStakeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSquareWidthStakeRes) */ {
 public:
  CalSquareWidthStakeRes();
  virtual ~CalSquareWidthStakeRes();

  CalSquareWidthStakeRes(const CalSquareWidthStakeRes& from);

  inline CalSquareWidthStakeRes& operator=(const CalSquareWidthStakeRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSquareWidthStakeRes(CalSquareWidthStakeRes&& from) noexcept
    : CalSquareWidthStakeRes() {
    *this = ::std::move(from);
  }

  inline CalSquareWidthStakeRes& operator=(CalSquareWidthStakeRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSquareWidthStakeRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSquareWidthStakeRes* internal_default_instance() {
    return reinterpret_cast<const CalSquareWidthStakeRes*>(
               &_CalSquareWidthStakeRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(CalSquareWidthStakeRes* other);
  friend void swap(CalSquareWidthStakeRes& a, CalSquareWidthStakeRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSquareWidthStakeRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSquareWidthStakeRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSquareWidthStakeRes& from);
  void MergeFrom(const CalSquareWidthStakeRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSquareWidthStakeRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSquareWidthStakeRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareWidthStakeResImpl();
};
// -------------------------------------------------------------------

class CalSquareStakeArrayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSquareStakeArrayReq) */ {
 public:
  CalSquareStakeArrayReq();
  virtual ~CalSquareStakeArrayReq();

  CalSquareStakeArrayReq(const CalSquareStakeArrayReq& from);

  inline CalSquareStakeArrayReq& operator=(const CalSquareStakeArrayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSquareStakeArrayReq(CalSquareStakeArrayReq&& from) noexcept
    : CalSquareStakeArrayReq() {
    *this = ::std::move(from);
  }

  inline CalSquareStakeArrayReq& operator=(CalSquareStakeArrayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSquareStakeArrayReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSquareStakeArrayReq* internal_default_instance() {
    return reinterpret_cast<const CalSquareStakeArrayReq*>(
               &_CalSquareStakeArrayReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CalSquareStakeArrayReq* other);
  friend void swap(CalSquareStakeArrayReq& a, CalSquareStakeArrayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSquareStakeArrayReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSquareStakeArrayReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSquareStakeArrayReq& from);
  void MergeFrom(const CalSquareStakeArrayReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSquareStakeArrayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 4;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  bool has_draw_standard_square_param() const;
  void clear_draw_standard_square_param();
  static const int kDrawStandardSquareParamFieldNumber = 3;
  const ::middle_layer_pb::DrawStandardSquareParam& draw_standard_square_param() const;
  ::middle_layer_pb::DrawStandardSquareParam* release_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* mutable_draw_standard_square_param();
  void set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param);

  // required .middle_layer_pb.PointLLH pt = 5;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 5;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSquareStakeArrayReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_draw_standard_square_param();
  void clear_has_draw_standard_square_param();
  void set_has_pt();
  void clear_has_pt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param_;
  ::middle_layer_pb::PointLLH* pt_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareStakeArrayReqImpl();
};
// -------------------------------------------------------------------

class CalSquareStakeArrayRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalSquareStakeArrayRes) */ {
 public:
  CalSquareStakeArrayRes();
  virtual ~CalSquareStakeArrayRes();

  CalSquareStakeArrayRes(const CalSquareStakeArrayRes& from);

  inline CalSquareStakeArrayRes& operator=(const CalSquareStakeArrayRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalSquareStakeArrayRes(CalSquareStakeArrayRes&& from) noexcept
    : CalSquareStakeArrayRes() {
    *this = ::std::move(from);
  }

  inline CalSquareStakeArrayRes& operator=(CalSquareStakeArrayRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalSquareStakeArrayRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalSquareStakeArrayRes* internal_default_instance() {
    return reinterpret_cast<const CalSquareStakeArrayRes*>(
               &_CalSquareStakeArrayRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(CalSquareStakeArrayRes* other);
  friend void swap(CalSquareStakeArrayRes& a, CalSquareStakeArrayRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalSquareStakeArrayRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalSquareStakeArrayRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalSquareStakeArrayRes& from);
  void MergeFrom(const CalSquareStakeArrayRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalSquareStakeArrayRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 4;
  int stake_dto_two_list_size() const;
  void clear_stake_dto_two_list();
  static const int kStakeDtoTwoListFieldNumber = 4;
  const ::middle_layer_pb::StakeDtoList& stake_dto_two_list(int index) const;
  ::middle_layer_pb::StakeDtoList* mutable_stake_dto_two_list(int index);
  ::middle_layer_pb::StakeDtoList* add_stake_dto_two_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >*
      mutable_stake_dto_two_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >&
      stake_dto_two_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalSquareStakeArrayRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList > stake_dto_two_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareStakeArrayResImpl();
};
// -------------------------------------------------------------------

class CalLevellingStakeArrayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalLevellingStakeArrayReq) */ {
 public:
  CalLevellingStakeArrayReq();
  virtual ~CalLevellingStakeArrayReq();

  CalLevellingStakeArrayReq(const CalLevellingStakeArrayReq& from);

  inline CalLevellingStakeArrayReq& operator=(const CalLevellingStakeArrayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalLevellingStakeArrayReq(CalLevellingStakeArrayReq&& from) noexcept
    : CalLevellingStakeArrayReq() {
    *this = ::std::move(from);
  }

  inline CalLevellingStakeArrayReq& operator=(CalLevellingStakeArrayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalLevellingStakeArrayReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalLevellingStakeArrayReq* internal_default_instance() {
    return reinterpret_cast<const CalLevellingStakeArrayReq*>(
               &_CalLevellingStakeArrayReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(CalLevellingStakeArrayReq* other);
  friend void swap(CalLevellingStakeArrayReq& a, CalLevellingStakeArrayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalLevellingStakeArrayReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalLevellingStakeArrayReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalLevellingStakeArrayReq& from);
  void MergeFrom(const CalLevellingStakeArrayReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalLevellingStakeArrayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 4;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
  bool has_put_levelling_param() const;
  void clear_put_levelling_param();
  static const int kPutLevellingParamFieldNumber = 3;
  const ::middle_layer_pb::PutLevellingParam& put_levelling_param() const;
  ::middle_layer_pb::PutLevellingParam* release_put_levelling_param();
  ::middle_layer_pb::PutLevellingParam* mutable_put_levelling_param();
  void set_allocated_put_levelling_param(::middle_layer_pb::PutLevellingParam* put_levelling_param);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalLevellingStakeArrayReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_put_levelling_param();
  void clear_has_put_levelling_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::PutLevellingParam* put_levelling_param_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLevellingStakeArrayReqImpl();
};
// -------------------------------------------------------------------

class CalLevellingStakeArrayRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalLevellingStakeArrayRes) */ {
 public:
  CalLevellingStakeArrayRes();
  virtual ~CalLevellingStakeArrayRes();

  CalLevellingStakeArrayRes(const CalLevellingStakeArrayRes& from);

  inline CalLevellingStakeArrayRes& operator=(const CalLevellingStakeArrayRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalLevellingStakeArrayRes(CalLevellingStakeArrayRes&& from) noexcept
    : CalLevellingStakeArrayRes() {
    *this = ::std::move(from);
  }

  inline CalLevellingStakeArrayRes& operator=(CalLevellingStakeArrayRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalLevellingStakeArrayRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalLevellingStakeArrayRes* internal_default_instance() {
    return reinterpret_cast<const CalLevellingStakeArrayRes*>(
               &_CalLevellingStakeArrayRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(CalLevellingStakeArrayRes* other);
  friend void swap(CalLevellingStakeArrayRes& a, CalLevellingStakeArrayRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalLevellingStakeArrayRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalLevellingStakeArrayRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalLevellingStakeArrayRes& from);
  void MergeFrom(const CalLevellingStakeArrayRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalLevellingStakeArrayRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  int stake_dto_two_list_size() const;
  void clear_stake_dto_two_list();
  static const int kStakeDtoTwoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDtoList& stake_dto_two_list(int index) const;
  ::middle_layer_pb::StakeDtoList* mutable_stake_dto_two_list(int index);
  ::middle_layer_pb::StakeDtoList* add_stake_dto_two_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >*
      mutable_stake_dto_two_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >&
      stake_dto_two_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalLevellingStakeArrayRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList > stake_dto_two_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLevellingStakeArrayResImpl();
};
// -------------------------------------------------------------------

class CalStakesHelpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalStakesHelpReq) */ {
 public:
  CalStakesHelpReq();
  virtual ~CalStakesHelpReq();

  CalStakesHelpReq(const CalStakesHelpReq& from);

  inline CalStakesHelpReq& operator=(const CalStakesHelpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalStakesHelpReq(CalStakesHelpReq&& from) noexcept
    : CalStakesHelpReq() {
    *this = ::std::move(from);
  }

  inline CalStakesHelpReq& operator=(CalStakesHelpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalStakesHelpReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalStakesHelpReq* internal_default_instance() {
    return reinterpret_cast<const CalStakesHelpReq*>(
               &_CalStakesHelpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(CalStakesHelpReq* other);
  friend void swap(CalStakesHelpReq& a, CalStakesHelpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalStakesHelpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CalStakesHelpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalStakesHelpReq& from);
  void MergeFrom(const CalStakesHelpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalStakesHelpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 4;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string task_code = 2;
  bool has_task_code() const;
  void clear_task_code();
  static const int kTaskCodeFieldNumber = 2;
  const ::std::string& task_code() const;
  void set_task_code(const ::std::string& value);
  #if LANG_CXX11
  void set_task_code(::std::string&& value);
  #endif
  void set_task_code(const char* value);
  void set_task_code(const char* value, size_t size);
  ::std::string* mutable_task_code();
  ::std::string* release_task_code();
  void set_allocated_task_code(::std::string* task_code);

  // required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
  bool has_draw_stakes_help_param() const;
  void clear_draw_stakes_help_param();
  static const int kDrawStakesHelpParamFieldNumber = 3;
  const ::middle_layer_pb::DrawStakesHelpParam& draw_stakes_help_param() const;
  ::middle_layer_pb::DrawStakesHelpParam* release_draw_stakes_help_param();
  ::middle_layer_pb::DrawStakesHelpParam* mutable_draw_stakes_help_param();
  void set_allocated_draw_stakes_help_param(::middle_layer_pb::DrawStakesHelpParam* draw_stakes_help_param);

  // required .middle_layer_pb.PointLLH pt = 5;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 5;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalStakesHelpReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_task_code();
  void clear_has_task_code();
  void set_has_draw_stakes_help_param();
  void clear_has_draw_stakes_help_param();
  void set_has_pt();
  void clear_has_pt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr task_code_;
  ::middle_layer_pb::DrawStakesHelpParam* draw_stakes_help_param_;
  ::middle_layer_pb::PointLLH* pt_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStakesHelpReqImpl();
};
// -------------------------------------------------------------------

class CalStakesHelpRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CalStakesHelpRes) */ {
 public:
  CalStakesHelpRes();
  virtual ~CalStakesHelpRes();

  CalStakesHelpRes(const CalStakesHelpRes& from);

  inline CalStakesHelpRes& operator=(const CalStakesHelpRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalStakesHelpRes(CalStakesHelpRes&& from) noexcept
    : CalStakesHelpRes() {
    *this = ::std::move(from);
  }

  inline CalStakesHelpRes& operator=(CalStakesHelpRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalStakesHelpRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalStakesHelpRes* internal_default_instance() {
    return reinterpret_cast<const CalStakesHelpRes*>(
               &_CalStakesHelpRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(CalStakesHelpRes* other);
  friend void swap(CalStakesHelpRes& a, CalStakesHelpRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalStakesHelpRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CalStakesHelpRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CalStakesHelpRes& from);
  void MergeFrom(const CalStakesHelpRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CalStakesHelpRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  int stake_dto_list_size() const;
  void clear_stake_dto_list();
  static const int kStakeDtoListFieldNumber = 3;
  const ::middle_layer_pb::StakeDto& stake_dto_list(int index) const;
  ::middle_layer_pb::StakeDto* mutable_stake_dto_list(int index);
  ::middle_layer_pb::StakeDto* add_stake_dto_list();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
      mutable_stake_dto_list();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
      stake_dto_list() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CalStakesHelpRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto > stake_dto_list_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStakesHelpResImpl();
};
// -------------------------------------------------------------------

class RobotManualOperationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotManualOperationReq) */ {
 public:
  RobotManualOperationReq();
  virtual ~RobotManualOperationReq();

  RobotManualOperationReq(const RobotManualOperationReq& from);

  inline RobotManualOperationReq& operator=(const RobotManualOperationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotManualOperationReq(RobotManualOperationReq&& from) noexcept
    : RobotManualOperationReq() {
    *this = ::std::move(from);
  }

  inline RobotManualOperationReq& operator=(RobotManualOperationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotManualOperationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotManualOperationReq* internal_default_instance() {
    return reinterpret_cast<const RobotManualOperationReq*>(
               &_RobotManualOperationReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(RobotManualOperationReq* other);
  friend void swap(RobotManualOperationReq& a, RobotManualOperationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotManualOperationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotManualOperationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotManualOperationReq& from);
  void MergeFrom(const RobotManualOperationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotManualOperationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RobotManualOperationReq_enDirectionType enDirectionType;
  static const enDirectionType DIRECTION_TYPE_INVALID =
    RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_INVALID;
  static const enDirectionType DIRECTION_TYPE_LEFT =
    RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_LEFT;
  static const enDirectionType DIRECTION_TYPE_RIGHT =
    RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_RIGHT;
  static const enDirectionType DIRECTION_TYPE_FRONT =
    RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_FRONT;
  static const enDirectionType DIRECTION_TYPE_AFTER =
    RobotManualOperationReq_enDirectionType_DIRECTION_TYPE_AFTER;
  static inline bool enDirectionType_IsValid(int value) {
    return RobotManualOperationReq_enDirectionType_IsValid(value);
  }
  static const enDirectionType enDirectionType_MIN =
    RobotManualOperationReq_enDirectionType_enDirectionType_MIN;
  static const enDirectionType enDirectionType_MAX =
    RobotManualOperationReq_enDirectionType_enDirectionType_MAX;
  static const int enDirectionType_ARRAYSIZE =
    RobotManualOperationReq_enDirectionType_enDirectionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  enDirectionType_descriptor() {
    return RobotManualOperationReq_enDirectionType_descriptor();
  }
  static inline const ::std::string& enDirectionType_Name(enDirectionType value) {
    return RobotManualOperationReq_enDirectionType_Name(value);
  }
  static inline bool enDirectionType_Parse(const ::std::string& name,
      enDirectionType* value) {
    return RobotManualOperationReq_enDirectionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required double vertical_value = 4;
  bool has_vertical_value() const;
  void clear_vertical_value();
  static const int kVerticalValueFieldNumber = 4;
  double vertical_value() const;
  void set_vertical_value(double value);

  // required double horizontal_value = 5;
  bool has_horizontal_value() const;
  void clear_horizontal_value();
  static const int kHorizontalValueFieldNumber = 5;
  double horizontal_value() const;
  void set_horizontal_value(double value);

  // required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
  bool has_vertical_direction() const;
  void clear_vertical_direction();
  static const int kVerticalDirectionFieldNumber = 2;
  ::middle_layer_pb::RobotManualOperationReq_enDirectionType vertical_direction() const;
  void set_vertical_direction(::middle_layer_pb::RobotManualOperationReq_enDirectionType value);

  // required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
  bool has_horizontal_direction() const;
  void clear_horizontal_direction();
  static const int kHorizontalDirectionFieldNumber = 3;
  ::middle_layer_pb::RobotManualOperationReq_enDirectionType horizontal_direction() const;
  void set_horizontal_direction(::middle_layer_pb::RobotManualOperationReq_enDirectionType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotManualOperationReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_vertical_direction();
  void clear_has_vertical_direction();
  void set_has_horizontal_direction();
  void clear_has_horizontal_direction();
  void set_has_vertical_value();
  void clear_has_vertical_value();
  void set_has_horizontal_value();
  void clear_has_horizontal_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  double vertical_value_;
  double horizontal_value_;
  int vertical_direction_;
  int horizontal_direction_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotManualOperationReqImpl();
};
// -------------------------------------------------------------------

class RobotManualOperationRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotManualOperationRes) */ {
 public:
  RobotManualOperationRes();
  virtual ~RobotManualOperationRes();

  RobotManualOperationRes(const RobotManualOperationRes& from);

  inline RobotManualOperationRes& operator=(const RobotManualOperationRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotManualOperationRes(RobotManualOperationRes&& from) noexcept
    : RobotManualOperationRes() {
    *this = ::std::move(from);
  }

  inline RobotManualOperationRes& operator=(RobotManualOperationRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotManualOperationRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotManualOperationRes* internal_default_instance() {
    return reinterpret_cast<const RobotManualOperationRes*>(
               &_RobotManualOperationRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(RobotManualOperationRes* other);
  friend void swap(RobotManualOperationRes& a, RobotManualOperationRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotManualOperationRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotManualOperationRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotManualOperationRes& from);
  void MergeFrom(const RobotManualOperationRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotManualOperationRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotManualOperationRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotManualOperationResImpl();
};
// -------------------------------------------------------------------

class RobotAutopilotModeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotAutopilotModeReq) */ {
 public:
  RobotAutopilotModeReq();
  virtual ~RobotAutopilotModeReq();

  RobotAutopilotModeReq(const RobotAutopilotModeReq& from);

  inline RobotAutopilotModeReq& operator=(const RobotAutopilotModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotAutopilotModeReq(RobotAutopilotModeReq&& from) noexcept
    : RobotAutopilotModeReq() {
    *this = ::std::move(from);
  }

  inline RobotAutopilotModeReq& operator=(RobotAutopilotModeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotAutopilotModeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotAutopilotModeReq* internal_default_instance() {
    return reinterpret_cast<const RobotAutopilotModeReq*>(
               &_RobotAutopilotModeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(RobotAutopilotModeReq* other);
  friend void swap(RobotAutopilotModeReq& a, RobotAutopilotModeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotAutopilotModeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotAutopilotModeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotAutopilotModeReq& from);
  void MergeFrom(const RobotAutopilotModeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotAutopilotModeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .middle_layer_pb.PlaneCoordinatesParams plane_coordinates_params = 1;
  int plane_coordinates_params_size() const;
  void clear_plane_coordinates_params();
  static const int kPlaneCoordinatesParamsFieldNumber = 1;
  const ::middle_layer_pb::PlaneCoordinatesParams& plane_coordinates_params(int index) const;
  ::middle_layer_pb::PlaneCoordinatesParams* mutable_plane_coordinates_params(int index);
  ::middle_layer_pb::PlaneCoordinatesParams* add_plane_coordinates_params();
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::PlaneCoordinatesParams >*
      mutable_plane_coordinates_params();
  const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::PlaneCoordinatesParams >&
      plane_coordinates_params() const;

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotAutopilotModeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::PlaneCoordinatesParams > plane_coordinates_params_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotAutopilotModeReqImpl();
};
// -------------------------------------------------------------------

class PlaneCoordinatesParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.PlaneCoordinatesParams) */ {
 public:
  PlaneCoordinatesParams();
  virtual ~PlaneCoordinatesParams();

  PlaneCoordinatesParams(const PlaneCoordinatesParams& from);

  inline PlaneCoordinatesParams& operator=(const PlaneCoordinatesParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaneCoordinatesParams(PlaneCoordinatesParams&& from) noexcept
    : PlaneCoordinatesParams() {
    *this = ::std::move(from);
  }

  inline PlaneCoordinatesParams& operator=(PlaneCoordinatesParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneCoordinatesParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaneCoordinatesParams* internal_default_instance() {
    return reinterpret_cast<const PlaneCoordinatesParams*>(
               &_PlaneCoordinatesParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(PlaneCoordinatesParams* other);
  friend void swap(PlaneCoordinatesParams& a, PlaneCoordinatesParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaneCoordinatesParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaneCoordinatesParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneCoordinatesParams& from);
  void MergeFrom(const PlaneCoordinatesParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneCoordinatesParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // required double y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double Z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // required double angle = 4;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 4;
  double angle() const;
  void set_angle(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.PlaneCoordinatesParams)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();
  void set_has_angle();
  void clear_has_angle();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  double angle_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsPlaneCoordinatesParamsImpl();
};
// -------------------------------------------------------------------

class RobotAutopilotModeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotAutopilotModeRes) */ {
 public:
  RobotAutopilotModeRes();
  virtual ~RobotAutopilotModeRes();

  RobotAutopilotModeRes(const RobotAutopilotModeRes& from);

  inline RobotAutopilotModeRes& operator=(const RobotAutopilotModeRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotAutopilotModeRes(RobotAutopilotModeRes&& from) noexcept
    : RobotAutopilotModeRes() {
    *this = ::std::move(from);
  }

  inline RobotAutopilotModeRes& operator=(RobotAutopilotModeRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotAutopilotModeRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotAutopilotModeRes* internal_default_instance() {
    return reinterpret_cast<const RobotAutopilotModeRes*>(
               &_RobotAutopilotModeRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(RobotAutopilotModeRes* other);
  friend void swap(RobotAutopilotModeRes& a, RobotAutopilotModeRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotAutopilotModeRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotAutopilotModeRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotAutopilotModeRes& from);
  void MergeFrom(const RobotAutopilotModeRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotAutopilotModeRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotAutopilotModeRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotAutopilotModeResImpl();
};
// -------------------------------------------------------------------

class RobotDustingNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotDustingNotify) */ {
 public:
  RobotDustingNotify();
  virtual ~RobotDustingNotify();

  RobotDustingNotify(const RobotDustingNotify& from);

  inline RobotDustingNotify& operator=(const RobotDustingNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotDustingNotify(RobotDustingNotify&& from) noexcept
    : RobotDustingNotify() {
    *this = ::std::move(from);
  }

  inline RobotDustingNotify& operator=(RobotDustingNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotDustingNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotDustingNotify* internal_default_instance() {
    return reinterpret_cast<const RobotDustingNotify*>(
               &_RobotDustingNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(RobotDustingNotify* other);
  friend void swap(RobotDustingNotify& a, RobotDustingNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotDustingNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotDustingNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotDustingNotify& from);
  void MergeFrom(const RobotDustingNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotDustingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RobotDustingNotify_DustingSwitchType DustingSwitchType;
  static const DustingSwitchType switch_close =
    RobotDustingNotify_DustingSwitchType_switch_close;
  static const DustingSwitchType switch_open =
    RobotDustingNotify_DustingSwitchType_switch_open;
  static inline bool DustingSwitchType_IsValid(int value) {
    return RobotDustingNotify_DustingSwitchType_IsValid(value);
  }
  static const DustingSwitchType DustingSwitchType_MIN =
    RobotDustingNotify_DustingSwitchType_DustingSwitchType_MIN;
  static const DustingSwitchType DustingSwitchType_MAX =
    RobotDustingNotify_DustingSwitchType_DustingSwitchType_MAX;
  static const int DustingSwitchType_ARRAYSIZE =
    RobotDustingNotify_DustingSwitchType_DustingSwitchType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DustingSwitchType_descriptor() {
    return RobotDustingNotify_DustingSwitchType_descriptor();
  }
  static inline const ::std::string& DustingSwitchType_Name(DustingSwitchType value) {
    return RobotDustingNotify_DustingSwitchType_Name(value);
  }
  static inline bool DustingSwitchType_Parse(const ::std::string& name,
      DustingSwitchType* value) {
    return RobotDustingNotify_DustingSwitchType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.RobotSiloParams silo_params = 2;
  bool has_silo_params() const;
  void clear_silo_params();
  static const int kSiloParamsFieldNumber = 2;
  const ::middle_layer_pb::RobotSiloParams& silo_params() const;
  ::middle_layer_pb::RobotSiloParams* release_silo_params();
  ::middle_layer_pb::RobotSiloParams* mutable_silo_params();
  void set_allocated_silo_params(::middle_layer_pb::RobotSiloParams* silo_params);

  // required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
  bool has_dusting_slider_params() const;
  void clear_dusting_slider_params();
  static const int kDustingSliderParamsFieldNumber = 3;
  const ::middle_layer_pb::RobotDustingSliderParams& dusting_slider_params() const;
  ::middle_layer_pb::RobotDustingSliderParams* release_dusting_slider_params();
  ::middle_layer_pb::RobotDustingSliderParams* mutable_dusting_slider_params();
  void set_allocated_dusting_slider_params(::middle_layer_pb::RobotDustingSliderParams* dusting_slider_params);

  // required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
  bool has_dusting_switch_type() const;
  void clear_dusting_switch_type();
  static const int kDustingSwitchTypeFieldNumber = 4;
  ::middle_layer_pb::RobotDustingNotify_DustingSwitchType dusting_switch_type() const;
  void set_dusting_switch_type(::middle_layer_pb::RobotDustingNotify_DustingSwitchType value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotDustingNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_silo_params();
  void clear_has_silo_params();
  void set_has_dusting_slider_params();
  void clear_has_dusting_slider_params();
  void set_has_dusting_switch_type();
  void clear_has_dusting_switch_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::RobotSiloParams* silo_params_;
  ::middle_layer_pb::RobotDustingSliderParams* dusting_slider_params_;
  int dusting_switch_type_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingNotifyImpl();
};
// -------------------------------------------------------------------

class RobotSiloParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotSiloParams) */ {
 public:
  RobotSiloParams();
  virtual ~RobotSiloParams();

  RobotSiloParams(const RobotSiloParams& from);

  inline RobotSiloParams& operator=(const RobotSiloParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotSiloParams(RobotSiloParams&& from) noexcept
    : RobotSiloParams() {
    *this = ::std::move(from);
  }

  inline RobotSiloParams& operator=(RobotSiloParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotSiloParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotSiloParams* internal_default_instance() {
    return reinterpret_cast<const RobotSiloParams*>(
               &_RobotSiloParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(RobotSiloParams* other);
  friend void swap(RobotSiloParams& a, RobotSiloParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotSiloParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotSiloParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotSiloParams& from);
  void MergeFrom(const RobotSiloParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotSiloParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double powder_total = 1;
  bool has_powder_total() const;
  void clear_powder_total();
  static const int kPowderTotalFieldNumber = 1;
  double powder_total() const;
  void set_powder_total(double value);

  // required double powder_margin = 2;
  bool has_powder_margin() const;
  void clear_powder_margin();
  static const int kPowderMarginFieldNumber = 2;
  double powder_margin() const;
  void set_powder_margin(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotSiloParams)
 private:
  void set_has_powder_total();
  void clear_has_powder_total();
  void set_has_powder_margin();
  void clear_has_powder_margin();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double powder_total_;
  double powder_margin_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotSiloParamsImpl();
};
// -------------------------------------------------------------------

class RobotDustingSliderParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.RobotDustingSliderParams) */ {
 public:
  RobotDustingSliderParams();
  virtual ~RobotDustingSliderParams();

  RobotDustingSliderParams(const RobotDustingSliderParams& from);

  inline RobotDustingSliderParams& operator=(const RobotDustingSliderParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotDustingSliderParams(RobotDustingSliderParams&& from) noexcept
    : RobotDustingSliderParams() {
    *this = ::std::move(from);
  }

  inline RobotDustingSliderParams& operator=(RobotDustingSliderParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotDustingSliderParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotDustingSliderParams* internal_default_instance() {
    return reinterpret_cast<const RobotDustingSliderParams*>(
               &_RobotDustingSliderParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(RobotDustingSliderParams* other);
  friend void swap(RobotDustingSliderParams& a, RobotDustingSliderParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotDustingSliderParams* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotDustingSliderParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotDustingSliderParams& from);
  void MergeFrom(const RobotDustingSliderParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotDustingSliderParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double offset_x = 1;
  bool has_offset_x() const;
  void clear_offset_x();
  static const int kOffsetXFieldNumber = 1;
  double offset_x() const;
  void set_offset_x(double value);

  // required double offset_y = 2;
  bool has_offset_y() const;
  void clear_offset_y();
  static const int kOffsetYFieldNumber = 2;
  double offset_y() const;
  void set_offset_y(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.RobotDustingSliderParams)
 private:
  void set_has_offset_x();
  void clear_has_offset_x();
  void set_has_offset_y();
  void clear_has_offset_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double offset_x_;
  double offset_y_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingSliderParamsImpl();
};
// -------------------------------------------------------------------

class FourParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.FourParam) */ {
 public:
  FourParam();
  virtual ~FourParam();

  FourParam(const FourParam& from);

  inline FourParam& operator=(const FourParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FourParam(FourParam&& from) noexcept
    : FourParam() {
    *this = ::std::move(from);
  }

  inline FourParam& operator=(FourParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FourParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FourParam* internal_default_instance() {
    return reinterpret_cast<const FourParam*>(
               &_FourParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(FourParam* other);
  friend void swap(FourParam& a, FourParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FourParam* New() const PROTOBUF_FINAL { return New(NULL); }

  FourParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FourParam& from);
  void MergeFrom(const FourParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FourParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double dx = 1;
  bool has_dx() const;
  void clear_dx();
  static const int kDxFieldNumber = 1;
  double dx() const;
  void set_dx(double value);

  // required double dy = 2;
  bool has_dy() const;
  void clear_dy();
  static const int kDyFieldNumber = 2;
  double dy() const;
  void set_dy(double value);

  // required double scale = 3;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  double scale() const;
  void set_scale(double value);

  // required double rotate = 4;
  bool has_rotate() const;
  void clear_rotate();
  static const int kRotateFieldNumber = 4;
  double rotate() const;
  void set_rotate(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.FourParam)
 private:
  void set_has_dx();
  void clear_has_dx();
  void set_has_dy();
  void clear_has_dy();
  void set_has_scale();
  void clear_has_scale();
  void set_has_rotate();
  void clear_has_rotate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double dx_;
  double dy_;
  double scale_;
  double rotate_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsFourParamImpl();
};
// -------------------------------------------------------------------

class ProjectionParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.ProjectionParam) */ {
 public:
  ProjectionParam();
  virtual ~ProjectionParam();

  ProjectionParam(const ProjectionParam& from);

  inline ProjectionParam& operator=(const ProjectionParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectionParam(ProjectionParam&& from) noexcept
    : ProjectionParam() {
    *this = ::std::move(from);
  }

  inline ProjectionParam& operator=(ProjectionParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectionParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectionParam* internal_default_instance() {
    return reinterpret_cast<const ProjectionParam*>(
               &_ProjectionParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(ProjectionParam* other);
  friend void swap(ProjectionParam& a, ProjectionParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectionParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ProjectionParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProjectionParam& from);
  void MergeFrom(const ProjectionParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProjectionParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string projection_name = 1;
  bool has_projection_name() const;
  void clear_projection_name();
  static const int kProjectionNameFieldNumber = 1;
  const ::std::string& projection_name() const;
  void set_projection_name(const ::std::string& value);
  #if LANG_CXX11
  void set_projection_name(::std::string&& value);
  #endif
  void set_projection_name(const char* value);
  void set_projection_name(const char* value, size_t size);
  ::std::string* mutable_projection_name();
  ::std::string* release_projection_name();
  void set_allocated_projection_name(::std::string* projection_name);

  // required double scale_factor = 2;
  bool has_scale_factor() const;
  void clear_scale_factor();
  static const int kScaleFactorFieldNumber = 2;
  double scale_factor() const;
  void set_scale_factor(double value);

  // required double central_meridian = 3;
  bool has_central_meridian() const;
  void clear_central_meridian();
  static const int kCentralMeridianFieldNumber = 3;
  double central_meridian() const;
  void set_central_meridian(double value);

  // required double latitude_of_origin = 4;
  bool has_latitude_of_origin() const;
  void clear_latitude_of_origin();
  static const int kLatitudeOfOriginFieldNumber = 4;
  double latitude_of_origin() const;
  void set_latitude_of_origin(double value);

  // required double false_easting = 5;
  bool has_false_easting() const;
  void clear_false_easting();
  static const int kFalseEastingFieldNumber = 5;
  double false_easting() const;
  void set_false_easting(double value);

  // required double false_northing = 6;
  bool has_false_northing() const;
  void clear_false_northing();
  static const int kFalseNorthingFieldNumber = 6;
  double false_northing() const;
  void set_false_northing(double value);

  // required double height = 7;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 7;
  double height() const;
  void set_height(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.ProjectionParam)
 private:
  void set_has_projection_name();
  void clear_has_projection_name();
  void set_has_scale_factor();
  void clear_has_scale_factor();
  void set_has_central_meridian();
  void clear_has_central_meridian();
  void set_has_latitude_of_origin();
  void clear_has_latitude_of_origin();
  void set_has_false_easting();
  void clear_has_false_easting();
  void set_has_false_northing();
  void clear_has_false_northing();
  void set_has_height();
  void clear_has_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr projection_name_;
  double scale_factor_;
  double central_meridian_;
  double latitude_of_origin_;
  double false_easting_;
  double false_northing_;
  double height_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsProjectionParamImpl();
};
// -------------------------------------------------------------------

class EllipsoidParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.EllipsoidParam) */ {
 public:
  EllipsoidParam();
  virtual ~EllipsoidParam();

  EllipsoidParam(const EllipsoidParam& from);

  inline EllipsoidParam& operator=(const EllipsoidParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EllipsoidParam(EllipsoidParam&& from) noexcept
    : EllipsoidParam() {
    *this = ::std::move(from);
  }

  inline EllipsoidParam& operator=(EllipsoidParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EllipsoidParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EllipsoidParam* internal_default_instance() {
    return reinterpret_cast<const EllipsoidParam*>(
               &_EllipsoidParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(EllipsoidParam* other);
  friend void swap(EllipsoidParam& a, EllipsoidParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EllipsoidParam* New() const PROTOBUF_FINAL { return New(NULL); }

  EllipsoidParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EllipsoidParam& from);
  void MergeFrom(const EllipsoidParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EllipsoidParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ellipsoid_name = 1;
  bool has_ellipsoid_name() const;
  void clear_ellipsoid_name();
  static const int kEllipsoidNameFieldNumber = 1;
  const ::std::string& ellipsoid_name() const;
  void set_ellipsoid_name(const ::std::string& value);
  #if LANG_CXX11
  void set_ellipsoid_name(::std::string&& value);
  #endif
  void set_ellipsoid_name(const char* value);
  void set_ellipsoid_name(const char* value, size_t size);
  ::std::string* mutable_ellipsoid_name();
  ::std::string* release_ellipsoid_name();
  void set_allocated_ellipsoid_name(::std::string* ellipsoid_name);

  // required double macro_axis = 2;
  bool has_macro_axis() const;
  void clear_macro_axis();
  static const int kMacroAxisFieldNumber = 2;
  double macro_axis() const;
  void set_macro_axis(double value);

  // required double minor_axis = 3;
  bool has_minor_axis() const;
  void clear_minor_axis();
  static const int kMinorAxisFieldNumber = 3;
  double minor_axis() const;
  void set_minor_axis(double value);

  // required double flattening = 4;
  bool has_flattening() const;
  void clear_flattening();
  static const int kFlatteningFieldNumber = 4;
  double flattening() const;
  void set_flattening(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.EllipsoidParam)
 private:
  void set_has_ellipsoid_name();
  void clear_has_ellipsoid_name();
  void set_has_macro_axis();
  void clear_has_macro_axis();
  void set_has_minor_axis();
  void clear_has_minor_axis();
  void set_has_flattening();
  void clear_has_flattening();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ellipsoid_name_;
  double macro_axis_;
  double minor_axis_;
  double flattening_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsEllipsoidParamImpl();
};
// -------------------------------------------------------------------

class CoordinateCalibrationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CoordinateCalibrationReq) */ {
 public:
  CoordinateCalibrationReq();
  virtual ~CoordinateCalibrationReq();

  CoordinateCalibrationReq(const CoordinateCalibrationReq& from);

  inline CoordinateCalibrationReq& operator=(const CoordinateCalibrationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoordinateCalibrationReq(CoordinateCalibrationReq&& from) noexcept
    : CoordinateCalibrationReq() {
    *this = ::std::move(from);
  }

  inline CoordinateCalibrationReq& operator=(CoordinateCalibrationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoordinateCalibrationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoordinateCalibrationReq* internal_default_instance() {
    return reinterpret_cast<const CoordinateCalibrationReq*>(
               &_CoordinateCalibrationReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(CoordinateCalibrationReq* other);
  friend void swap(CoordinateCalibrationReq& a, CoordinateCalibrationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoordinateCalibrationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CoordinateCalibrationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoordinateCalibrationReq& from);
  void MergeFrom(const CoordinateCalibrationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoordinateCalibrationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .middle_layer_pb.PointLLH pt = 2;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 2;
  const ::middle_layer_pb::PointLLH& pt() const;
  ::middle_layer_pb::PointLLH* release_pt();
  ::middle_layer_pb::PointLLH* mutable_pt();
  void set_allocated_pt(::middle_layer_pb::PointLLH* pt);

  // required .middle_layer_pb.FourParam four_param = 3;
  bool has_four_param() const;
  void clear_four_param();
  static const int kFourParamFieldNumber = 3;
  const ::middle_layer_pb::FourParam& four_param() const;
  ::middle_layer_pb::FourParam* release_four_param();
  ::middle_layer_pb::FourParam* mutable_four_param();
  void set_allocated_four_param(::middle_layer_pb::FourParam* four_param);

  // required .middle_layer_pb.ProjectionParam projection_param = 5;
  bool has_projection_param() const;
  void clear_projection_param();
  static const int kProjectionParamFieldNumber = 5;
  const ::middle_layer_pb::ProjectionParam& projection_param() const;
  ::middle_layer_pb::ProjectionParam* release_projection_param();
  ::middle_layer_pb::ProjectionParam* mutable_projection_param();
  void set_allocated_projection_param(::middle_layer_pb::ProjectionParam* projection_param);

  // required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
  bool has_ellipsoid_param() const;
  void clear_ellipsoid_param();
  static const int kEllipsoidParamFieldNumber = 6;
  const ::middle_layer_pb::EllipsoidParam& ellipsoid_param() const;
  ::middle_layer_pb::EllipsoidParam* release_ellipsoid_param();
  ::middle_layer_pb::EllipsoidParam* mutable_ellipsoid_param();
  void set_allocated_ellipsoid_param(::middle_layer_pb::EllipsoidParam* ellipsoid_param);

  // required double elevation_fitting = 4;
  bool has_elevation_fitting() const;
  void clear_elevation_fitting();
  static const int kElevationFittingFieldNumber = 4;
  double elevation_fitting() const;
  void set_elevation_fitting(double value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CoordinateCalibrationReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_pt();
  void clear_has_pt();
  void set_has_four_param();
  void clear_has_four_param();
  void set_has_elevation_fitting();
  void clear_has_elevation_fitting();
  void set_has_projection_param();
  void clear_has_projection_param();
  void set_has_ellipsoid_param();
  void clear_has_ellipsoid_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::middle_layer_pb::PointLLH* pt_;
  ::middle_layer_pb::FourParam* four_param_;
  ::middle_layer_pb::ProjectionParam* projection_param_;
  ::middle_layer_pb::EllipsoidParam* ellipsoid_param_;
  double elevation_fitting_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCoordinateCalibrationReqImpl();
};
// -------------------------------------------------------------------

class CoordinateCalibrationRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.CoordinateCalibrationRes) */ {
 public:
  CoordinateCalibrationRes();
  virtual ~CoordinateCalibrationRes();

  CoordinateCalibrationRes(const CoordinateCalibrationRes& from);

  inline CoordinateCalibrationRes& operator=(const CoordinateCalibrationRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoordinateCalibrationRes(CoordinateCalibrationRes&& from) noexcept
    : CoordinateCalibrationRes() {
    *this = ::std::move(from);
  }

  inline CoordinateCalibrationRes& operator=(CoordinateCalibrationRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoordinateCalibrationRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoordinateCalibrationRes* internal_default_instance() {
    return reinterpret_cast<const CoordinateCalibrationRes*>(
               &_CoordinateCalibrationRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(CoordinateCalibrationRes* other);
  friend void swap(CoordinateCalibrationRes& a, CoordinateCalibrationRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoordinateCalibrationRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CoordinateCalibrationRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoordinateCalibrationRes& from);
  void MergeFrom(const CoordinateCalibrationRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoordinateCalibrationRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.CoordinateCalibrationRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsCoordinateCalibrationResImpl();
};
// -------------------------------------------------------------------

class WriteWordReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.WriteWordReq) */ {
 public:
  WriteWordReq();
  virtual ~WriteWordReq();

  WriteWordReq(const WriteWordReq& from);

  inline WriteWordReq& operator=(const WriteWordReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteWordReq(WriteWordReq&& from) noexcept
    : WriteWordReq() {
    *this = ::std::move(from);
  }

  inline WriteWordReq& operator=(WriteWordReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteWordReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteWordReq* internal_default_instance() {
    return reinterpret_cast<const WriteWordReq*>(
               &_WriteWordReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(WriteWordReq* other);
  friend void swap(WriteWordReq& a, WriteWordReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteWordReq* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteWordReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteWordReq& from);
  void MergeFrom(const WriteWordReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteWordReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string word = 2;
  bool has_word() const;
  void clear_word();
  static const int kWordFieldNumber = 2;
  const ::std::string& word() const;
  void set_word(const ::std::string& value);
  #if LANG_CXX11
  void set_word(::std::string&& value);
  #endif
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  ::std::string* mutable_word();
  ::std::string* release_word();
  void set_allocated_word(::std::string* word);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.WriteWordReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_word();
  void clear_has_word();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr word_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsWriteWordReqImpl();
};
// -------------------------------------------------------------------

class WriteWordRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:middle_layer_pb.WriteWordRes) */ {
 public:
  WriteWordRes();
  virtual ~WriteWordRes();

  WriteWordRes(const WriteWordRes& from);

  inline WriteWordRes& operator=(const WriteWordRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteWordRes(WriteWordRes&& from) noexcept
    : WriteWordRes() {
    *this = ::std::move(from);
  }

  inline WriteWordRes& operator=(WriteWordRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteWordRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteWordRes* internal_default_instance() {
    return reinterpret_cast<const WriteWordRes*>(
               &_WriteWordRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(WriteWordRes* other);
  friend void swap(WriteWordRes& a, WriteWordRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteWordRes* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteWordRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteWordRes& from);
  void MergeFrom(const WriteWordRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteWordRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .middle_layer_pb.ErrorCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::middle_layer_pb::ErrorCode code() const;
  void set_code(::middle_layer_pb::ErrorCode value);

  // @@protoc_insertion_point(class_scope:middle_layer_pb.WriteWordRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int code_;
  friend struct ::protobuf_middle_5flayer_2eproto::TableStruct;
  friend void ::protobuf_middle_5flayer_2eproto::InitDefaultsWriteWordResImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Query

// required int64 id = 1;
inline bool Query::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Query::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Query::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Query::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Query::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Query.id)
  return id_;
}
inline void Query::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Query.id)
}

// required string questioner = 2;
inline bool Query::has_questioner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Query::set_has_questioner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Query::clear_has_questioner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Query::clear_questioner() {
  questioner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_questioner();
}
inline const ::std::string& Query::questioner() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Query.questioner)
  return questioner_.GetNoArena();
}
inline void Query::set_questioner(const ::std::string& value) {
  set_has_questioner();
  questioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.Query.questioner)
}
#if LANG_CXX11
inline void Query::set_questioner(::std::string&& value) {
  set_has_questioner();
  questioner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.Query.questioner)
}
#endif
inline void Query::set_questioner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_questioner();
  questioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.Query.questioner)
}
inline void Query::set_questioner(const char* value, size_t size) {
  set_has_questioner();
  questioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.Query.questioner)
}
inline ::std::string* Query::mutable_questioner() {
  set_has_questioner();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.Query.questioner)
  return questioner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Query::release_questioner() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.Query.questioner)
  clear_has_questioner();
  return questioner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Query::set_allocated_questioner(::std::string* questioner) {
  if (questioner != NULL) {
    set_has_questioner();
  } else {
    clear_has_questioner();
  }
  questioner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), questioner);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.Query.questioner)
}

// repeated string question = 3;
inline int Query::question_size() const {
  return question_.size();
}
inline void Query::clear_question() {
  question_.Clear();
}
inline const ::std::string& Query::question(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Query.question)
  return question_.Get(index);
}
inline ::std::string* Query::mutable_question(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.Query.question)
  return question_.Mutable(index);
}
inline void Query::set_question(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:middle_layer_pb.Query.question)
  question_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Query::set_question(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:middle_layer_pb.Query.question)
  question_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Query::set_question(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  question_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.Query.question)
}
inline void Query::set_question(int index, const char* value, size_t size) {
  question_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.Query.question)
}
inline ::std::string* Query::add_question() {
  // @@protoc_insertion_point(field_add_mutable:middle_layer_pb.Query.question)
  return question_.Add();
}
inline void Query::add_question(const ::std::string& value) {
  question_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:middle_layer_pb.Query.question)
}
#if LANG_CXX11
inline void Query::add_question(::std::string&& value) {
  question_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:middle_layer_pb.Query.question)
}
#endif
inline void Query::add_question(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  question_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:middle_layer_pb.Query.question)
}
inline void Query::add_question(const char* value, size_t size) {
  question_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:middle_layer_pb.Query.question)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Query::question() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.Query.question)
  return question_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Query::mutable_question() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.Query.question)
  return &question_;
}

// -------------------------------------------------------------------

// Answer

// required int64 id = 1;
inline bool Answer::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Answer::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Answer::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Answer::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Answer::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Answer.id)
  return id_;
}
inline void Answer::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Answer.id)
}

// required string questioner = 2;
inline bool Answer::has_questioner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Answer::set_has_questioner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Answer::clear_has_questioner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Answer::clear_questioner() {
  questioner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_questioner();
}
inline const ::std::string& Answer::questioner() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Answer.questioner)
  return questioner_.GetNoArena();
}
inline void Answer::set_questioner(const ::std::string& value) {
  set_has_questioner();
  questioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.Answer.questioner)
}
#if LANG_CXX11
inline void Answer::set_questioner(::std::string&& value) {
  set_has_questioner();
  questioner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.Answer.questioner)
}
#endif
inline void Answer::set_questioner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_questioner();
  questioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.Answer.questioner)
}
inline void Answer::set_questioner(const char* value, size_t size) {
  set_has_questioner();
  questioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.Answer.questioner)
}
inline ::std::string* Answer::mutable_questioner() {
  set_has_questioner();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.Answer.questioner)
  return questioner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Answer::release_questioner() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.Answer.questioner)
  clear_has_questioner();
  return questioner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Answer::set_allocated_questioner(::std::string* questioner) {
  if (questioner != NULL) {
    set_has_questioner();
  } else {
    clear_has_questioner();
  }
  questioner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), questioner);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.Answer.questioner)
}

// required string answerer = 3;
inline bool Answer::has_answerer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Answer::set_has_answerer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Answer::clear_has_answerer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Answer::clear_answerer() {
  answerer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_answerer();
}
inline const ::std::string& Answer::answerer() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Answer.answerer)
  return answerer_.GetNoArena();
}
inline void Answer::set_answerer(const ::std::string& value) {
  set_has_answerer();
  answerer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.Answer.answerer)
}
#if LANG_CXX11
inline void Answer::set_answerer(::std::string&& value) {
  set_has_answerer();
  answerer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.Answer.answerer)
}
#endif
inline void Answer::set_answerer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_answerer();
  answerer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.Answer.answerer)
}
inline void Answer::set_answerer(const char* value, size_t size) {
  set_has_answerer();
  answerer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.Answer.answerer)
}
inline ::std::string* Answer::mutable_answerer() {
  set_has_answerer();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.Answer.answerer)
  return answerer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Answer::release_answerer() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.Answer.answerer)
  clear_has_answerer();
  return answerer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Answer::set_allocated_answerer(::std::string* answerer) {
  if (answerer != NULL) {
    set_has_answerer();
  } else {
    clear_has_answerer();
  }
  answerer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), answerer);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.Answer.answerer)
}

// repeated string solution = 4;
inline int Answer::solution_size() const {
  return solution_.size();
}
inline void Answer::clear_solution() {
  solution_.Clear();
}
inline const ::std::string& Answer::solution(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Answer.solution)
  return solution_.Get(index);
}
inline ::std::string* Answer::mutable_solution(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.Answer.solution)
  return solution_.Mutable(index);
}
inline void Answer::set_solution(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:middle_layer_pb.Answer.solution)
  solution_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Answer::set_solution(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:middle_layer_pb.Answer.solution)
  solution_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Answer::set_solution(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solution_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.Answer.solution)
}
inline void Answer::set_solution(int index, const char* value, size_t size) {
  solution_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.Answer.solution)
}
inline ::std::string* Answer::add_solution() {
  // @@protoc_insertion_point(field_add_mutable:middle_layer_pb.Answer.solution)
  return solution_.Add();
}
inline void Answer::add_solution(const ::std::string& value) {
  solution_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:middle_layer_pb.Answer.solution)
}
#if LANG_CXX11
inline void Answer::add_solution(::std::string&& value) {
  solution_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:middle_layer_pb.Answer.solution)
}
#endif
inline void Answer::add_solution(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solution_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:middle_layer_pb.Answer.solution)
}
inline void Answer::add_solution(const char* value, size_t size) {
  solution_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:middle_layer_pb.Answer.solution)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Answer::solution() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.Answer.solution)
  return solution_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Answer::mutable_solution() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.Answer.solution)
  return &solution_;
}

// -------------------------------------------------------------------

// Empty

// optional int32 id = 1;
inline bool Empty::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Empty::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Empty::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Empty::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Empty::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Empty.id)
  return id_;
}
inline void Empty::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Empty.id)
}

// -------------------------------------------------------------------

// PointENU

// optional double x = 1 [default = nan];
inline bool PointENU::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointENU::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointENU::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointENU::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double PointENU::x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointENU.x)
  return x_;
}
inline void PointENU::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointENU.x)
}

// optional double y = 2 [default = nan];
inline bool PointENU::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointENU::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointENU::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointENU::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double PointENU::y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointENU.y)
  return y_;
}
inline void PointENU::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointENU.y)
}

// optional double z = 3 [default = 0];
inline bool PointENU::has_z() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointENU::set_has_z() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointENU::clear_has_z() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointENU::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double PointENU::z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointENU.z)
  return z_;
}
inline void PointENU::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointENU.z)
}

// -------------------------------------------------------------------

// PointLLH

// optional double lon = 1 [default = nan];
inline bool PointLLH::has_lon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointLLH::set_has_lon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointLLH::clear_has_lon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointLLH::clear_lon() {
  lon_ = ::google::protobuf::internal::NaN();
  clear_has_lon();
}
inline double PointLLH::lon() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointLLH.lon)
  return lon_;
}
inline void PointLLH::set_lon(double value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointLLH.lon)
}

// optional double lat = 2 [default = nan];
inline bool PointLLH::has_lat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PointLLH::set_has_lat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PointLLH::clear_has_lat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PointLLH::clear_lat() {
  lat_ = ::google::protobuf::internal::NaN();
  clear_has_lat();
}
inline double PointLLH::lat() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointLLH.lat)
  return lat_;
}
inline void PointLLH::set_lat(double value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointLLH.lat)
}

// optional double height = 3 [default = 0];
inline bool PointLLH::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointLLH::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointLLH::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointLLH::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double PointLLH::height() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointLLH.height)
  return height_;
}
inline void PointLLH::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointLLH.height)
}

// optional double heading = 4 [default = 0];
inline bool PointLLH::has_heading() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointLLH::set_has_heading() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointLLH::clear_has_heading() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointLLH::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
inline double PointLLH::heading() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PointLLH.heading)
  return heading_;
}
inline void PointLLH::set_heading(double value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PointLLH.heading)
}

// -------------------------------------------------------------------

// Point2D

// optional double x = 1 [default = nan];
inline bool Point2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point2D::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Point2D.x)
  return x_;
}
inline void Point2D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Point2D.x)
}

// optional double y = 2 [default = nan];
inline bool Point2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point2D::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Point2D.y)
  return y_;
}
inline void Point2D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Point2D.y)
}

// -------------------------------------------------------------------

// Point3D

// optional double x = 1 [default = nan];
inline bool Point3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point3D::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Point3D.x)
  return x_;
}
inline void Point3D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Point3D.x)
}

// optional double y = 2 [default = nan];
inline bool Point3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point3D::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Point3D.y)
  return y_;
}
inline void Point3D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Point3D.y)
}

// optional double z = 3 [default = nan];
inline bool Point3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Point3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Point3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Point3D::clear_z() {
  z_ = ::google::protobuf::internal::NaN();
  clear_has_z();
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Point3D.z)
  return z_;
}
inline void Point3D::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Point3D.z)
}

// -------------------------------------------------------------------

// Quaternion

// optional double qx = 1 [default = nan];
inline bool Quaternion::has_qx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quaternion::set_has_qx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quaternion::clear_has_qx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quaternion::clear_qx() {
  qx_ = ::google::protobuf::internal::NaN();
  clear_has_qx();
}
inline double Quaternion::qx() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Quaternion.qx)
  return qx_;
}
inline void Quaternion::set_qx(double value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Quaternion.qx)
}

// optional double qy = 2 [default = nan];
inline bool Quaternion::has_qy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quaternion::set_has_qy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quaternion::clear_has_qy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quaternion::clear_qy() {
  qy_ = ::google::protobuf::internal::NaN();
  clear_has_qy();
}
inline double Quaternion::qy() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Quaternion.qy)
  return qy_;
}
inline void Quaternion::set_qy(double value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Quaternion.qy)
}

// optional double qz = 3 [default = nan];
inline bool Quaternion::has_qz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quaternion::set_has_qz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quaternion::clear_has_qz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quaternion::clear_qz() {
  qz_ = ::google::protobuf::internal::NaN();
  clear_has_qz();
}
inline double Quaternion::qz() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Quaternion.qz)
  return qz_;
}
inline void Quaternion::set_qz(double value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Quaternion.qz)
}

// optional double qw = 4 [default = nan];
inline bool Quaternion::has_qw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quaternion::set_has_qw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quaternion::clear_has_qw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quaternion::clear_qw() {
  qw_ = ::google::protobuf::internal::NaN();
  clear_has_qw();
}
inline double Quaternion::qw() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.Quaternion.qw)
  return qw_;
}
inline void Quaternion::set_qw(double value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.Quaternion.qw)
}

// -------------------------------------------------------------------

// ImuAccelMessage

// required float accel_x = 1;
inline bool ImuAccelMessage::has_accel_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImuAccelMessage::set_has_accel_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImuAccelMessage::clear_has_accel_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImuAccelMessage::clear_accel_x() {
  accel_x_ = 0;
  clear_has_accel_x();
}
inline float ImuAccelMessage::accel_x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuAccelMessage.accel_x)
  return accel_x_;
}
inline void ImuAccelMessage::set_accel_x(float value) {
  set_has_accel_x();
  accel_x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuAccelMessage.accel_x)
}

// required float accel_y = 2;
inline bool ImuAccelMessage::has_accel_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImuAccelMessage::set_has_accel_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImuAccelMessage::clear_has_accel_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImuAccelMessage::clear_accel_y() {
  accel_y_ = 0;
  clear_has_accel_y();
}
inline float ImuAccelMessage::accel_y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuAccelMessage.accel_y)
  return accel_y_;
}
inline void ImuAccelMessage::set_accel_y(float value) {
  set_has_accel_y();
  accel_y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuAccelMessage.accel_y)
}

// required float accel_z = 3;
inline bool ImuAccelMessage::has_accel_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImuAccelMessage::set_has_accel_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImuAccelMessage::clear_has_accel_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImuAccelMessage::clear_accel_z() {
  accel_z_ = 0;
  clear_has_accel_z();
}
inline float ImuAccelMessage::accel_z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuAccelMessage.accel_z)
  return accel_z_;
}
inline void ImuAccelMessage::set_accel_z(float value) {
  set_has_accel_z();
  accel_z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuAccelMessage.accel_z)
}

// -------------------------------------------------------------------

// ImuGyroMessage

// required float gyro_x = 1;
inline bool ImuGyroMessage::has_gyro_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImuGyroMessage::set_has_gyro_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImuGyroMessage::clear_has_gyro_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImuGyroMessage::clear_gyro_x() {
  gyro_x_ = 0;
  clear_has_gyro_x();
}
inline float ImuGyroMessage::gyro_x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuGyroMessage.gyro_x)
  return gyro_x_;
}
inline void ImuGyroMessage::set_gyro_x(float value) {
  set_has_gyro_x();
  gyro_x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuGyroMessage.gyro_x)
}

// required float gyro_y = 2;
inline bool ImuGyroMessage::has_gyro_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImuGyroMessage::set_has_gyro_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImuGyroMessage::clear_has_gyro_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImuGyroMessage::clear_gyro_y() {
  gyro_y_ = 0;
  clear_has_gyro_y();
}
inline float ImuGyroMessage::gyro_y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuGyroMessage.gyro_y)
  return gyro_y_;
}
inline void ImuGyroMessage::set_gyro_y(float value) {
  set_has_gyro_y();
  gyro_y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuGyroMessage.gyro_y)
}

// required float gyro_z = 3;
inline bool ImuGyroMessage::has_gyro_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImuGyroMessage::set_has_gyro_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImuGyroMessage::clear_has_gyro_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImuGyroMessage::clear_gyro_z() {
  gyro_z_ = 0;
  clear_has_gyro_z();
}
inline float ImuGyroMessage::gyro_z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuGyroMessage.gyro_z)
  return gyro_z_;
}
inline void ImuGyroMessage::set_gyro_z(float value) {
  set_has_gyro_z();
  gyro_z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuGyroMessage.gyro_z)
}

// -------------------------------------------------------------------

// ImuEulerMessage

// required float yaw = 1;
inline bool ImuEulerMessage::has_yaw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImuEulerMessage::set_has_yaw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImuEulerMessage::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImuEulerMessage::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline float ImuEulerMessage::yaw() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuEulerMessage.yaw)
  return yaw_;
}
inline void ImuEulerMessage::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuEulerMessage.yaw)
}

// required float pitch = 2;
inline bool ImuEulerMessage::has_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImuEulerMessage::set_has_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImuEulerMessage::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImuEulerMessage::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline float ImuEulerMessage::pitch() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuEulerMessage.pitch)
  return pitch_;
}
inline void ImuEulerMessage::set_pitch(float value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuEulerMessage.pitch)
}

// required float roll = 3;
inline bool ImuEulerMessage::has_roll() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImuEulerMessage::set_has_roll() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImuEulerMessage::clear_has_roll() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImuEulerMessage::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
inline float ImuEulerMessage::roll() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ImuEulerMessage.roll)
  return roll_;
}
inline void ImuEulerMessage::set_roll(float value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ImuEulerMessage.roll)
}

// -------------------------------------------------------------------

// RobotCoreStateReq

// required string id = 1;
inline bool RobotCoreStateReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreStateReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreStateReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreStateReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotCoreStateReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreStateReq.id)
  return id_.GetNoArena();
}
inline void RobotCoreStateReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreStateReq.id)
}
#if LANG_CXX11
inline void RobotCoreStateReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotCoreStateReq.id)
}
#endif
inline void RobotCoreStateReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotCoreStateReq.id)
}
inline void RobotCoreStateReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotCoreStateReq.id)
}
inline ::std::string* RobotCoreStateReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreStateReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotCoreStateReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreStateReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotCoreStateReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreStateReq.id)
}

// -------------------------------------------------------------------

// RobotCoreState_SystemStateMessage

// optional .middle_layer_pb.RobotCoreState.AgxVehicleState vehicle_state = 1;
inline bool RobotCoreState_SystemStateMessage::has_vehicle_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreState_SystemStateMessage::set_has_vehicle_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreState_SystemStateMessage::clear_has_vehicle_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreState_SystemStateMessage::clear_vehicle_state() {
  vehicle_state_ = 0;
  clear_has_vehicle_state();
}
inline ::middle_layer_pb::RobotCoreState_AgxVehicleState RobotCoreState_SystemStateMessage::vehicle_state() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.SystemStateMessage.vehicle_state)
  return static_cast< ::middle_layer_pb::RobotCoreState_AgxVehicleState >(vehicle_state_);
}
inline void RobotCoreState_SystemStateMessage::set_vehicle_state(::middle_layer_pb::RobotCoreState_AgxVehicleState value) {
  assert(::middle_layer_pb::RobotCoreState_AgxVehicleState_IsValid(value));
  set_has_vehicle_state();
  vehicle_state_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.SystemStateMessage.vehicle_state)
}

// optional .middle_layer_pb.RobotCoreState.AgxControlMode control_mode = 2;
inline bool RobotCoreState_SystemStateMessage::has_control_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotCoreState_SystemStateMessage::set_has_control_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotCoreState_SystemStateMessage::clear_has_control_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotCoreState_SystemStateMessage::clear_control_mode() {
  control_mode_ = 0;
  clear_has_control_mode();
}
inline ::middle_layer_pb::RobotCoreState_AgxControlMode RobotCoreState_SystemStateMessage::control_mode() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.SystemStateMessage.control_mode)
  return static_cast< ::middle_layer_pb::RobotCoreState_AgxControlMode >(control_mode_);
}
inline void RobotCoreState_SystemStateMessage::set_control_mode(::middle_layer_pb::RobotCoreState_AgxControlMode value) {
  assert(::middle_layer_pb::RobotCoreState_AgxControlMode_IsValid(value));
  set_has_control_mode();
  control_mode_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.SystemStateMessage.control_mode)
}

// optional float battery_voltage = 3;
inline bool RobotCoreState_SystemStateMessage::has_battery_voltage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotCoreState_SystemStateMessage::set_has_battery_voltage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotCoreState_SystemStateMessage::clear_has_battery_voltage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotCoreState_SystemStateMessage::clear_battery_voltage() {
  battery_voltage_ = 0;
  clear_has_battery_voltage();
}
inline float RobotCoreState_SystemStateMessage::battery_voltage() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.SystemStateMessage.battery_voltage)
  return battery_voltage_;
}
inline void RobotCoreState_SystemStateMessage::set_battery_voltage(float value) {
  set_has_battery_voltage();
  battery_voltage_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.SystemStateMessage.battery_voltage)
}

// optional int32 error_code = 4;
inline bool RobotCoreState_SystemStateMessage::has_error_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotCoreState_SystemStateMessage::set_has_error_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotCoreState_SystemStateMessage::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotCoreState_SystemStateMessage::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 RobotCoreState_SystemStateMessage::error_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.SystemStateMessage.error_code)
  return error_code_;
}
inline void RobotCoreState_SystemStateMessage::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.SystemStateMessage.error_code)
}

// -------------------------------------------------------------------

// RobotCoreState_MotionStateMessage

// optional float linear_velocity = 1;
inline bool RobotCoreState_MotionStateMessage::has_linear_velocity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreState_MotionStateMessage::set_has_linear_velocity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreState_MotionStateMessage::clear_has_linear_velocity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreState_MotionStateMessage::clear_linear_velocity() {
  linear_velocity_ = 0;
  clear_has_linear_velocity();
}
inline float RobotCoreState_MotionStateMessage::linear_velocity() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.MotionStateMessage.linear_velocity)
  return linear_velocity_;
}
inline void RobotCoreState_MotionStateMessage::set_linear_velocity(float value) {
  set_has_linear_velocity();
  linear_velocity_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.MotionStateMessage.linear_velocity)
}

// optional float angular_velocity = 2;
inline bool RobotCoreState_MotionStateMessage::has_angular_velocity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotCoreState_MotionStateMessage::set_has_angular_velocity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotCoreState_MotionStateMessage::clear_has_angular_velocity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotCoreState_MotionStateMessage::clear_angular_velocity() {
  angular_velocity_ = 0;
  clear_has_angular_velocity();
}
inline float RobotCoreState_MotionStateMessage::angular_velocity() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.MotionStateMessage.angular_velocity)
  return angular_velocity_;
}
inline void RobotCoreState_MotionStateMessage::set_angular_velocity(float value) {
  set_has_angular_velocity();
  angular_velocity_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.MotionStateMessage.angular_velocity)
}

// optional float lateral_velocity = 3;
inline bool RobotCoreState_MotionStateMessage::has_lateral_velocity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotCoreState_MotionStateMessage::set_has_lateral_velocity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotCoreState_MotionStateMessage::clear_has_lateral_velocity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotCoreState_MotionStateMessage::clear_lateral_velocity() {
  lateral_velocity_ = 0;
  clear_has_lateral_velocity();
}
inline float RobotCoreState_MotionStateMessage::lateral_velocity() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.MotionStateMessage.lateral_velocity)
  return lateral_velocity_;
}
inline void RobotCoreState_MotionStateMessage::set_lateral_velocity(float value) {
  set_has_lateral_velocity();
  lateral_velocity_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.MotionStateMessage.lateral_velocity)
}

// optional float steering_angle = 4;
inline bool RobotCoreState_MotionStateMessage::has_steering_angle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotCoreState_MotionStateMessage::set_has_steering_angle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotCoreState_MotionStateMessage::clear_has_steering_angle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotCoreState_MotionStateMessage::clear_steering_angle() {
  steering_angle_ = 0;
  clear_has_steering_angle();
}
inline float RobotCoreState_MotionStateMessage::steering_angle() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.MotionStateMessage.steering_angle)
  return steering_angle_;
}
inline void RobotCoreState_MotionStateMessage::set_steering_angle(float value) {
  set_has_steering_angle();
  steering_angle_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.MotionStateMessage.steering_angle)
}

// -------------------------------------------------------------------

// RobotCoreState_RcStateMessage

// optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swa = 1;
inline bool RobotCoreState_RcStateMessage::has_swa() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_swa() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreState_RcStateMessage::clear_has_swa() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreState_RcStateMessage::clear_swa() {
  swa_ = 0;
  clear_has_swa();
}
inline ::middle_layer_pb::RobotCoreState_AgxRcSwitchState RobotCoreState_RcStateMessage::swa() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.swa)
  return static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(swa_);
}
inline void RobotCoreState_RcStateMessage::set_swa(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value) {
  assert(::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value));
  set_has_swa();
  swa_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.swa)
}

// optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swb = 2;
inline bool RobotCoreState_RcStateMessage::has_swb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_swb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotCoreState_RcStateMessage::clear_has_swb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotCoreState_RcStateMessage::clear_swb() {
  swb_ = 0;
  clear_has_swb();
}
inline ::middle_layer_pb::RobotCoreState_AgxRcSwitchState RobotCoreState_RcStateMessage::swb() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.swb)
  return static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(swb_);
}
inline void RobotCoreState_RcStateMessage::set_swb(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value) {
  assert(::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value));
  set_has_swb();
  swb_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.swb)
}

// optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swc = 3;
inline bool RobotCoreState_RcStateMessage::has_swc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_swc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotCoreState_RcStateMessage::clear_has_swc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotCoreState_RcStateMessage::clear_swc() {
  swc_ = 0;
  clear_has_swc();
}
inline ::middle_layer_pb::RobotCoreState_AgxRcSwitchState RobotCoreState_RcStateMessage::swc() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.swc)
  return static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(swc_);
}
inline void RobotCoreState_RcStateMessage::set_swc(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value) {
  assert(::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value));
  set_has_swc();
  swc_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.swc)
}

// optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swd = 4;
inline bool RobotCoreState_RcStateMessage::has_swd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_swd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotCoreState_RcStateMessage::clear_has_swd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotCoreState_RcStateMessage::clear_swd() {
  swd_ = 0;
  clear_has_swd();
}
inline ::middle_layer_pb::RobotCoreState_AgxRcSwitchState RobotCoreState_RcStateMessage::swd() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.swd)
  return static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(swd_);
}
inline void RobotCoreState_RcStateMessage::set_swd(::middle_layer_pb::RobotCoreState_AgxRcSwitchState value) {
  assert(::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value));
  set_has_swd();
  swd_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.swd)
}

// optional int32 stick_right_v = 5;
inline bool RobotCoreState_RcStateMessage::has_stick_right_v() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_stick_right_v() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RobotCoreState_RcStateMessage::clear_has_stick_right_v() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RobotCoreState_RcStateMessage::clear_stick_right_v() {
  stick_right_v_ = 0;
  clear_has_stick_right_v();
}
inline ::google::protobuf::int32 RobotCoreState_RcStateMessage::stick_right_v() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.stick_right_v)
  return stick_right_v_;
}
inline void RobotCoreState_RcStateMessage::set_stick_right_v(::google::protobuf::int32 value) {
  set_has_stick_right_v();
  stick_right_v_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.stick_right_v)
}

// optional int32 stick_right_h = 6;
inline bool RobotCoreState_RcStateMessage::has_stick_right_h() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_stick_right_h() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RobotCoreState_RcStateMessage::clear_has_stick_right_h() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RobotCoreState_RcStateMessage::clear_stick_right_h() {
  stick_right_h_ = 0;
  clear_has_stick_right_h();
}
inline ::google::protobuf::int32 RobotCoreState_RcStateMessage::stick_right_h() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.stick_right_h)
  return stick_right_h_;
}
inline void RobotCoreState_RcStateMessage::set_stick_right_h(::google::protobuf::int32 value) {
  set_has_stick_right_h();
  stick_right_h_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.stick_right_h)
}

// optional int32 stick_left_v = 7;
inline bool RobotCoreState_RcStateMessage::has_stick_left_v() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_stick_left_v() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RobotCoreState_RcStateMessage::clear_has_stick_left_v() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RobotCoreState_RcStateMessage::clear_stick_left_v() {
  stick_left_v_ = 0;
  clear_has_stick_left_v();
}
inline ::google::protobuf::int32 RobotCoreState_RcStateMessage::stick_left_v() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.stick_left_v)
  return stick_left_v_;
}
inline void RobotCoreState_RcStateMessage::set_stick_left_v(::google::protobuf::int32 value) {
  set_has_stick_left_v();
  stick_left_v_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.stick_left_v)
}

// optional int32 stick_left_h = 8;
inline bool RobotCoreState_RcStateMessage::has_stick_left_h() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_stick_left_h() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RobotCoreState_RcStateMessage::clear_has_stick_left_h() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RobotCoreState_RcStateMessage::clear_stick_left_h() {
  stick_left_h_ = 0;
  clear_has_stick_left_h();
}
inline ::google::protobuf::int32 RobotCoreState_RcStateMessage::stick_left_h() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.stick_left_h)
  return stick_left_h_;
}
inline void RobotCoreState_RcStateMessage::set_stick_left_h(::google::protobuf::int32 value) {
  set_has_stick_left_h();
  stick_left_h_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.stick_left_h)
}

// optional int32 var_a = 9;
inline bool RobotCoreState_RcStateMessage::has_var_a() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RobotCoreState_RcStateMessage::set_has_var_a() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RobotCoreState_RcStateMessage::clear_has_var_a() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RobotCoreState_RcStateMessage::clear_var_a() {
  var_a_ = 0;
  clear_has_var_a();
}
inline ::google::protobuf::int32 RobotCoreState_RcStateMessage::var_a() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.RcStateMessage.var_a)
  return var_a_;
}
inline void RobotCoreState_RcStateMessage::set_var_a(::google::protobuf::int32 value) {
  set_has_var_a();
  var_a_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.RcStateMessage.var_a)
}

// -------------------------------------------------------------------

// RobotCoreState_BmsBasicMessage

// optional uint32 battery_soc = 1;
inline bool RobotCoreState_BmsBasicMessage::has_battery_soc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreState_BmsBasicMessage::set_has_battery_soc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreState_BmsBasicMessage::clear_has_battery_soc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreState_BmsBasicMessage::clear_battery_soc() {
  battery_soc_ = 0u;
  clear_has_battery_soc();
}
inline ::google::protobuf::uint32 RobotCoreState_BmsBasicMessage::battery_soc() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.BmsBasicMessage.battery_soc)
  return battery_soc_;
}
inline void RobotCoreState_BmsBasicMessage::set_battery_soc(::google::protobuf::uint32 value) {
  set_has_battery_soc();
  battery_soc_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.BmsBasicMessage.battery_soc)
}

// optional uint32 battery_soh = 2;
inline bool RobotCoreState_BmsBasicMessage::has_battery_soh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotCoreState_BmsBasicMessage::set_has_battery_soh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotCoreState_BmsBasicMessage::clear_has_battery_soh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotCoreState_BmsBasicMessage::clear_battery_soh() {
  battery_soh_ = 0u;
  clear_has_battery_soh();
}
inline ::google::protobuf::uint32 RobotCoreState_BmsBasicMessage::battery_soh() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.BmsBasicMessage.battery_soh)
  return battery_soh_;
}
inline void RobotCoreState_BmsBasicMessage::set_battery_soh(::google::protobuf::uint32 value) {
  set_has_battery_soh();
  battery_soh_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.BmsBasicMessage.battery_soh)
}

// optional float voltage = 3;
inline bool RobotCoreState_BmsBasicMessage::has_voltage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotCoreState_BmsBasicMessage::set_has_voltage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotCoreState_BmsBasicMessage::clear_has_voltage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotCoreState_BmsBasicMessage::clear_voltage() {
  voltage_ = 0;
  clear_has_voltage();
}
inline float RobotCoreState_BmsBasicMessage::voltage() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.BmsBasicMessage.voltage)
  return voltage_;
}
inline void RobotCoreState_BmsBasicMessage::set_voltage(float value) {
  set_has_voltage();
  voltage_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.BmsBasicMessage.voltage)
}

// optional float current = 4;
inline bool RobotCoreState_BmsBasicMessage::has_current() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotCoreState_BmsBasicMessage::set_has_current() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotCoreState_BmsBasicMessage::clear_has_current() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotCoreState_BmsBasicMessage::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline float RobotCoreState_BmsBasicMessage::current() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.BmsBasicMessage.current)
  return current_;
}
inline void RobotCoreState_BmsBasicMessage::set_current(float value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.BmsBasicMessage.current)
}

// optional float temperature = 5;
inline bool RobotCoreState_BmsBasicMessage::has_temperature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotCoreState_BmsBasicMessage::set_has_temperature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RobotCoreState_BmsBasicMessage::clear_has_temperature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RobotCoreState_BmsBasicMessage::clear_temperature() {
  temperature_ = 0;
  clear_has_temperature();
}
inline float RobotCoreState_BmsBasicMessage::temperature() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.BmsBasicMessage.temperature)
  return temperature_;
}
inline void RobotCoreState_BmsBasicMessage::set_temperature(float value) {
  set_has_temperature();
  temperature_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.BmsBasicMessage.temperature)
}

// -------------------------------------------------------------------

// RobotCoreState_OdometryMessage

// optional float left_wheel = 1;
inline bool RobotCoreState_OdometryMessage::has_left_wheel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreState_OdometryMessage::set_has_left_wheel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreState_OdometryMessage::clear_has_left_wheel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreState_OdometryMessage::clear_left_wheel() {
  left_wheel_ = 0;
  clear_has_left_wheel();
}
inline float RobotCoreState_OdometryMessage::left_wheel() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.OdometryMessage.left_wheel)
  return left_wheel_;
}
inline void RobotCoreState_OdometryMessage::set_left_wheel(float value) {
  set_has_left_wheel();
  left_wheel_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.OdometryMessage.left_wheel)
}

// optional float right_wheel = 2;
inline bool RobotCoreState_OdometryMessage::has_right_wheel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotCoreState_OdometryMessage::set_has_right_wheel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotCoreState_OdometryMessage::clear_has_right_wheel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotCoreState_OdometryMessage::clear_right_wheel() {
  right_wheel_ = 0;
  clear_has_right_wheel();
}
inline float RobotCoreState_OdometryMessage::right_wheel() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.OdometryMessage.right_wheel)
  return right_wheel_;
}
inline void RobotCoreState_OdometryMessage::set_right_wheel(float value) {
  set_has_right_wheel();
  right_wheel_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.OdometryMessage.right_wheel)
}

// -------------------------------------------------------------------

// RobotCoreState

// required string id = 1;
inline bool RobotCoreState::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreState::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreState::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreState::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotCoreState::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.id)
  return id_.GetNoArena();
}
inline void RobotCoreState::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.id)
}
#if LANG_CXX11
inline void RobotCoreState::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotCoreState.id)
}
#endif
inline void RobotCoreState::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotCoreState.id)
}
inline void RobotCoreState::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotCoreState.id)
}
inline ::std::string* RobotCoreState::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreState.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotCoreState::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreState.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotCoreState::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreState.id)
}

// required int64 timestamp = 2;
inline bool RobotCoreState::has_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RobotCoreState::set_has_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RobotCoreState::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RobotCoreState::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 RobotCoreState::timestamp() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.timestamp)
  return timestamp_;
}
inline void RobotCoreState::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotCoreState.timestamp)
}

// optional .middle_layer_pb.RobotCoreState.SystemStateMessage system_state = 3;
inline bool RobotCoreState::has_system_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotCoreState::set_has_system_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotCoreState::clear_has_system_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotCoreState::clear_system_state() {
  if (system_state_ != NULL) system_state_->Clear();
  clear_has_system_state();
}
inline const ::middle_layer_pb::RobotCoreState_SystemStateMessage& RobotCoreState::system_state() const {
  const ::middle_layer_pb::RobotCoreState_SystemStateMessage* p = system_state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.system_state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState_SystemStateMessage*>(
      &::middle_layer_pb::_RobotCoreState_SystemStateMessage_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState_SystemStateMessage* RobotCoreState::release_system_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreState.system_state)
  clear_has_system_state();
  ::middle_layer_pb::RobotCoreState_SystemStateMessage* temp = system_state_;
  system_state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState_SystemStateMessage* RobotCoreState::mutable_system_state() {
  set_has_system_state();
  if (system_state_ == NULL) {
    system_state_ = new ::middle_layer_pb::RobotCoreState_SystemStateMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreState.system_state)
  return system_state_;
}
inline void RobotCoreState::set_allocated_system_state(::middle_layer_pb::RobotCoreState_SystemStateMessage* system_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete system_state_;
  }
  if (system_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_state, submessage_arena);
    }
    set_has_system_state();
  } else {
    clear_has_system_state();
  }
  system_state_ = system_state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreState.system_state)
}

// optional .middle_layer_pb.RobotCoreState.MotionStateMessage motion_state = 4;
inline bool RobotCoreState::has_motion_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotCoreState::set_has_motion_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotCoreState::clear_has_motion_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotCoreState::clear_motion_state() {
  if (motion_state_ != NULL) motion_state_->Clear();
  clear_has_motion_state();
}
inline const ::middle_layer_pb::RobotCoreState_MotionStateMessage& RobotCoreState::motion_state() const {
  const ::middle_layer_pb::RobotCoreState_MotionStateMessage* p = motion_state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.motion_state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState_MotionStateMessage*>(
      &::middle_layer_pb::_RobotCoreState_MotionStateMessage_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState_MotionStateMessage* RobotCoreState::release_motion_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreState.motion_state)
  clear_has_motion_state();
  ::middle_layer_pb::RobotCoreState_MotionStateMessage* temp = motion_state_;
  motion_state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState_MotionStateMessage* RobotCoreState::mutable_motion_state() {
  set_has_motion_state();
  if (motion_state_ == NULL) {
    motion_state_ = new ::middle_layer_pb::RobotCoreState_MotionStateMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreState.motion_state)
  return motion_state_;
}
inline void RobotCoreState::set_allocated_motion_state(::middle_layer_pb::RobotCoreState_MotionStateMessage* motion_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete motion_state_;
  }
  if (motion_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motion_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motion_state, submessage_arena);
    }
    set_has_motion_state();
  } else {
    clear_has_motion_state();
  }
  motion_state_ = motion_state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreState.motion_state)
}

// optional .middle_layer_pb.RobotCoreState.RcStateMessage rc_state = 5;
inline bool RobotCoreState::has_rc_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotCoreState::set_has_rc_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotCoreState::clear_has_rc_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotCoreState::clear_rc_state() {
  if (rc_state_ != NULL) rc_state_->Clear();
  clear_has_rc_state();
}
inline const ::middle_layer_pb::RobotCoreState_RcStateMessage& RobotCoreState::rc_state() const {
  const ::middle_layer_pb::RobotCoreState_RcStateMessage* p = rc_state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.rc_state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState_RcStateMessage*>(
      &::middle_layer_pb::_RobotCoreState_RcStateMessage_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState_RcStateMessage* RobotCoreState::release_rc_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreState.rc_state)
  clear_has_rc_state();
  ::middle_layer_pb::RobotCoreState_RcStateMessage* temp = rc_state_;
  rc_state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState_RcStateMessage* RobotCoreState::mutable_rc_state() {
  set_has_rc_state();
  if (rc_state_ == NULL) {
    rc_state_ = new ::middle_layer_pb::RobotCoreState_RcStateMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreState.rc_state)
  return rc_state_;
}
inline void RobotCoreState::set_allocated_rc_state(::middle_layer_pb::RobotCoreState_RcStateMessage* rc_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rc_state_;
  }
  if (rc_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rc_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rc_state, submessage_arena);
    }
    set_has_rc_state();
  } else {
    clear_has_rc_state();
  }
  rc_state_ = rc_state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreState.rc_state)
}

// optional .middle_layer_pb.RobotCoreState.BmsBasicMessage bms_state = 6;
inline bool RobotCoreState::has_bms_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotCoreState::set_has_bms_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RobotCoreState::clear_has_bms_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RobotCoreState::clear_bms_state() {
  if (bms_state_ != NULL) bms_state_->Clear();
  clear_has_bms_state();
}
inline const ::middle_layer_pb::RobotCoreState_BmsBasicMessage& RobotCoreState::bms_state() const {
  const ::middle_layer_pb::RobotCoreState_BmsBasicMessage* p = bms_state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.bms_state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState_BmsBasicMessage*>(
      &::middle_layer_pb::_RobotCoreState_BmsBasicMessage_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState_BmsBasicMessage* RobotCoreState::release_bms_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreState.bms_state)
  clear_has_bms_state();
  ::middle_layer_pb::RobotCoreState_BmsBasicMessage* temp = bms_state_;
  bms_state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState_BmsBasicMessage* RobotCoreState::mutable_bms_state() {
  set_has_bms_state();
  if (bms_state_ == NULL) {
    bms_state_ = new ::middle_layer_pb::RobotCoreState_BmsBasicMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreState.bms_state)
  return bms_state_;
}
inline void RobotCoreState::set_allocated_bms_state(::middle_layer_pb::RobotCoreState_BmsBasicMessage* bms_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bms_state_;
  }
  if (bms_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bms_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bms_state, submessage_arena);
    }
    set_has_bms_state();
  } else {
    clear_has_bms_state();
  }
  bms_state_ = bms_state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreState.bms_state)
}

// optional .middle_layer_pb.RobotCoreState.OdometryMessage odom_state = 7;
inline bool RobotCoreState::has_odom_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RobotCoreState::set_has_odom_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RobotCoreState::clear_has_odom_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RobotCoreState::clear_odom_state() {
  if (odom_state_ != NULL) odom_state_->Clear();
  clear_has_odom_state();
}
inline const ::middle_layer_pb::RobotCoreState_OdometryMessage& RobotCoreState::odom_state() const {
  const ::middle_layer_pb::RobotCoreState_OdometryMessage* p = odom_state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreState.odom_state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState_OdometryMessage*>(
      &::middle_layer_pb::_RobotCoreState_OdometryMessage_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState_OdometryMessage* RobotCoreState::release_odom_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreState.odom_state)
  clear_has_odom_state();
  ::middle_layer_pb::RobotCoreState_OdometryMessage* temp = odom_state_;
  odom_state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState_OdometryMessage* RobotCoreState::mutable_odom_state() {
  set_has_odom_state();
  if (odom_state_ == NULL) {
    odom_state_ = new ::middle_layer_pb::RobotCoreState_OdometryMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreState.odom_state)
  return odom_state_;
}
inline void RobotCoreState::set_allocated_odom_state(::middle_layer_pb::RobotCoreState_OdometryMessage* odom_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete odom_state_;
  }
  if (odom_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      odom_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, odom_state, submessage_arena);
    }
    set_has_odom_state();
  } else {
    clear_has_odom_state();
  }
  odom_state_ = odom_state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreState.odom_state)
}

// -------------------------------------------------------------------

// RobotCoreStateRes

// required .middle_layer_pb.RobotCoreState state = 1;
inline bool RobotCoreStateRes::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreStateRes::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreStateRes::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreStateRes::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::middle_layer_pb::RobotCoreState& RobotCoreStateRes::state() const {
  const ::middle_layer_pb::RobotCoreState* p = state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreStateRes.state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState*>(
      &::middle_layer_pb::_RobotCoreState_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState* RobotCoreStateRes::release_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreStateRes.state)
  clear_has_state();
  ::middle_layer_pb::RobotCoreState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState* RobotCoreStateRes::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::middle_layer_pb::RobotCoreState;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreStateRes.state)
  return state_;
}
inline void RobotCoreStateRes::set_allocated_state(::middle_layer_pb::RobotCoreState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreStateRes.state)
}

// -------------------------------------------------------------------

// RobotCoreStateNotify

// required .middle_layer_pb.RobotCoreState state = 1;
inline bool RobotCoreStateNotify::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotCoreStateNotify::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotCoreStateNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotCoreStateNotify::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::middle_layer_pb::RobotCoreState& RobotCoreStateNotify::state() const {
  const ::middle_layer_pb::RobotCoreState* p = state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotCoreStateNotify.state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotCoreState*>(
      &::middle_layer_pb::_RobotCoreState_default_instance_);
}
inline ::middle_layer_pb::RobotCoreState* RobotCoreStateNotify::release_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotCoreStateNotify.state)
  clear_has_state();
  ::middle_layer_pb::RobotCoreState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotCoreState* RobotCoreStateNotify::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::middle_layer_pb::RobotCoreState;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotCoreStateNotify.state)
  return state_;
}
inline void RobotCoreStateNotify::set_allocated_state(::middle_layer_pb::RobotCoreState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotCoreStateNotify.state)
}

// -------------------------------------------------------------------

// AppLoginReq

// required string id = 1;
inline bool AppLoginReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppLoginReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppLoginReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppLoginReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& AppLoginReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.AppLoginReq.id)
  return id_.GetNoArena();
}
inline void AppLoginReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.AppLoginReq.id)
}
#if LANG_CXX11
inline void AppLoginReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.AppLoginReq.id)
}
#endif
inline void AppLoginReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.AppLoginReq.id)
}
inline void AppLoginReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.AppLoginReq.id)
}
inline ::std::string* AppLoginReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.AppLoginReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppLoginReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.AppLoginReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppLoginReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.AppLoginReq.id)
}

// -------------------------------------------------------------------

// AppLoginRes

// optional .middle_layer_pb.ErrorCode code = 1;
inline bool AppLoginRes::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppLoginRes::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppLoginRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppLoginRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode AppLoginRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.AppLoginRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void AppLoginRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.AppLoginRes.code)
}

// -------------------------------------------------------------------

// RobotLoginReq

// required string id = 1;
inline bool RobotLoginReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotLoginReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotLoginReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotLoginReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotLoginReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotLoginReq.id)
  return id_.GetNoArena();
}
inline void RobotLoginReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotLoginReq.id)
}
#if LANG_CXX11
inline void RobotLoginReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotLoginReq.id)
}
#endif
inline void RobotLoginReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotLoginReq.id)
}
inline void RobotLoginReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotLoginReq.id)
}
inline ::std::string* RobotLoginReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotLoginReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotLoginReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotLoginReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotLoginReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotLoginReq.id)
}

// -------------------------------------------------------------------

// RobotLoginRes

// optional .middle_layer_pb.ErrorCode code = 1;
inline bool RobotLoginRes::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotLoginRes::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotLoginRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotLoginRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode RobotLoginRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotLoginRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void RobotLoginRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotLoginRes.code)
}

// -------------------------------------------------------------------

// CloudLoginReq

// required string id = 1;
inline bool CloudLoginReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloudLoginReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloudLoginReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloudLoginReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CloudLoginReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CloudLoginReq.id)
  return id_.GetNoArena();
}
inline void CloudLoginReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CloudLoginReq.id)
}
#if LANG_CXX11
inline void CloudLoginReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CloudLoginReq.id)
}
#endif
inline void CloudLoginReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CloudLoginReq.id)
}
inline void CloudLoginReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CloudLoginReq.id)
}
inline ::std::string* CloudLoginReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CloudLoginReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudLoginReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CloudLoginReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudLoginReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CloudLoginReq.id)
}

// -------------------------------------------------------------------

// CloudLoginRes

// optional .middle_layer_pb.ErrorCode code = 1;
inline bool CloudLoginRes::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloudLoginRes::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloudLoginRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloudLoginRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CloudLoginRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CloudLoginRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CloudLoginRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CloudLoginRes.code)
}

// -------------------------------------------------------------------

// LaserResult

// required double height = 1;
inline bool LaserResult::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LaserResult::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LaserResult::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LaserResult::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double LaserResult::height() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.LaserResult.height)
  return height_;
}
inline void LaserResult::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.LaserResult.height)
}

// -------------------------------------------------------------------

// RtkResult

// optional .middle_layer_pb.PointENU utm_result = 1;
inline bool RtkResult::has_utm_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtkResult::set_has_utm_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtkResult::clear_has_utm_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtkResult::clear_utm_result() {
  if (utm_result_ != NULL) utm_result_->Clear();
  clear_has_utm_result();
}
inline const ::middle_layer_pb::PointENU& RtkResult::utm_result() const {
  const ::middle_layer_pb::PointENU* p = utm_result_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkResult.utm_result)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointENU*>(
      &::middle_layer_pb::_PointENU_default_instance_);
}
inline ::middle_layer_pb::PointENU* RtkResult::release_utm_result() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkResult.utm_result)
  clear_has_utm_result();
  ::middle_layer_pb::PointENU* temp = utm_result_;
  utm_result_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointENU* RtkResult::mutable_utm_result() {
  set_has_utm_result();
  if (utm_result_ == NULL) {
    utm_result_ = new ::middle_layer_pb::PointENU;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkResult.utm_result)
  return utm_result_;
}
inline void RtkResult::set_allocated_utm_result(::middle_layer_pb::PointENU* utm_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete utm_result_;
  }
  if (utm_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      utm_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, utm_result, submessage_arena);
    }
    set_has_utm_result();
  } else {
    clear_has_utm_result();
  }
  utm_result_ = utm_result;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkResult.utm_result)
}

// optional .middle_layer_pb.PointLLH gnss_result = 2;
inline bool RtkResult::has_gnss_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtkResult::set_has_gnss_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtkResult::clear_has_gnss_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtkResult::clear_gnss_result() {
  if (gnss_result_ != NULL) gnss_result_->Clear();
  clear_has_gnss_result();
}
inline const ::middle_layer_pb::PointLLH& RtkResult::gnss_result() const {
  const ::middle_layer_pb::PointLLH* p = gnss_result_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkResult.gnss_result)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* RtkResult::release_gnss_result() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkResult.gnss_result)
  clear_has_gnss_result();
  ::middle_layer_pb::PointLLH* temp = gnss_result_;
  gnss_result_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* RtkResult::mutable_gnss_result() {
  set_has_gnss_result();
  if (gnss_result_ == NULL) {
    gnss_result_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkResult.gnss_result)
  return gnss_result_;
}
inline void RtkResult::set_allocated_gnss_result(::middle_layer_pb::PointLLH* gnss_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_result_;
  }
  if (gnss_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss_result, submessage_arena);
    }
    set_has_gnss_result();
  } else {
    clear_has_gnss_result();
  }
  gnss_result_ = gnss_result;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkResult.gnss_result)
}

// -------------------------------------------------------------------

// RtkDataSource

// optional bytes data = 1;
inline bool RtkDataSource::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtkDataSource::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtkDataSource::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtkDataSource::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& RtkDataSource::data() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkDataSource.data)
  return data_.GetNoArena();
}
inline void RtkDataSource::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkDataSource.data)
}
#if LANG_CXX11
inline void RtkDataSource::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RtkDataSource.data)
}
#endif
inline void RtkDataSource::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RtkDataSource.data)
}
inline void RtkDataSource::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RtkDataSource.data)
}
inline ::std::string* RtkDataSource::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkDataSource.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RtkDataSource::release_data() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkDataSource.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RtkDataSource::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkDataSource.data)
}

// -------------------------------------------------------------------

// SensorInfoNotify

// required string id = 1;
inline bool SensorInfoNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SensorInfoNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SensorInfoNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SensorInfoNotify::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& SensorInfoNotify::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.id)
  return id_.GetNoArena();
}
inline void SensorInfoNotify::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.SensorInfoNotify.id)
}
#if LANG_CXX11
inline void SensorInfoNotify::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.SensorInfoNotify.id)
}
#endif
inline void SensorInfoNotify::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.SensorInfoNotify.id)
}
inline void SensorInfoNotify::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.SensorInfoNotify.id)
}
inline ::std::string* SensorInfoNotify::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.SensorInfoNotify.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SensorInfoNotify::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.SensorInfoNotify.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SensorInfoNotify::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.SensorInfoNotify.id)
}

// required int64 timestamp = 2;
inline bool SensorInfoNotify::has_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SensorInfoNotify::set_has_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SensorInfoNotify::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SensorInfoNotify::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 SensorInfoNotify::timestamp() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.timestamp)
  return timestamp_;
}
inline void SensorInfoNotify::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.SensorInfoNotify.timestamp)
}

// optional .middle_layer_pb.ImuAccelMessage imu_accel = 3;
inline bool SensorInfoNotify::has_imu_accel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SensorInfoNotify::set_has_imu_accel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SensorInfoNotify::clear_has_imu_accel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SensorInfoNotify::clear_imu_accel() {
  if (imu_accel_ != NULL) imu_accel_->Clear();
  clear_has_imu_accel();
}
inline const ::middle_layer_pb::ImuAccelMessage& SensorInfoNotify::imu_accel() const {
  const ::middle_layer_pb::ImuAccelMessage* p = imu_accel_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.imu_accel)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::ImuAccelMessage*>(
      &::middle_layer_pb::_ImuAccelMessage_default_instance_);
}
inline ::middle_layer_pb::ImuAccelMessage* SensorInfoNotify::release_imu_accel() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.SensorInfoNotify.imu_accel)
  clear_has_imu_accel();
  ::middle_layer_pb::ImuAccelMessage* temp = imu_accel_;
  imu_accel_ = NULL;
  return temp;
}
inline ::middle_layer_pb::ImuAccelMessage* SensorInfoNotify::mutable_imu_accel() {
  set_has_imu_accel();
  if (imu_accel_ == NULL) {
    imu_accel_ = new ::middle_layer_pb::ImuAccelMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.SensorInfoNotify.imu_accel)
  return imu_accel_;
}
inline void SensorInfoNotify::set_allocated_imu_accel(::middle_layer_pb::ImuAccelMessage* imu_accel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete imu_accel_;
  }
  if (imu_accel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imu_accel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imu_accel, submessage_arena);
    }
    set_has_imu_accel();
  } else {
    clear_has_imu_accel();
  }
  imu_accel_ = imu_accel;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.SensorInfoNotify.imu_accel)
}

// optional .middle_layer_pb.ImuGyroMessage imu_gyro = 4;
inline bool SensorInfoNotify::has_imu_gyro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SensorInfoNotify::set_has_imu_gyro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SensorInfoNotify::clear_has_imu_gyro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SensorInfoNotify::clear_imu_gyro() {
  if (imu_gyro_ != NULL) imu_gyro_->Clear();
  clear_has_imu_gyro();
}
inline const ::middle_layer_pb::ImuGyroMessage& SensorInfoNotify::imu_gyro() const {
  const ::middle_layer_pb::ImuGyroMessage* p = imu_gyro_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.imu_gyro)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::ImuGyroMessage*>(
      &::middle_layer_pb::_ImuGyroMessage_default_instance_);
}
inline ::middle_layer_pb::ImuGyroMessage* SensorInfoNotify::release_imu_gyro() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.SensorInfoNotify.imu_gyro)
  clear_has_imu_gyro();
  ::middle_layer_pb::ImuGyroMessage* temp = imu_gyro_;
  imu_gyro_ = NULL;
  return temp;
}
inline ::middle_layer_pb::ImuGyroMessage* SensorInfoNotify::mutable_imu_gyro() {
  set_has_imu_gyro();
  if (imu_gyro_ == NULL) {
    imu_gyro_ = new ::middle_layer_pb::ImuGyroMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.SensorInfoNotify.imu_gyro)
  return imu_gyro_;
}
inline void SensorInfoNotify::set_allocated_imu_gyro(::middle_layer_pb::ImuGyroMessage* imu_gyro) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete imu_gyro_;
  }
  if (imu_gyro) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imu_gyro = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imu_gyro, submessage_arena);
    }
    set_has_imu_gyro();
  } else {
    clear_has_imu_gyro();
  }
  imu_gyro_ = imu_gyro;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.SensorInfoNotify.imu_gyro)
}

// optional .middle_layer_pb.ImuEulerMessage imu_euler = 5;
inline bool SensorInfoNotify::has_imu_euler() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SensorInfoNotify::set_has_imu_euler() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SensorInfoNotify::clear_has_imu_euler() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SensorInfoNotify::clear_imu_euler() {
  if (imu_euler_ != NULL) imu_euler_->Clear();
  clear_has_imu_euler();
}
inline const ::middle_layer_pb::ImuEulerMessage& SensorInfoNotify::imu_euler() const {
  const ::middle_layer_pb::ImuEulerMessage* p = imu_euler_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.imu_euler)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::ImuEulerMessage*>(
      &::middle_layer_pb::_ImuEulerMessage_default_instance_);
}
inline ::middle_layer_pb::ImuEulerMessage* SensorInfoNotify::release_imu_euler() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.SensorInfoNotify.imu_euler)
  clear_has_imu_euler();
  ::middle_layer_pb::ImuEulerMessage* temp = imu_euler_;
  imu_euler_ = NULL;
  return temp;
}
inline ::middle_layer_pb::ImuEulerMessage* SensorInfoNotify::mutable_imu_euler() {
  set_has_imu_euler();
  if (imu_euler_ == NULL) {
    imu_euler_ = new ::middle_layer_pb::ImuEulerMessage;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.SensorInfoNotify.imu_euler)
  return imu_euler_;
}
inline void SensorInfoNotify::set_allocated_imu_euler(::middle_layer_pb::ImuEulerMessage* imu_euler) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete imu_euler_;
  }
  if (imu_euler) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imu_euler = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imu_euler, submessage_arena);
    }
    set_has_imu_euler();
  } else {
    clear_has_imu_euler();
  }
  imu_euler_ = imu_euler;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.SensorInfoNotify.imu_euler)
}

// optional .middle_layer_pb.PointLLH gnss = 6;
inline bool SensorInfoNotify::has_gnss() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SensorInfoNotify::set_has_gnss() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SensorInfoNotify::clear_has_gnss() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SensorInfoNotify::clear_gnss() {
  if (gnss_ != NULL) gnss_->Clear();
  clear_has_gnss();
}
inline const ::middle_layer_pb::PointLLH& SensorInfoNotify::gnss() const {
  const ::middle_layer_pb::PointLLH* p = gnss_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.gnss)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* SensorInfoNotify::release_gnss() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.SensorInfoNotify.gnss)
  clear_has_gnss();
  ::middle_layer_pb::PointLLH* temp = gnss_;
  gnss_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* SensorInfoNotify::mutable_gnss() {
  set_has_gnss();
  if (gnss_ == NULL) {
    gnss_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.SensorInfoNotify.gnss)
  return gnss_;
}
inline void SensorInfoNotify::set_allocated_gnss(::middle_layer_pb::PointLLH* gnss) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_;
  }
  if (gnss) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss, submessage_arena);
    }
    set_has_gnss();
  } else {
    clear_has_gnss();
  }
  gnss_ = gnss;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.SensorInfoNotify.gnss)
}

// optional .middle_layer_pb.RtkDataSource rtk = 7;
inline bool SensorInfoNotify::has_rtk() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SensorInfoNotify::set_has_rtk() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SensorInfoNotify::clear_has_rtk() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SensorInfoNotify::clear_rtk() {
  if (rtk_ != NULL) rtk_->Clear();
  clear_has_rtk();
}
inline const ::middle_layer_pb::RtkDataSource& SensorInfoNotify::rtk() const {
  const ::middle_layer_pb::RtkDataSource* p = rtk_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.SensorInfoNotify.rtk)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RtkDataSource*>(
      &::middle_layer_pb::_RtkDataSource_default_instance_);
}
inline ::middle_layer_pb::RtkDataSource* SensorInfoNotify::release_rtk() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.SensorInfoNotify.rtk)
  clear_has_rtk();
  ::middle_layer_pb::RtkDataSource* temp = rtk_;
  rtk_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RtkDataSource* SensorInfoNotify::mutable_rtk() {
  set_has_rtk();
  if (rtk_ == NULL) {
    rtk_ = new ::middle_layer_pb::RtkDataSource;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.SensorInfoNotify.rtk)
  return rtk_;
}
inline void SensorInfoNotify::set_allocated_rtk(::middle_layer_pb::RtkDataSource* rtk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rtk_;
  }
  if (rtk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rtk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rtk, submessage_arena);
    }
    set_has_rtk();
  } else {
    clear_has_rtk();
  }
  rtk_ = rtk;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.SensorInfoNotify.rtk)
}

// -------------------------------------------------------------------

// MeasureResultNotify_Point

// required .middle_layer_pb.StakeDto stake_dto = 1;
inline bool MeasureResultNotify_Point::has_stake_dto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MeasureResultNotify_Point::set_has_stake_dto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MeasureResultNotify_Point::clear_has_stake_dto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MeasureResultNotify_Point::clear_stake_dto() {
  if (stake_dto_ != NULL) stake_dto_->Clear();
  clear_has_stake_dto();
}
inline const ::middle_layer_pb::StakeDto& MeasureResultNotify_Point::stake_dto() const {
  const ::middle_layer_pb::StakeDto* p = stake_dto_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.Point.stake_dto)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::StakeDto*>(
      &::middle_layer_pb::_StakeDto_default_instance_);
}
inline ::middle_layer_pb::StakeDto* MeasureResultNotify_Point::release_stake_dto() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.MeasureResultNotify.Point.stake_dto)
  clear_has_stake_dto();
  ::middle_layer_pb::StakeDto* temp = stake_dto_;
  stake_dto_ = NULL;
  return temp;
}
inline ::middle_layer_pb::StakeDto* MeasureResultNotify_Point::mutable_stake_dto() {
  set_has_stake_dto();
  if (stake_dto_ == NULL) {
    stake_dto_ = new ::middle_layer_pb::StakeDto;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.MeasureResultNotify.Point.stake_dto)
  return stake_dto_;
}
inline void MeasureResultNotify_Point::set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stake_dto_;
  }
  if (stake_dto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stake_dto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stake_dto, submessage_arena);
    }
    set_has_stake_dto();
  } else {
    clear_has_stake_dto();
  }
  stake_dto_ = stake_dto;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.MeasureResultNotify.Point.stake_dto)
}

// required .middle_layer_pb.PointLLH rtk_res = 2;
inline bool MeasureResultNotify_Point::has_rtk_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MeasureResultNotify_Point::set_has_rtk_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MeasureResultNotify_Point::clear_has_rtk_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MeasureResultNotify_Point::clear_rtk_res() {
  if (rtk_res_ != NULL) rtk_res_->Clear();
  clear_has_rtk_res();
}
inline const ::middle_layer_pb::PointLLH& MeasureResultNotify_Point::rtk_res() const {
  const ::middle_layer_pb::PointLLH* p = rtk_res_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.Point.rtk_res)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* MeasureResultNotify_Point::release_rtk_res() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.MeasureResultNotify.Point.rtk_res)
  clear_has_rtk_res();
  ::middle_layer_pb::PointLLH* temp = rtk_res_;
  rtk_res_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* MeasureResultNotify_Point::mutable_rtk_res() {
  set_has_rtk_res();
  if (rtk_res_ == NULL) {
    rtk_res_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.MeasureResultNotify.Point.rtk_res)
  return rtk_res_;
}
inline void MeasureResultNotify_Point::set_allocated_rtk_res(::middle_layer_pb::PointLLH* rtk_res) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rtk_res_;
  }
  if (rtk_res) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rtk_res = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rtk_res, submessage_arena);
    }
    set_has_rtk_res();
  } else {
    clear_has_rtk_res();
  }
  rtk_res_ = rtk_res;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.MeasureResultNotify.Point.rtk_res)
}

// optional .middle_layer_pb.PointLLH pl = 3;
inline bool MeasureResultNotify_Point::has_pl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MeasureResultNotify_Point::set_has_pl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MeasureResultNotify_Point::clear_has_pl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MeasureResultNotify_Point::clear_pl() {
  if (pl_ != NULL) pl_->Clear();
  clear_has_pl();
}
inline const ::middle_layer_pb::PointLLH& MeasureResultNotify_Point::pl() const {
  const ::middle_layer_pb::PointLLH* p = pl_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.Point.pl)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* MeasureResultNotify_Point::release_pl() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.MeasureResultNotify.Point.pl)
  clear_has_pl();
  ::middle_layer_pb::PointLLH* temp = pl_;
  pl_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* MeasureResultNotify_Point::mutable_pl() {
  set_has_pl();
  if (pl_ == NULL) {
    pl_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.MeasureResultNotify.Point.pl)
  return pl_;
}
inline void MeasureResultNotify_Point::set_allocated_pl(::middle_layer_pb::PointLLH* pl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pl_;
  }
  if (pl) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pl, submessage_arena);
    }
    set_has_pl();
  } else {
    clear_has_pl();
  }
  pl_ = pl;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.MeasureResultNotify.Point.pl)
}

// required string task_code = 4;
inline bool MeasureResultNotify_Point::has_task_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MeasureResultNotify_Point::set_has_task_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MeasureResultNotify_Point::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MeasureResultNotify_Point::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& MeasureResultNotify_Point::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.Point.task_code)
  return task_code_.GetNoArena();
}
inline void MeasureResultNotify_Point::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.MeasureResultNotify.Point.task_code)
}
#if LANG_CXX11
inline void MeasureResultNotify_Point::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.MeasureResultNotify.Point.task_code)
}
#endif
inline void MeasureResultNotify_Point::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.MeasureResultNotify.Point.task_code)
}
inline void MeasureResultNotify_Point::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.MeasureResultNotify.Point.task_code)
}
inline ::std::string* MeasureResultNotify_Point::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.MeasureResultNotify.Point.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeasureResultNotify_Point::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.MeasureResultNotify.Point.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeasureResultNotify_Point::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.MeasureResultNotify.Point.task_code)
}

// -------------------------------------------------------------------

// MeasureResultNotify

// required string id = 1;
inline bool MeasureResultNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MeasureResultNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MeasureResultNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MeasureResultNotify::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& MeasureResultNotify::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.id)
  return id_.GetNoArena();
}
inline void MeasureResultNotify::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.MeasureResultNotify.id)
}
#if LANG_CXX11
inline void MeasureResultNotify::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.MeasureResultNotify.id)
}
#endif
inline void MeasureResultNotify::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.MeasureResultNotify.id)
}
inline void MeasureResultNotify::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.MeasureResultNotify.id)
}
inline ::std::string* MeasureResultNotify::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.MeasureResultNotify.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeasureResultNotify::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.MeasureResultNotify.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeasureResultNotify::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.MeasureResultNotify.id)
}

// required int64 timestamp = 2;
inline bool MeasureResultNotify::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MeasureResultNotify::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MeasureResultNotify::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MeasureResultNotify::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 MeasureResultNotify::timestamp() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.timestamp)
  return timestamp_;
}
inline void MeasureResultNotify::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.MeasureResultNotify.timestamp)
}

// repeated .middle_layer_pb.MeasureResultNotify.Point pos_list = 3;
inline int MeasureResultNotify::pos_list_size() const {
  return pos_list_.size();
}
inline void MeasureResultNotify::clear_pos_list() {
  pos_list_.Clear();
}
inline const ::middle_layer_pb::MeasureResultNotify_Point& MeasureResultNotify::pos_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.MeasureResultNotify.pos_list)
  return pos_list_.Get(index);
}
inline ::middle_layer_pb::MeasureResultNotify_Point* MeasureResultNotify::mutable_pos_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.MeasureResultNotify.pos_list)
  return pos_list_.Mutable(index);
}
inline ::middle_layer_pb::MeasureResultNotify_Point* MeasureResultNotify::add_pos_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.MeasureResultNotify.pos_list)
  return pos_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::MeasureResultNotify_Point >*
MeasureResultNotify::mutable_pos_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.MeasureResultNotify.pos_list)
  return &pos_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::MeasureResultNotify_Point >&
MeasureResultNotify::pos_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.MeasureResultNotify.pos_list)
  return pos_list_;
}

// -------------------------------------------------------------------

// TaskState

// required .middle_layer_pb.TaskState.enState state = 1;
inline bool TaskState::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskState::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskState::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskState::clear_state() {
  state_ = 255;
  clear_has_state();
}
inline ::middle_layer_pb::TaskState_enState TaskState::state() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TaskState.state)
  return static_cast< ::middle_layer_pb::TaskState_enState >(state_);
}
inline void TaskState::set_state(::middle_layer_pb::TaskState_enState value) {
  assert(::middle_layer_pb::TaskState_enState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.TaskState.state)
}

// optional string task_code = 2;
inline bool TaskState::has_task_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskState::set_has_task_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskState::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskState::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& TaskState::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TaskState.task_code)
  return task_code_.GetNoArena();
}
inline void TaskState::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.TaskState.task_code)
}
#if LANG_CXX11
inline void TaskState::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.TaskState.task_code)
}
#endif
inline void TaskState::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.TaskState.task_code)
}
inline void TaskState::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.TaskState.task_code)
}
inline ::std::string* TaskState::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TaskState.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskState::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TaskState.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskState::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TaskState.task_code)
}

// optional .middle_layer_pb.StakeDto stake_dto = 3;
inline bool TaskState::has_stake_dto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskState::set_has_stake_dto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskState::clear_has_stake_dto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskState::clear_stake_dto() {
  if (stake_dto_ != NULL) stake_dto_->Clear();
  clear_has_stake_dto();
}
inline const ::middle_layer_pb::StakeDto& TaskState::stake_dto() const {
  const ::middle_layer_pb::StakeDto* p = stake_dto_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.TaskState.stake_dto)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::StakeDto*>(
      &::middle_layer_pb::_StakeDto_default_instance_);
}
inline ::middle_layer_pb::StakeDto* TaskState::release_stake_dto() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TaskState.stake_dto)
  clear_has_stake_dto();
  ::middle_layer_pb::StakeDto* temp = stake_dto_;
  stake_dto_ = NULL;
  return temp;
}
inline ::middle_layer_pb::StakeDto* TaskState::mutable_stake_dto() {
  set_has_stake_dto();
  if (stake_dto_ == NULL) {
    stake_dto_ = new ::middle_layer_pb::StakeDto;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TaskState.stake_dto)
  return stake_dto_;
}
inline void TaskState::set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stake_dto_;
  }
  if (stake_dto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stake_dto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stake_dto, submessage_arena);
    }
    set_has_stake_dto();
  } else {
    clear_has_stake_dto();
  }
  stake_dto_ = stake_dto;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TaskState.stake_dto)
}

// -------------------------------------------------------------------

// TaskStateNotify

// required string id = 1;
inline bool TaskStateNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskStateNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskStateNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskStateNotify::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& TaskStateNotify::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TaskStateNotify.id)
  return id_.GetNoArena();
}
inline void TaskStateNotify::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.TaskStateNotify.id)
}
#if LANG_CXX11
inline void TaskStateNotify::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.TaskStateNotify.id)
}
#endif
inline void TaskStateNotify::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.TaskStateNotify.id)
}
inline void TaskStateNotify::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.TaskStateNotify.id)
}
inline ::std::string* TaskStateNotify::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TaskStateNotify.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskStateNotify::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TaskStateNotify.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskStateNotify::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TaskStateNotify.id)
}

// required int64 timestamp = 2;
inline bool TaskStateNotify::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskStateNotify::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskStateNotify::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskStateNotify::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 TaskStateNotify::timestamp() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TaskStateNotify.timestamp)
  return timestamp_;
}
inline void TaskStateNotify::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.TaskStateNotify.timestamp)
}

// required .middle_layer_pb.TaskState state = 3;
inline bool TaskStateNotify::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskStateNotify::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskStateNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskStateNotify::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::middle_layer_pb::TaskState& TaskStateNotify::state() const {
  const ::middle_layer_pb::TaskState* p = state_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.TaskStateNotify.state)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::TaskState*>(
      &::middle_layer_pb::_TaskState_default_instance_);
}
inline ::middle_layer_pb::TaskState* TaskStateNotify::release_state() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TaskStateNotify.state)
  clear_has_state();
  ::middle_layer_pb::TaskState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::middle_layer_pb::TaskState* TaskStateNotify::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::middle_layer_pb::TaskState;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TaskStateNotify.state)
  return state_;
}
inline void TaskStateNotify::set_allocated_state(::middle_layer_pb::TaskState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TaskStateNotify.state)
}

// -------------------------------------------------------------------

// TargetTrackNotify_Point

// required .middle_layer_pb.Point2D pt_x_y = 1;
inline bool TargetTrackNotify_Point::has_pt_x_y() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetTrackNotify_Point::set_has_pt_x_y() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetTrackNotify_Point::clear_has_pt_x_y() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetTrackNotify_Point::clear_pt_x_y() {
  if (pt_x_y_ != NULL) pt_x_y_->Clear();
  clear_has_pt_x_y();
}
inline const ::middle_layer_pb::Point2D& TargetTrackNotify_Point::pt_x_y() const {
  const ::middle_layer_pb::Point2D* p = pt_x_y_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.Point.pt_x_y)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::Point2D*>(
      &::middle_layer_pb::_Point2D_default_instance_);
}
inline ::middle_layer_pb::Point2D* TargetTrackNotify_Point::release_pt_x_y() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TargetTrackNotify.Point.pt_x_y)
  clear_has_pt_x_y();
  ::middle_layer_pb::Point2D* temp = pt_x_y_;
  pt_x_y_ = NULL;
  return temp;
}
inline ::middle_layer_pb::Point2D* TargetTrackNotify_Point::mutable_pt_x_y() {
  set_has_pt_x_y();
  if (pt_x_y_ == NULL) {
    pt_x_y_ = new ::middle_layer_pb::Point2D;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TargetTrackNotify.Point.pt_x_y)
  return pt_x_y_;
}
inline void TargetTrackNotify_Point::set_allocated_pt_x_y(::middle_layer_pb::Point2D* pt_x_y) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_x_y_;
  }
  if (pt_x_y) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt_x_y = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt_x_y, submessage_arena);
    }
    set_has_pt_x_y();
  } else {
    clear_has_pt_x_y();
  }
  pt_x_y_ = pt_x_y;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TargetTrackNotify.Point.pt_x_y)
}

// required double pt_h = 2;
inline bool TargetTrackNotify_Point::has_pt_h() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetTrackNotify_Point::set_has_pt_h() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetTrackNotify_Point::clear_has_pt_h() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetTrackNotify_Point::clear_pt_h() {
  pt_h_ = 0;
  clear_has_pt_h();
}
inline double TargetTrackNotify_Point::pt_h() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.Point.pt_h)
  return pt_h_;
}
inline void TargetTrackNotify_Point::set_pt_h(double value) {
  set_has_pt_h();
  pt_h_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.TargetTrackNotify.Point.pt_h)
}

// required double pt_c = 3;
inline bool TargetTrackNotify_Point::has_pt_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TargetTrackNotify_Point::set_has_pt_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TargetTrackNotify_Point::clear_has_pt_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TargetTrackNotify_Point::clear_pt_c() {
  pt_c_ = 0;
  clear_has_pt_c();
}
inline double TargetTrackNotify_Point::pt_c() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.Point.pt_c)
  return pt_c_;
}
inline void TargetTrackNotify_Point::set_pt_c(double value) {
  set_has_pt_c();
  pt_c_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.TargetTrackNotify.Point.pt_c)
}

// required double pt_s = 4;
inline bool TargetTrackNotify_Point::has_pt_s() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TargetTrackNotify_Point::set_has_pt_s() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TargetTrackNotify_Point::clear_has_pt_s() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TargetTrackNotify_Point::clear_pt_s() {
  pt_s_ = 0;
  clear_has_pt_s();
}
inline double TargetTrackNotify_Point::pt_s() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.Point.pt_s)
  return pt_s_;
}
inline void TargetTrackNotify_Point::set_pt_s(double value) {
  set_has_pt_s();
  pt_s_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.TargetTrackNotify.Point.pt_s)
}

// -------------------------------------------------------------------

// TargetTrackNotify

// required string id = 1;
inline bool TargetTrackNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetTrackNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetTrackNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetTrackNotify::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& TargetTrackNotify::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.id)
  return id_.GetNoArena();
}
inline void TargetTrackNotify::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.TargetTrackNotify.id)
}
#if LANG_CXX11
inline void TargetTrackNotify::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.TargetTrackNotify.id)
}
#endif
inline void TargetTrackNotify::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.TargetTrackNotify.id)
}
inline void TargetTrackNotify::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.TargetTrackNotify.id)
}
inline ::std::string* TargetTrackNotify::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TargetTrackNotify.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TargetTrackNotify::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TargetTrackNotify.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TargetTrackNotify::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TargetTrackNotify.id)
}

// required int64 timestamp = 2;
inline bool TargetTrackNotify::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TargetTrackNotify::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TargetTrackNotify::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TargetTrackNotify::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 TargetTrackNotify::timestamp() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.timestamp)
  return timestamp_;
}
inline void TargetTrackNotify::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.TargetTrackNotify.timestamp)
}

// optional .middle_layer_pb.TargetTrackNotify.Point curr_pos = 3;
inline bool TargetTrackNotify::has_curr_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetTrackNotify::set_has_curr_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetTrackNotify::clear_has_curr_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetTrackNotify::clear_curr_pos() {
  if (curr_pos_ != NULL) curr_pos_->Clear();
  clear_has_curr_pos();
}
inline const ::middle_layer_pb::TargetTrackNotify_Point& TargetTrackNotify::curr_pos() const {
  const ::middle_layer_pb::TargetTrackNotify_Point* p = curr_pos_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.curr_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::TargetTrackNotify_Point*>(
      &::middle_layer_pb::_TargetTrackNotify_Point_default_instance_);
}
inline ::middle_layer_pb::TargetTrackNotify_Point* TargetTrackNotify::release_curr_pos() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.TargetTrackNotify.curr_pos)
  clear_has_curr_pos();
  ::middle_layer_pb::TargetTrackNotify_Point* temp = curr_pos_;
  curr_pos_ = NULL;
  return temp;
}
inline ::middle_layer_pb::TargetTrackNotify_Point* TargetTrackNotify::mutable_curr_pos() {
  set_has_curr_pos();
  if (curr_pos_ == NULL) {
    curr_pos_ = new ::middle_layer_pb::TargetTrackNotify_Point;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TargetTrackNotify.curr_pos)
  return curr_pos_;
}
inline void TargetTrackNotify::set_allocated_curr_pos(::middle_layer_pb::TargetTrackNotify_Point* curr_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete curr_pos_;
  }
  if (curr_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      curr_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, curr_pos, submessage_arena);
    }
    set_has_curr_pos();
  } else {
    clear_has_curr_pos();
  }
  curr_pos_ = curr_pos;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.TargetTrackNotify.curr_pos)
}

// repeated .middle_layer_pb.TargetTrackNotify.Point pos_list = 4;
inline int TargetTrackNotify::pos_list_size() const {
  return pos_list_.size();
}
inline void TargetTrackNotify::clear_pos_list() {
  pos_list_.Clear();
}
inline const ::middle_layer_pb::TargetTrackNotify_Point& TargetTrackNotify::pos_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.TargetTrackNotify.pos_list)
  return pos_list_.Get(index);
}
inline ::middle_layer_pb::TargetTrackNotify_Point* TargetTrackNotify::mutable_pos_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.TargetTrackNotify.pos_list)
  return pos_list_.Mutable(index);
}
inline ::middle_layer_pb::TargetTrackNotify_Point* TargetTrackNotify::add_pos_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.TargetTrackNotify.pos_list)
  return pos_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::TargetTrackNotify_Point >*
TargetTrackNotify::mutable_pos_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.TargetTrackNotify.pos_list)
  return &pos_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::TargetTrackNotify_Point >&
TargetTrackNotify::pos_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.TargetTrackNotify.pos_list)
  return pos_list_;
}

// -------------------------------------------------------------------

// RtkOperationCmdReq

// required string id = 1;
inline bool RtkOperationCmdReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtkOperationCmdReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtkOperationCmdReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtkOperationCmdReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RtkOperationCmdReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOperationCmdReq.id)
  return id_.GetNoArena();
}
inline void RtkOperationCmdReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOperationCmdReq.id)
}
#if LANG_CXX11
inline void RtkOperationCmdReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RtkOperationCmdReq.id)
}
#endif
inline void RtkOperationCmdReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RtkOperationCmdReq.id)
}
inline void RtkOperationCmdReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RtkOperationCmdReq.id)
}
inline ::std::string* RtkOperationCmdReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkOperationCmdReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RtkOperationCmdReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkOperationCmdReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RtkOperationCmdReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkOperationCmdReq.id)
}

// required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
inline bool RtkOperationCmdReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtkOperationCmdReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtkOperationCmdReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtkOperationCmdReq::clear_type() {
  type_ = 255;
  clear_has_type();
}
inline ::middle_layer_pb::RtkOperationCmdReq_enOperationType RtkOperationCmdReq::type() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOperationCmdReq.type)
  return static_cast< ::middle_layer_pb::RtkOperationCmdReq_enOperationType >(type_);
}
inline void RtkOperationCmdReq::set_type(::middle_layer_pb::RtkOperationCmdReq_enOperationType value) {
  assert(::middle_layer_pb::RtkOperationCmdReq_enOperationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOperationCmdReq.type)
}

// -------------------------------------------------------------------

// RtkOperationCmdRes

// required .middle_layer_pb.ErrorCode code = 1;
inline bool RtkOperationCmdRes::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtkOperationCmdRes::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtkOperationCmdRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtkOperationCmdRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode RtkOperationCmdRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOperationCmdRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void RtkOperationCmdRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOperationCmdRes.code)
}

// -------------------------------------------------------------------

// RtkOffsetInfo

// required .middle_layer_pb.PointLLH pos = 1;
inline bool RtkOffsetInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtkOffsetInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtkOffsetInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtkOffsetInfo::clear_pos() {
  if (pos_ != NULL) pos_->Clear();
  clear_has_pos();
}
inline const ::middle_layer_pb::PointLLH& RtkOffsetInfo::pos() const {
  const ::middle_layer_pb::PointLLH* p = pos_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOffsetInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* RtkOffsetInfo::release_pos() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkOffsetInfo.pos)
  clear_has_pos();
  ::middle_layer_pb::PointLLH* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* RtkOffsetInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkOffsetInfo.pos)
  return pos_;
}
inline void RtkOffsetInfo::set_allocated_pos(::middle_layer_pb::PointLLH* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    set_has_pos();
  } else {
    clear_has_pos();
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkOffsetInfo.pos)
}

// required string name = 2;
inline bool RtkOffsetInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtkOffsetInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtkOffsetInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtkOffsetInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RtkOffsetInfo::name() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOffsetInfo.name)
  return name_.GetNoArena();
}
inline void RtkOffsetInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOffsetInfo.name)
}
#if LANG_CXX11
inline void RtkOffsetInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RtkOffsetInfo.name)
}
#endif
inline void RtkOffsetInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RtkOffsetInfo.name)
}
inline void RtkOffsetInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RtkOffsetInfo.name)
}
inline ::std::string* RtkOffsetInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkOffsetInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RtkOffsetInfo::release_name() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkOffsetInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RtkOffsetInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkOffsetInfo.name)
}

// required string level = 3;
inline bool RtkOffsetInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtkOffsetInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtkOffsetInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtkOffsetInfo::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_level();
}
inline const ::std::string& RtkOffsetInfo::level() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOffsetInfo.level)
  return level_.GetNoArena();
}
inline void RtkOffsetInfo::set_level(const ::std::string& value) {
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOffsetInfo.level)
}
#if LANG_CXX11
inline void RtkOffsetInfo::set_level(::std::string&& value) {
  set_has_level();
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RtkOffsetInfo.level)
}
#endif
inline void RtkOffsetInfo::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RtkOffsetInfo.level)
}
inline void RtkOffsetInfo::set_level(const char* value, size_t size) {
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RtkOffsetInfo.level)
}
inline ::std::string* RtkOffsetInfo::mutable_level() {
  set_has_level();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RtkOffsetInfo.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RtkOffsetInfo::release_level() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RtkOffsetInfo.level)
  clear_has_level();
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RtkOffsetInfo::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    set_has_level();
  } else {
    clear_has_level();
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RtkOffsetInfo.level)
}

// required double offset_x = 4;
inline bool RtkOffsetInfo::has_offset_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RtkOffsetInfo::set_has_offset_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RtkOffsetInfo::clear_has_offset_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RtkOffsetInfo::clear_offset_x() {
  offset_x_ = 0;
  clear_has_offset_x();
}
inline double RtkOffsetInfo::offset_x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOffsetInfo.offset_x)
  return offset_x_;
}
inline void RtkOffsetInfo::set_offset_x(double value) {
  set_has_offset_x();
  offset_x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOffsetInfo.offset_x)
}

// required double offset_y = 5;
inline bool RtkOffsetInfo::has_offset_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RtkOffsetInfo::set_has_offset_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RtkOffsetInfo::clear_has_offset_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RtkOffsetInfo::clear_offset_y() {
  offset_y_ = 0;
  clear_has_offset_y();
}
inline double RtkOffsetInfo::offset_y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOffsetInfo.offset_y)
  return offset_y_;
}
inline void RtkOffsetInfo::set_offset_y(double value) {
  set_has_offset_y();
  offset_y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOffsetInfo.offset_y)
}

// required double offset_z = 6;
inline bool RtkOffsetInfo::has_offset_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RtkOffsetInfo::set_has_offset_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RtkOffsetInfo::clear_has_offset_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RtkOffsetInfo::clear_offset_z() {
  offset_z_ = 0;
  clear_has_offset_z();
}
inline double RtkOffsetInfo::offset_z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RtkOffsetInfo.offset_z)
  return offset_z_;
}
inline void RtkOffsetInfo::set_offset_z(double value) {
  set_has_offset_z();
  offset_z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RtkOffsetInfo.offset_z)
}

// -------------------------------------------------------------------

// WorkMessageIssued

// required string id = 1;
inline bool WorkMessageIssued::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkMessageIssued::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkMessageIssued::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkMessageIssued::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& WorkMessageIssued::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.id)
  return id_.GetNoArena();
}
inline void WorkMessageIssued::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.WorkMessageIssued.id)
}
#if LANG_CXX11
inline void WorkMessageIssued::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.WorkMessageIssued.id)
}
#endif
inline void WorkMessageIssued::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.WorkMessageIssued.id)
}
inline void WorkMessageIssued::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.WorkMessageIssued.id)
}
inline ::std::string* WorkMessageIssued::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkMessageIssued::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkMessageIssued::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.id)
}

// required .middle_layer_pb.DeviceTask device_task = 2;
inline bool WorkMessageIssued::has_device_task() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkMessageIssued::set_has_device_task() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkMessageIssued::clear_has_device_task() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkMessageIssued::clear_device_task() {
  if (device_task_ != NULL) device_task_->Clear();
  clear_has_device_task();
}
inline const ::middle_layer_pb::DeviceTask& WorkMessageIssued::device_task() const {
  const ::middle_layer_pb::DeviceTask* p = device_task_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.device_task)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DeviceTask*>(
      &::middle_layer_pb::_DeviceTask_default_instance_);
}
inline ::middle_layer_pb::DeviceTask* WorkMessageIssued::release_device_task() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.device_task)
  clear_has_device_task();
  ::middle_layer_pb::DeviceTask* temp = device_task_;
  device_task_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DeviceTask* WorkMessageIssued::mutable_device_task() {
  set_has_device_task();
  if (device_task_ == NULL) {
    device_task_ = new ::middle_layer_pb::DeviceTask;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.device_task)
  return device_task_;
}
inline void WorkMessageIssued::set_allocated_device_task(::middle_layer_pb::DeviceTask* device_task) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete device_task_;
  }
  if (device_task) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_task = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_task, submessage_arena);
    }
    set_has_device_task();
  } else {
    clear_has_device_task();
  }
  device_task_ = device_task;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.device_task)
}

// required .middle_layer_pb.WorkType work_type = 3;
inline bool WorkMessageIssued::has_work_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WorkMessageIssued::set_has_work_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WorkMessageIssued::clear_has_work_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WorkMessageIssued::clear_work_type() {
  work_type_ = 1;
  clear_has_work_type();
}
inline ::middle_layer_pb::WorkType WorkMessageIssued::work_type() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.work_type)
  return static_cast< ::middle_layer_pb::WorkType >(work_type_);
}
inline void WorkMessageIssued::set_work_type(::middle_layer_pb::WorkType value) {
  assert(::middle_layer_pb::WorkType_IsValid(value));
  set_has_work_type();
  work_type_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.WorkMessageIssued.work_type)
}

// required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
inline bool WorkMessageIssued::has_rtk_offset_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkMessageIssued::set_has_rtk_offset_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkMessageIssued::clear_has_rtk_offset_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkMessageIssued::clear_rtk_offset_info() {
  if (rtk_offset_info_ != NULL) rtk_offset_info_->Clear();
  clear_has_rtk_offset_info();
}
inline const ::middle_layer_pb::RtkOffsetInfo& WorkMessageIssued::rtk_offset_info() const {
  const ::middle_layer_pb::RtkOffsetInfo* p = rtk_offset_info_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.rtk_offset_info)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RtkOffsetInfo*>(
      &::middle_layer_pb::_RtkOffsetInfo_default_instance_);
}
inline ::middle_layer_pb::RtkOffsetInfo* WorkMessageIssued::release_rtk_offset_info() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.rtk_offset_info)
  clear_has_rtk_offset_info();
  ::middle_layer_pb::RtkOffsetInfo* temp = rtk_offset_info_;
  rtk_offset_info_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RtkOffsetInfo* WorkMessageIssued::mutable_rtk_offset_info() {
  set_has_rtk_offset_info();
  if (rtk_offset_info_ == NULL) {
    rtk_offset_info_ = new ::middle_layer_pb::RtkOffsetInfo;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.rtk_offset_info)
  return rtk_offset_info_;
}
inline void WorkMessageIssued::set_allocated_rtk_offset_info(::middle_layer_pb::RtkOffsetInfo* rtk_offset_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rtk_offset_info_;
  }
  if (rtk_offset_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rtk_offset_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rtk_offset_info, submessage_arena);
    }
    set_has_rtk_offset_info();
  } else {
    clear_has_rtk_offset_info();
  }
  rtk_offset_info_ = rtk_offset_info;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.rtk_offset_info)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
inline int WorkMessageIssued::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void WorkMessageIssued::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& WorkMessageIssued::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* WorkMessageIssued::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* WorkMessageIssued::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.WorkMessageIssued.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
WorkMessageIssued::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.WorkMessageIssued.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
WorkMessageIssued::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.WorkMessageIssued.stake_dto_list)
  return stake_dto_list_;
}

// optional .middle_layer_pb.PutSideLineParam put_side_line_param = 6;
inline bool WorkMessageIssued::has_put_side_line_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkMessageIssued::set_has_put_side_line_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkMessageIssued::clear_has_put_side_line_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkMessageIssued::clear_put_side_line_param() {
  if (put_side_line_param_ != NULL) put_side_line_param_->Clear();
  clear_has_put_side_line_param();
}
inline const ::middle_layer_pb::PutSideLineParam& WorkMessageIssued::put_side_line_param() const {
  const ::middle_layer_pb::PutSideLineParam* p = put_side_line_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.put_side_line_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutSideLineParam*>(
      &::middle_layer_pb::_PutSideLineParam_default_instance_);
}
inline ::middle_layer_pb::PutSideLineParam* WorkMessageIssued::release_put_side_line_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.put_side_line_param)
  clear_has_put_side_line_param();
  ::middle_layer_pb::PutSideLineParam* temp = put_side_line_param_;
  put_side_line_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutSideLineParam* WorkMessageIssued::mutable_put_side_line_param() {
  set_has_put_side_line_param();
  if (put_side_line_param_ == NULL) {
    put_side_line_param_ = new ::middle_layer_pb::PutSideLineParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.put_side_line_param)
  return put_side_line_param_;
}
inline void WorkMessageIssued::set_allocated_put_side_line_param(::middle_layer_pb::PutSideLineParam* put_side_line_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_side_line_param_;
  }
  if (put_side_line_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_side_line_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_side_line_param, submessage_arena);
    }
    set_has_put_side_line_param();
  } else {
    clear_has_put_side_line_param();
  }
  put_side_line_param_ = put_side_line_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.put_side_line_param)
}

// optional .middle_layer_pb.DrawSideLineParam draw_side_line_param = 7;
inline bool WorkMessageIssued::has_draw_side_line_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkMessageIssued::set_has_draw_side_line_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkMessageIssued::clear_has_draw_side_line_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkMessageIssued::clear_draw_side_line_param() {
  if (draw_side_line_param_ != NULL) draw_side_line_param_->Clear();
  clear_has_draw_side_line_param();
}
inline const ::middle_layer_pb::DrawSideLineParam& WorkMessageIssued::draw_side_line_param() const {
  const ::middle_layer_pb::DrawSideLineParam* p = draw_side_line_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.draw_side_line_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawSideLineParam*>(
      &::middle_layer_pb::_DrawSideLineParam_default_instance_);
}
inline ::middle_layer_pb::DrawSideLineParam* WorkMessageIssued::release_draw_side_line_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.draw_side_line_param)
  clear_has_draw_side_line_param();
  ::middle_layer_pb::DrawSideLineParam* temp = draw_side_line_param_;
  draw_side_line_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawSideLineParam* WorkMessageIssued::mutable_draw_side_line_param() {
  set_has_draw_side_line_param();
  if (draw_side_line_param_ == NULL) {
    draw_side_line_param_ = new ::middle_layer_pb::DrawSideLineParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.draw_side_line_param)
  return draw_side_line_param_;
}
inline void WorkMessageIssued::set_allocated_draw_side_line_param(::middle_layer_pb::DrawSideLineParam* draw_side_line_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_side_line_param_;
  }
  if (draw_side_line_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_side_line_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_side_line_param, submessage_arena);
    }
    set_has_draw_side_line_param();
  } else {
    clear_has_draw_side_line_param();
  }
  draw_side_line_param_ = draw_side_line_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.draw_side_line_param)
}

// optional .middle_layer_pb.PutMidLineParam put_mid_line_param = 8;
inline bool WorkMessageIssued::has_put_mid_line_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorkMessageIssued::set_has_put_mid_line_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorkMessageIssued::clear_has_put_mid_line_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorkMessageIssued::clear_put_mid_line_param() {
  if (put_mid_line_param_ != NULL) put_mid_line_param_->Clear();
  clear_has_put_mid_line_param();
}
inline const ::middle_layer_pb::PutMidLineParam& WorkMessageIssued::put_mid_line_param() const {
  const ::middle_layer_pb::PutMidLineParam* p = put_mid_line_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.put_mid_line_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutMidLineParam*>(
      &::middle_layer_pb::_PutMidLineParam_default_instance_);
}
inline ::middle_layer_pb::PutMidLineParam* WorkMessageIssued::release_put_mid_line_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.put_mid_line_param)
  clear_has_put_mid_line_param();
  ::middle_layer_pb::PutMidLineParam* temp = put_mid_line_param_;
  put_mid_line_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutMidLineParam* WorkMessageIssued::mutable_put_mid_line_param() {
  set_has_put_mid_line_param();
  if (put_mid_line_param_ == NULL) {
    put_mid_line_param_ = new ::middle_layer_pb::PutMidLineParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.put_mid_line_param)
  return put_mid_line_param_;
}
inline void WorkMessageIssued::set_allocated_put_mid_line_param(::middle_layer_pb::PutMidLineParam* put_mid_line_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_mid_line_param_;
  }
  if (put_mid_line_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_mid_line_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_mid_line_param, submessage_arena);
    }
    set_has_put_mid_line_param();
  } else {
    clear_has_put_mid_line_param();
  }
  put_mid_line_param_ = put_mid_line_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.put_mid_line_param)
}

// optional .middle_layer_pb.DrawMidLineParam draw_mid_line_param = 9;
inline bool WorkMessageIssued::has_draw_mid_line_param() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorkMessageIssued::set_has_draw_mid_line_param() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorkMessageIssued::clear_has_draw_mid_line_param() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorkMessageIssued::clear_draw_mid_line_param() {
  if (draw_mid_line_param_ != NULL) draw_mid_line_param_->Clear();
  clear_has_draw_mid_line_param();
}
inline const ::middle_layer_pb::DrawMidLineParam& WorkMessageIssued::draw_mid_line_param() const {
  const ::middle_layer_pb::DrawMidLineParam* p = draw_mid_line_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.draw_mid_line_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawMidLineParam*>(
      &::middle_layer_pb::_DrawMidLineParam_default_instance_);
}
inline ::middle_layer_pb::DrawMidLineParam* WorkMessageIssued::release_draw_mid_line_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.draw_mid_line_param)
  clear_has_draw_mid_line_param();
  ::middle_layer_pb::DrawMidLineParam* temp = draw_mid_line_param_;
  draw_mid_line_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawMidLineParam* WorkMessageIssued::mutable_draw_mid_line_param() {
  set_has_draw_mid_line_param();
  if (draw_mid_line_param_ == NULL) {
    draw_mid_line_param_ = new ::middle_layer_pb::DrawMidLineParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.draw_mid_line_param)
  return draw_mid_line_param_;
}
inline void WorkMessageIssued::set_allocated_draw_mid_line_param(::middle_layer_pb::DrawMidLineParam* draw_mid_line_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_mid_line_param_;
  }
  if (draw_mid_line_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_mid_line_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_mid_line_param, submessage_arena);
    }
    set_has_draw_mid_line_param();
  } else {
    clear_has_draw_mid_line_param();
  }
  draw_mid_line_param_ = draw_mid_line_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.draw_mid_line_param)
}

// optional .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 10;
inline bool WorkMessageIssued::has_draw_standard_square_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorkMessageIssued::set_has_draw_standard_square_param() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorkMessageIssued::clear_has_draw_standard_square_param() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorkMessageIssued::clear_draw_standard_square_param() {
  if (draw_standard_square_param_ != NULL) draw_standard_square_param_->Clear();
  clear_has_draw_standard_square_param();
}
inline const ::middle_layer_pb::DrawStandardSquareParam& WorkMessageIssued::draw_standard_square_param() const {
  const ::middle_layer_pb::DrawStandardSquareParam* p = draw_standard_square_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.draw_standard_square_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStandardSquareParam*>(
      &::middle_layer_pb::_DrawStandardSquareParam_default_instance_);
}
inline ::middle_layer_pb::DrawStandardSquareParam* WorkMessageIssued::release_draw_standard_square_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.draw_standard_square_param)
  clear_has_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* temp = draw_standard_square_param_;
  draw_standard_square_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStandardSquareParam* WorkMessageIssued::mutable_draw_standard_square_param() {
  set_has_draw_standard_square_param();
  if (draw_standard_square_param_ == NULL) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.draw_standard_square_param)
  return draw_standard_square_param_;
}
inline void WorkMessageIssued::set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_standard_square_param_;
  }
  if (draw_standard_square_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_standard_square_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_standard_square_param, submessage_arena);
    }
    set_has_draw_standard_square_param();
  } else {
    clear_has_draw_standard_square_param();
  }
  draw_standard_square_param_ = draw_standard_square_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.draw_standard_square_param)
}

// optional .middle_layer_pb.PutLevellingParam put_levelling_param = 11;
inline bool WorkMessageIssued::has_put_levelling_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorkMessageIssued::set_has_put_levelling_param() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorkMessageIssued::clear_has_put_levelling_param() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorkMessageIssued::clear_put_levelling_param() {
  if (put_levelling_param_ != NULL) put_levelling_param_->Clear();
  clear_has_put_levelling_param();
}
inline const ::middle_layer_pb::PutLevellingParam& WorkMessageIssued::put_levelling_param() const {
  const ::middle_layer_pb::PutLevellingParam* p = put_levelling_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.put_levelling_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutLevellingParam*>(
      &::middle_layer_pb::_PutLevellingParam_default_instance_);
}
inline ::middle_layer_pb::PutLevellingParam* WorkMessageIssued::release_put_levelling_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.put_levelling_param)
  clear_has_put_levelling_param();
  ::middle_layer_pb::PutLevellingParam* temp = put_levelling_param_;
  put_levelling_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutLevellingParam* WorkMessageIssued::mutable_put_levelling_param() {
  set_has_put_levelling_param();
  if (put_levelling_param_ == NULL) {
    put_levelling_param_ = new ::middle_layer_pb::PutLevellingParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.put_levelling_param)
  return put_levelling_param_;
}
inline void WorkMessageIssued::set_allocated_put_levelling_param(::middle_layer_pb::PutLevellingParam* put_levelling_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_levelling_param_;
  }
  if (put_levelling_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_levelling_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_levelling_param, submessage_arena);
    }
    set_has_put_levelling_param();
  } else {
    clear_has_put_levelling_param();
  }
  put_levelling_param_ = put_levelling_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.put_levelling_param)
}

// optional .middle_layer_pb.PutLaneLineParam put_lane_line_param = 12;
inline bool WorkMessageIssued::has_put_lane_line_param() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorkMessageIssued::set_has_put_lane_line_param() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorkMessageIssued::clear_has_put_lane_line_param() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorkMessageIssued::clear_put_lane_line_param() {
  if (put_lane_line_param_ != NULL) put_lane_line_param_->Clear();
  clear_has_put_lane_line_param();
}
inline const ::middle_layer_pb::PutLaneLineParam& WorkMessageIssued::put_lane_line_param() const {
  const ::middle_layer_pb::PutLaneLineParam* p = put_lane_line_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.put_lane_line_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutLaneLineParam*>(
      &::middle_layer_pb::_PutLaneLineParam_default_instance_);
}
inline ::middle_layer_pb::PutLaneLineParam* WorkMessageIssued::release_put_lane_line_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.put_lane_line_param)
  clear_has_put_lane_line_param();
  ::middle_layer_pb::PutLaneLineParam* temp = put_lane_line_param_;
  put_lane_line_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutLaneLineParam* WorkMessageIssued::mutable_put_lane_line_param() {
  set_has_put_lane_line_param();
  if (put_lane_line_param_ == NULL) {
    put_lane_line_param_ = new ::middle_layer_pb::PutLaneLineParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.put_lane_line_param)
  return put_lane_line_param_;
}
inline void WorkMessageIssued::set_allocated_put_lane_line_param(::middle_layer_pb::PutLaneLineParam* put_lane_line_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_lane_line_param_;
  }
  if (put_lane_line_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_lane_line_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_lane_line_param, submessage_arena);
    }
    set_has_put_lane_line_param();
  } else {
    clear_has_put_lane_line_param();
  }
  put_lane_line_param_ = put_lane_line_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.put_lane_line_param)
}

// optional .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 13;
inline bool WorkMessageIssued::has_draw_stakes_help_param() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorkMessageIssued::set_has_draw_stakes_help_param() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorkMessageIssued::clear_has_draw_stakes_help_param() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorkMessageIssued::clear_draw_stakes_help_param() {
  if (draw_stakes_help_param_ != NULL) draw_stakes_help_param_->Clear();
  clear_has_draw_stakes_help_param();
}
inline const ::middle_layer_pb::DrawStakesHelpParam& WorkMessageIssued::draw_stakes_help_param() const {
  const ::middle_layer_pb::DrawStakesHelpParam* p = draw_stakes_help_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.draw_stakes_help_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStakesHelpParam*>(
      &::middle_layer_pb::_DrawStakesHelpParam_default_instance_);
}
inline ::middle_layer_pb::DrawStakesHelpParam* WorkMessageIssued::release_draw_stakes_help_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.draw_stakes_help_param)
  clear_has_draw_stakes_help_param();
  ::middle_layer_pb::DrawStakesHelpParam* temp = draw_stakes_help_param_;
  draw_stakes_help_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStakesHelpParam* WorkMessageIssued::mutable_draw_stakes_help_param() {
  set_has_draw_stakes_help_param();
  if (draw_stakes_help_param_ == NULL) {
    draw_stakes_help_param_ = new ::middle_layer_pb::DrawStakesHelpParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.draw_stakes_help_param)
  return draw_stakes_help_param_;
}
inline void WorkMessageIssued::set_allocated_draw_stakes_help_param(::middle_layer_pb::DrawStakesHelpParam* draw_stakes_help_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_stakes_help_param_;
  }
  if (draw_stakes_help_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_stakes_help_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_stakes_help_param, submessage_arena);
    }
    set_has_draw_stakes_help_param();
  } else {
    clear_has_draw_stakes_help_param();
  }
  draw_stakes_help_param_ = draw_stakes_help_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.draw_stakes_help_param)
}

// optional .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 14;
inline bool WorkMessageIssued::has_put_cross_section_param() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorkMessageIssued::set_has_put_cross_section_param() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorkMessageIssued::clear_has_put_cross_section_param() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorkMessageIssued::clear_put_cross_section_param() {
  if (put_cross_section_param_ != NULL) put_cross_section_param_->Clear();
  clear_has_put_cross_section_param();
}
inline const ::middle_layer_pb::PutCrossSectionParam& WorkMessageIssued::put_cross_section_param() const {
  const ::middle_layer_pb::PutCrossSectionParam* p = put_cross_section_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssued.put_cross_section_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutCrossSectionParam*>(
      &::middle_layer_pb::_PutCrossSectionParam_default_instance_);
}
inline ::middle_layer_pb::PutCrossSectionParam* WorkMessageIssued::release_put_cross_section_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssued.put_cross_section_param)
  clear_has_put_cross_section_param();
  ::middle_layer_pb::PutCrossSectionParam* temp = put_cross_section_param_;
  put_cross_section_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutCrossSectionParam* WorkMessageIssued::mutable_put_cross_section_param() {
  set_has_put_cross_section_param();
  if (put_cross_section_param_ == NULL) {
    put_cross_section_param_ = new ::middle_layer_pb::PutCrossSectionParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssued.put_cross_section_param)
  return put_cross_section_param_;
}
inline void WorkMessageIssued::set_allocated_put_cross_section_param(::middle_layer_pb::PutCrossSectionParam* put_cross_section_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_cross_section_param_;
  }
  if (put_cross_section_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_cross_section_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_cross_section_param, submessage_arena);
    }
    set_has_put_cross_section_param();
  } else {
    clear_has_put_cross_section_param();
  }
  put_cross_section_param_ = put_cross_section_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssued.put_cross_section_param)
}

// -------------------------------------------------------------------

// WorkMessageIssuedRes

// required .middle_layer_pb.ErrorCode code = 1;
inline bool WorkMessageIssuedRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkMessageIssuedRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkMessageIssuedRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkMessageIssuedRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode WorkMessageIssuedRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssuedRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void WorkMessageIssuedRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.WorkMessageIssuedRes.code)
}

// optional .middle_layer_pb.DeviceTask device_task = 2;
inline bool WorkMessageIssuedRes::has_device_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkMessageIssuedRes::set_has_device_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkMessageIssuedRes::clear_has_device_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkMessageIssuedRes::clear_device_task() {
  if (device_task_ != NULL) device_task_->Clear();
  clear_has_device_task();
}
inline const ::middle_layer_pb::DeviceTask& WorkMessageIssuedRes::device_task() const {
  const ::middle_layer_pb::DeviceTask* p = device_task_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkMessageIssuedRes.device_task)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DeviceTask*>(
      &::middle_layer_pb::_DeviceTask_default_instance_);
}
inline ::middle_layer_pb::DeviceTask* WorkMessageIssuedRes::release_device_task() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkMessageIssuedRes.device_task)
  clear_has_device_task();
  ::middle_layer_pb::DeviceTask* temp = device_task_;
  device_task_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DeviceTask* WorkMessageIssuedRes::mutable_device_task() {
  set_has_device_task();
  if (device_task_ == NULL) {
    device_task_ = new ::middle_layer_pb::DeviceTask;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkMessageIssuedRes.device_task)
  return device_task_;
}
inline void WorkMessageIssuedRes::set_allocated_device_task(::middle_layer_pb::DeviceTask* device_task) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete device_task_;
  }
  if (device_task) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_task = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_task, submessage_arena);
    }
    set_has_device_task();
  } else {
    clear_has_device_task();
  }
  device_task_ = device_task;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkMessageIssuedRes.device_task)
}

// -------------------------------------------------------------------

// DeviceTask

// required string task_code = 1;
inline bool DeviceTask::has_task_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceTask::set_has_task_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceTask::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceTask::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& DeviceTask::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DeviceTask.task_code)
  return task_code_.GetNoArena();
}
inline void DeviceTask::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.DeviceTask.task_code)
}
#if LANG_CXX11
inline void DeviceTask::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.DeviceTask.task_code)
}
#endif
inline void DeviceTask::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.DeviceTask.task_code)
}
inline void DeviceTask::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.DeviceTask.task_code)
}
inline ::std::string* DeviceTask::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.DeviceTask.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceTask::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.DeviceTask.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceTask::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.DeviceTask.task_code)
}

// required string start_stake = 3;
inline bool DeviceTask::has_start_stake() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceTask::set_has_start_stake() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceTask::clear_has_start_stake() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceTask::clear_start_stake() {
  start_stake_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_stake();
}
inline const ::std::string& DeviceTask::start_stake() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DeviceTask.start_stake)
  return start_stake_.GetNoArena();
}
inline void DeviceTask::set_start_stake(const ::std::string& value) {
  set_has_start_stake();
  start_stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.DeviceTask.start_stake)
}
#if LANG_CXX11
inline void DeviceTask::set_start_stake(::std::string&& value) {
  set_has_start_stake();
  start_stake_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.DeviceTask.start_stake)
}
#endif
inline void DeviceTask::set_start_stake(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_start_stake();
  start_stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.DeviceTask.start_stake)
}
inline void DeviceTask::set_start_stake(const char* value, size_t size) {
  set_has_start_stake();
  start_stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.DeviceTask.start_stake)
}
inline ::std::string* DeviceTask::mutable_start_stake() {
  set_has_start_stake();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.DeviceTask.start_stake)
  return start_stake_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceTask::release_start_stake() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.DeviceTask.start_stake)
  clear_has_start_stake();
  return start_stake_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceTask::set_allocated_start_stake(::std::string* start_stake) {
  if (start_stake != NULL) {
    set_has_start_stake();
  } else {
    clear_has_start_stake();
  }
  start_stake_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_stake);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.DeviceTask.start_stake)
}

// required string end_stake = 4;
inline bool DeviceTask::has_end_stake() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceTask::set_has_end_stake() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceTask::clear_has_end_stake() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceTask::clear_end_stake() {
  end_stake_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_end_stake();
}
inline const ::std::string& DeviceTask::end_stake() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DeviceTask.end_stake)
  return end_stake_.GetNoArena();
}
inline void DeviceTask::set_end_stake(const ::std::string& value) {
  set_has_end_stake();
  end_stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.DeviceTask.end_stake)
}
#if LANG_CXX11
inline void DeviceTask::set_end_stake(::std::string&& value) {
  set_has_end_stake();
  end_stake_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.DeviceTask.end_stake)
}
#endif
inline void DeviceTask::set_end_stake(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_end_stake();
  end_stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.DeviceTask.end_stake)
}
inline void DeviceTask::set_end_stake(const char* value, size_t size) {
  set_has_end_stake();
  end_stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.DeviceTask.end_stake)
}
inline ::std::string* DeviceTask::mutable_end_stake() {
  set_has_end_stake();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.DeviceTask.end_stake)
  return end_stake_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceTask::release_end_stake() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.DeviceTask.end_stake)
  clear_has_end_stake();
  return end_stake_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceTask::set_allocated_end_stake(::std::string* end_stake) {
  if (end_stake != NULL) {
    set_has_end_stake();
  } else {
    clear_has_end_stake();
  }
  end_stake_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_stake);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.DeviceTask.end_stake)
}

// required int64 start_time = 5;
inline bool DeviceTask::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeviceTask::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeviceTask::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeviceTask::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 DeviceTask::start_time() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DeviceTask.start_time)
  return start_time_;
}
inline void DeviceTask::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DeviceTask.start_time)
}

// required int64 end_time = 6;
inline bool DeviceTask::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeviceTask::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeviceTask::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeviceTask::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 DeviceTask::end_time() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DeviceTask.end_time)
  return end_time_;
}
inline void DeviceTask::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DeviceTask.end_time)
}

// required int32 status = 7;
inline bool DeviceTask::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeviceTask::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeviceTask::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeviceTask::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DeviceTask::status() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DeviceTask.status)
  return status_;
}
inline void DeviceTask::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DeviceTask.status)
}

// -------------------------------------------------------------------

// StakeDto

// required string stake = 1;
inline bool StakeDto::has_stake() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StakeDto::set_has_stake() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StakeDto::clear_has_stake() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StakeDto::clear_stake() {
  stake_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stake();
}
inline const ::std::string& StakeDto::stake() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDto.stake)
  return stake_.GetNoArena();
}
inline void StakeDto::set_stake(const ::std::string& value) {
  set_has_stake();
  stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDto.stake)
}
#if LANG_CXX11
inline void StakeDto::set_stake(::std::string&& value) {
  set_has_stake();
  stake_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.StakeDto.stake)
}
#endif
inline void StakeDto::set_stake(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stake();
  stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.StakeDto.stake)
}
inline void StakeDto::set_stake(const char* value, size_t size) {
  set_has_stake();
  stake_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.StakeDto.stake)
}
inline ::std::string* StakeDto::mutable_stake() {
  set_has_stake();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.StakeDto.stake)
  return stake_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StakeDto::release_stake() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.StakeDto.stake)
  clear_has_stake();
  return stake_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StakeDto::set_allocated_stake(::std::string* stake) {
  if (stake != NULL) {
    set_has_stake();
  } else {
    clear_has_stake();
  }
  stake_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stake);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.StakeDto.stake)
}

// required double x = 4;
inline bool StakeDto::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StakeDto::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StakeDto::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StakeDto::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double StakeDto::x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDto.x)
  return x_;
}
inline void StakeDto::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDto.x)
}

// required double y = 5;
inline bool StakeDto::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StakeDto::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StakeDto::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StakeDto::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double StakeDto::y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDto.y)
  return y_;
}
inline void StakeDto::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDto.y)
}

// required double Z = 6;
inline bool StakeDto::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StakeDto::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StakeDto::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StakeDto::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double StakeDto::z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDto.Z)
  return z_;
}
inline void StakeDto::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDto.Z)
}

// required double ground = 8;
inline bool StakeDto::has_ground() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StakeDto::set_has_ground() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StakeDto::clear_has_ground() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StakeDto::clear_ground() {
  ground_ = 0;
  clear_has_ground();
}
inline double StakeDto::ground() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDto.ground)
  return ground_;
}
inline void StakeDto::set_ground(double value) {
  set_has_ground();
  ground_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDto.ground)
}

// required double angle = 9;
inline bool StakeDto::has_angle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StakeDto::set_has_angle() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StakeDto::clear_has_angle() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StakeDto::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline double StakeDto::angle() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDto.angle)
  return angle_;
}
inline void StakeDto::set_angle(double value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDto.angle)
}

// -------------------------------------------------------------------

// StakeDtoList

// repeated .middle_layer_pb.StakeDto stake_dto_list = 7;
inline int StakeDtoList::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void StakeDtoList::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& StakeDtoList::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDtoList.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* StakeDtoList::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.StakeDtoList.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* StakeDtoList::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.StakeDtoList.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
StakeDtoList::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.StakeDtoList.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
StakeDtoList::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.StakeDtoList.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// StakeInfo

// repeated .middle_layer_pb.StakeDto stake = 1;
inline int StakeInfo::stake_size() const {
  return stake_.size();
}
inline void StakeInfo::clear_stake() {
  stake_.Clear();
}
inline const ::middle_layer_pb::StakeDto& StakeInfo::stake(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeInfo.stake)
  return stake_.Get(index);
}
inline ::middle_layer_pb::StakeDto* StakeInfo::mutable_stake(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.StakeInfo.stake)
  return stake_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* StakeInfo::add_stake() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.StakeInfo.stake)
  return stake_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
StakeInfo::mutable_stake() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.StakeInfo.stake)
  return &stake_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
StakeInfo::stake() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.StakeInfo.stake)
  return stake_;
}

// repeated string stop_line = 2;
inline int StakeInfo::stop_line_size() const {
  return stop_line_.size();
}
inline void StakeInfo::clear_stop_line() {
  stop_line_.Clear();
}
inline const ::std::string& StakeInfo::stop_line(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeInfo.stop_line)
  return stop_line_.Get(index);
}
inline ::std::string* StakeInfo::mutable_stop_line(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.StakeInfo.stop_line)
  return stop_line_.Mutable(index);
}
inline void StakeInfo::set_stop_line(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeInfo.stop_line)
  stop_line_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StakeInfo::set_stop_line(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeInfo.stop_line)
  stop_line_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StakeInfo::set_stop_line(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stop_line_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.StakeInfo.stop_line)
}
inline void StakeInfo::set_stop_line(int index, const char* value, size_t size) {
  stop_line_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.StakeInfo.stop_line)
}
inline ::std::string* StakeInfo::add_stop_line() {
  // @@protoc_insertion_point(field_add_mutable:middle_layer_pb.StakeInfo.stop_line)
  return stop_line_.Add();
}
inline void StakeInfo::add_stop_line(const ::std::string& value) {
  stop_line_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:middle_layer_pb.StakeInfo.stop_line)
}
#if LANG_CXX11
inline void StakeInfo::add_stop_line(::std::string&& value) {
  stop_line_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:middle_layer_pb.StakeInfo.stop_line)
}
#endif
inline void StakeInfo::add_stop_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stop_line_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:middle_layer_pb.StakeInfo.stop_line)
}
inline void StakeInfo::add_stop_line(const char* value, size_t size) {
  stop_line_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:middle_layer_pb.StakeInfo.stop_line)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StakeInfo::stop_line() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.StakeInfo.stop_line)
  return stop_line_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StakeInfo::mutable_stop_line() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.StakeInfo.stop_line)
  return &stop_line_;
}

// -------------------------------------------------------------------

// StakeDtoListReq

// required int32 section_index = 1;
inline bool StakeDtoListReq::has_section_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StakeDtoListReq::set_has_section_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StakeDtoListReq::clear_has_section_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StakeDtoListReq::clear_section_index() {
  section_index_ = 0;
  clear_has_section_index();
}
inline ::google::protobuf::int32 StakeDtoListReq::section_index() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDtoListReq.section_index)
  return section_index_;
}
inline void StakeDtoListReq::set_section_index(::google::protobuf::int32 value) {
  set_has_section_index();
  section_index_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDtoListReq.section_index)
}

// required .middle_layer_pb.WorkType work_type = 2;
inline bool StakeDtoListReq::has_work_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StakeDtoListReq::set_has_work_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StakeDtoListReq::clear_has_work_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StakeDtoListReq::clear_work_type() {
  work_type_ = 1;
  clear_has_work_type();
}
inline ::middle_layer_pb::WorkType StakeDtoListReq::work_type() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDtoListReq.work_type)
  return static_cast< ::middle_layer_pb::WorkType >(work_type_);
}
inline void StakeDtoListReq::set_work_type(::middle_layer_pb::WorkType value) {
  assert(::middle_layer_pb::WorkType_IsValid(value));
  set_has_work_type();
  work_type_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDtoListReq.work_type)
}

// repeated .middle_layer_pb.StakeInfo stake_info = 3;
inline int StakeDtoListReq::stake_info_size() const {
  return stake_info_.size();
}
inline void StakeDtoListReq::clear_stake_info() {
  stake_info_.Clear();
}
inline const ::middle_layer_pb::StakeInfo& StakeDtoListReq::stake_info(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDtoListReq.stake_info)
  return stake_info_.Get(index);
}
inline ::middle_layer_pb::StakeInfo* StakeDtoListReq::mutable_stake_info(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.StakeDtoListReq.stake_info)
  return stake_info_.Mutable(index);
}
inline ::middle_layer_pb::StakeInfo* StakeDtoListReq::add_stake_info() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.StakeDtoListReq.stake_info)
  return stake_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeInfo >*
StakeDtoListReq::mutable_stake_info() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.StakeDtoListReq.stake_info)
  return &stake_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeInfo >&
StakeDtoListReq::stake_info() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.StakeDtoListReq.stake_info)
  return stake_info_;
}

// -------------------------------------------------------------------

// StakeDtoListRes

// required .middle_layer_pb.ErrorCode code = 1;
inline bool StakeDtoListRes::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StakeDtoListRes::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StakeDtoListRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StakeDtoListRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode StakeDtoListRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDtoListRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void StakeDtoListRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDtoListRes.code)
}

// required int32 section_index = 2;
inline bool StakeDtoListRes::has_section_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StakeDtoListRes::set_has_section_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StakeDtoListRes::clear_has_section_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StakeDtoListRes::clear_section_index() {
  section_index_ = 0;
  clear_has_section_index();
}
inline ::google::protobuf::int32 StakeDtoListRes::section_index() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.StakeDtoListRes.section_index)
  return section_index_;
}
inline void StakeDtoListRes::set_section_index(::google::protobuf::int32 value) {
  set_has_section_index();
  section_index_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.StakeDtoListRes.section_index)
}

// -------------------------------------------------------------------

// PutSideLineParam

// required int32 lc_spacing = 1;
inline bool PutSideLineParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutSideLineParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutSideLineParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutSideLineParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 PutSideLineParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutSideLineParam.lc_spacing)
  return lc_spacing_;
}
inline void PutSideLineParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutSideLineParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool PutSideLineParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutSideLineParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutSideLineParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutSideLineParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 PutSideLineParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutSideLineParam.measuring_spacing)
  return measuring_spacing_;
}
inline void PutSideLineParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutSideLineParam.measuring_spacing)
}

// required int32 side = 3;
inline bool PutSideLineParam::has_side() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutSideLineParam::set_has_side() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutSideLineParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutSideLineParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 PutSideLineParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutSideLineParam.side)
  return side_;
}
inline void PutSideLineParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutSideLineParam.side)
}

// required int32 safety_offset = 4;
inline bool PutSideLineParam::has_safety_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PutSideLineParam::set_has_safety_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PutSideLineParam::clear_has_safety_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PutSideLineParam::clear_safety_offset() {
  safety_offset_ = 0;
  clear_has_safety_offset();
}
inline ::google::protobuf::int32 PutSideLineParam::safety_offset() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutSideLineParam.safety_offset)
  return safety_offset_;
}
inline void PutSideLineParam::set_safety_offset(::google::protobuf::int32 value) {
  set_has_safety_offset();
  safety_offset_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutSideLineParam.safety_offset)
}

// -------------------------------------------------------------------

// PutMidLineParam

// required int32 lcSpacing = 1;
inline bool PutMidLineParam::has_lcspacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutMidLineParam::set_has_lcspacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutMidLineParam::clear_has_lcspacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutMidLineParam::clear_lcspacing() {
  lcspacing_ = 0;
  clear_has_lcspacing();
}
inline ::google::protobuf::int32 PutMidLineParam::lcspacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutMidLineParam.lcSpacing)
  return lcspacing_;
}
inline void PutMidLineParam::set_lcspacing(::google::protobuf::int32 value) {
  set_has_lcspacing();
  lcspacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutMidLineParam.lcSpacing)
}

// required int32 measuringSpacing = 2;
inline bool PutMidLineParam::has_measuringspacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutMidLineParam::set_has_measuringspacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutMidLineParam::clear_has_measuringspacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutMidLineParam::clear_measuringspacing() {
  measuringspacing_ = 0;
  clear_has_measuringspacing();
}
inline ::google::protobuf::int32 PutMidLineParam::measuringspacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutMidLineParam.measuringSpacing)
  return measuringspacing_;
}
inline void PutMidLineParam::set_measuringspacing(::google::protobuf::int32 value) {
  set_has_measuringspacing();
  measuringspacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutMidLineParam.measuringSpacing)
}

// -------------------------------------------------------------------

// PutLevellingParam

// required int32 lc_spacing = 1;
inline bool PutLevellingParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutLevellingParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutLevellingParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutLevellingParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 PutLevellingParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.lc_spacing)
  return lc_spacing_;
}
inline void PutLevellingParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool PutLevellingParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutLevellingParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutLevellingParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutLevellingParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 PutLevellingParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.measuring_spacing)
  return measuring_spacing_;
}
inline void PutLevellingParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.measuring_spacing)
}

// required int32 side = 3;
inline bool PutLevellingParam::has_side() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutLevellingParam::set_has_side() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutLevellingParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutLevellingParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 PutLevellingParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.side)
  return side_;
}
inline void PutLevellingParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.side)
}

// required int32 levelling_num = 4;
inline bool PutLevellingParam::has_levelling_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PutLevellingParam::set_has_levelling_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PutLevellingParam::clear_has_levelling_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PutLevellingParam::clear_levelling_num() {
  levelling_num_ = 0;
  clear_has_levelling_num();
}
inline ::google::protobuf::int32 PutLevellingParam::levelling_num() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.levelling_num)
  return levelling_num_;
}
inline void PutLevellingParam::set_levelling_num(::google::protobuf::int32 value) {
  set_has_levelling_num();
  levelling_num_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.levelling_num)
}

// required double press_coefficient = 5;
inline bool PutLevellingParam::has_press_coefficient() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PutLevellingParam::set_has_press_coefficient() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PutLevellingParam::clear_has_press_coefficient() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PutLevellingParam::clear_press_coefficient() {
  press_coefficient_ = 0;
  clear_has_press_coefficient();
}
inline double PutLevellingParam::press_coefficient() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.press_coefficient)
  return press_coefficient_;
}
inline void PutLevellingParam::set_press_coefficient(double value) {
  set_has_press_coefficient();
  press_coefficient_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.press_coefficient)
}

// required double point_density = 6;
inline bool PutLevellingParam::has_point_density() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PutLevellingParam::set_has_point_density() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PutLevellingParam::clear_has_point_density() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PutLevellingParam::clear_point_density() {
  point_density_ = 0;
  clear_has_point_density();
}
inline double PutLevellingParam::point_density() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.point_density)
  return point_density_;
}
inline void PutLevellingParam::set_point_density(double value) {
  set_has_point_density();
  point_density_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.point_density)
}

// required double Layer_thickness = 7;
inline bool PutLevellingParam::has_layer_thickness() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PutLevellingParam::set_has_layer_thickness() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PutLevellingParam::clear_has_layer_thickness() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PutLevellingParam::clear_layer_thickness() {
  layer_thickness_ = 0;
  clear_has_layer_thickness();
}
inline double PutLevellingParam::layer_thickness() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.Layer_thickness)
  return layer_thickness_;
}
inline void PutLevellingParam::set_layer_thickness(double value) {
  set_has_layer_thickness();
  layer_thickness_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.Layer_thickness)
}

// required double total_thickness = 8;
inline bool PutLevellingParam::has_total_thickness() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PutLevellingParam::set_has_total_thickness() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PutLevellingParam::clear_has_total_thickness() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PutLevellingParam::clear_total_thickness() {
  total_thickness_ = 0;
  clear_has_total_thickness();
}
inline double PutLevellingParam::total_thickness() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.total_thickness)
  return total_thickness_;
}
inline void PutLevellingParam::set_total_thickness(double value) {
  set_has_total_thickness();
  total_thickness_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.total_thickness)
}

// required int32 safety_offset = 9;
inline bool PutLevellingParam::has_safety_offset() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PutLevellingParam::set_has_safety_offset() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PutLevellingParam::clear_has_safety_offset() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PutLevellingParam::clear_safety_offset() {
  safety_offset_ = 0;
  clear_has_safety_offset();
}
inline ::google::protobuf::int32 PutLevellingParam::safety_offset() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLevellingParam.safety_offset)
  return safety_offset_;
}
inline void PutLevellingParam::set_safety_offset(::google::protobuf::int32 value) {
  set_has_safety_offset();
  safety_offset_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLevellingParam.safety_offset)
}

// -------------------------------------------------------------------

// PutLaneLineParam

// required int32 lc_spacing = 1;
inline bool PutLaneLineParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutLaneLineParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutLaneLineParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutLaneLineParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 PutLaneLineParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLaneLineParam.lc_spacing)
  return lc_spacing_;
}
inline void PutLaneLineParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLaneLineParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool PutLaneLineParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutLaneLineParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutLaneLineParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutLaneLineParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 PutLaneLineParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLaneLineParam.measuring_spacing)
  return measuring_spacing_;
}
inline void PutLaneLineParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLaneLineParam.measuring_spacing)
}

// required int32 side = 3;
inline bool PutLaneLineParam::has_side() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutLaneLineParam::set_has_side() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutLaneLineParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutLaneLineParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 PutLaneLineParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLaneLineParam.side)
  return side_;
}
inline void PutLaneLineParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLaneLineParam.side)
}

// required int32 lane_num = 4;
inline bool PutLaneLineParam::has_lane_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PutLaneLineParam::set_has_lane_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PutLaneLineParam::clear_has_lane_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PutLaneLineParam::clear_lane_num() {
  lane_num_ = 0;
  clear_has_lane_num();
}
inline ::google::protobuf::int32 PutLaneLineParam::lane_num() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutLaneLineParam.lane_num)
  return lane_num_;
}
inline void PutLaneLineParam::set_lane_num(::google::protobuf::int32 value) {
  set_has_lane_num();
  lane_num_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutLaneLineParam.lane_num)
}

// -------------------------------------------------------------------

// PutCrossSectionParam

// required int32 lc_spacing = 1;
inline bool PutCrossSectionParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutCrossSectionParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutCrossSectionParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutCrossSectionParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 PutCrossSectionParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutCrossSectionParam.lc_spacing)
  return lc_spacing_;
}
inline void PutCrossSectionParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutCrossSectionParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool PutCrossSectionParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutCrossSectionParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutCrossSectionParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutCrossSectionParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 PutCrossSectionParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutCrossSectionParam.measuring_spacing)
  return measuring_spacing_;
}
inline void PutCrossSectionParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutCrossSectionParam.measuring_spacing)
}

// required int32 side = 3;
inline bool PutCrossSectionParam::has_side() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PutCrossSectionParam::set_has_side() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PutCrossSectionParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PutCrossSectionParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 PutCrossSectionParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutCrossSectionParam.side)
  return side_;
}
inline void PutCrossSectionParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutCrossSectionParam.side)
}

// required double point_density = 4;
inline bool PutCrossSectionParam::has_point_density() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutCrossSectionParam::set_has_point_density() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutCrossSectionParam::clear_has_point_density() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutCrossSectionParam::clear_point_density() {
  point_density_ = 0;
  clear_has_point_density();
}
inline double PutCrossSectionParam::point_density() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PutCrossSectionParam.point_density)
  return point_density_;
}
inline void PutCrossSectionParam::set_point_density(double value) {
  set_has_point_density();
  point_density_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PutCrossSectionParam.point_density)
}

// -------------------------------------------------------------------

// DrawStandardSquareParam

// required int32 lc_spacing = 1;
inline bool DrawStandardSquareParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrawStandardSquareParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DrawStandardSquareParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DrawStandardSquareParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 DrawStandardSquareParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.lc_spacing)
  return lc_spacing_;
}
inline void DrawStandardSquareParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool DrawStandardSquareParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawStandardSquareParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawStandardSquareParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawStandardSquareParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 DrawStandardSquareParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.measuring_spacing)
  return measuring_spacing_;
}
inline void DrawStandardSquareParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.measuring_spacing)
}

// required int32 side = 3;
inline bool DrawStandardSquareParam::has_side() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DrawStandardSquareParam::set_has_side() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DrawStandardSquareParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DrawStandardSquareParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 DrawStandardSquareParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.side)
  return side_;
}
inline void DrawStandardSquareParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.side)
}

// required double square_length = 4;
inline bool DrawStandardSquareParam::has_square_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DrawStandardSquareParam::set_has_square_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DrawStandardSquareParam::clear_has_square_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DrawStandardSquareParam::clear_square_length() {
  square_length_ = 0;
  clear_has_square_length();
}
inline double DrawStandardSquareParam::square_length() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.square_length)
  return square_length_;
}
inline void DrawStandardSquareParam::set_square_length(double value) {
  set_has_square_length();
  square_length_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.square_length)
}

// required double square_width = 5;
inline bool DrawStandardSquareParam::has_square_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DrawStandardSquareParam::set_has_square_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DrawStandardSquareParam::clear_has_square_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DrawStandardSquareParam::clear_square_width() {
  square_width_ = 0;
  clear_has_square_width();
}
inline double DrawStandardSquareParam::square_width() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.square_width)
  return square_width_;
}
inline void DrawStandardSquareParam::set_square_width(double value) {
  set_has_square_width();
  square_width_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.square_width)
}

// required int32 square_row = 6;
inline bool DrawStandardSquareParam::has_square_row() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DrawStandardSquareParam::set_has_square_row() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DrawStandardSquareParam::clear_has_square_row() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DrawStandardSquareParam::clear_square_row() {
  square_row_ = 0;
  clear_has_square_row();
}
inline ::google::protobuf::int32 DrawStandardSquareParam::square_row() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.square_row)
  return square_row_;
}
inline void DrawStandardSquareParam::set_square_row(::google::protobuf::int32 value) {
  set_has_square_row();
  square_row_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.square_row)
}

// required int32 square_columns = 7;
inline bool DrawStandardSquareParam::has_square_columns() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DrawStandardSquareParam::set_has_square_columns() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DrawStandardSquareParam::clear_has_square_columns() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DrawStandardSquareParam::clear_square_columns() {
  square_columns_ = 0;
  clear_has_square_columns();
}
inline ::google::protobuf::int32 DrawStandardSquareParam::square_columns() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.square_columns)
  return square_columns_;
}
inline void DrawStandardSquareParam::set_square_columns(::google::protobuf::int32 value) {
  set_has_square_columns();
  square_columns_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.square_columns)
}

// required double require_earthwork = 8;
inline bool DrawStandardSquareParam::has_require_earthwork() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DrawStandardSquareParam::set_has_require_earthwork() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DrawStandardSquareParam::clear_has_require_earthwork() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DrawStandardSquareParam::clear_require_earthwork() {
  require_earthwork_ = 0;
  clear_has_require_earthwork();
}
inline double DrawStandardSquareParam::require_earthwork() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.require_earthwork)
  return require_earthwork_;
}
inline void DrawStandardSquareParam::set_require_earthwork(double value) {
  set_has_require_earthwork();
  require_earthwork_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.require_earthwork)
}

// required double fill_dig_height = 9;
inline bool DrawStandardSquareParam::has_fill_dig_height() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DrawStandardSquareParam::set_has_fill_dig_height() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DrawStandardSquareParam::clear_has_fill_dig_height() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DrawStandardSquareParam::clear_fill_dig_height() {
  fill_dig_height_ = 0;
  clear_has_fill_dig_height();
}
inline double DrawStandardSquareParam::fill_dig_height() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.fill_dig_height)
  return fill_dig_height_;
}
inline void DrawStandardSquareParam::set_fill_dig_height(double value) {
  set_has_fill_dig_height();
  fill_dig_height_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.fill_dig_height)
}

// required int32 safety_offset = 10;
inline bool DrawStandardSquareParam::has_safety_offset() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DrawStandardSquareParam::set_has_safety_offset() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DrawStandardSquareParam::clear_has_safety_offset() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DrawStandardSquareParam::clear_safety_offset() {
  safety_offset_ = 0;
  clear_has_safety_offset();
}
inline ::google::protobuf::int32 DrawStandardSquareParam::safety_offset() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStandardSquareParam.safety_offset)
  return safety_offset_;
}
inline void DrawStandardSquareParam::set_safety_offset(::google::protobuf::int32 value) {
  set_has_safety_offset();
  safety_offset_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStandardSquareParam.safety_offset)
}

// -------------------------------------------------------------------

// DrawSideLineParam

// required int32 lc_spacing = 1;
inline bool DrawSideLineParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrawSideLineParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DrawSideLineParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DrawSideLineParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 DrawSideLineParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawSideLineParam.lc_spacing)
  return lc_spacing_;
}
inline void DrawSideLineParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawSideLineParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool DrawSideLineParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawSideLineParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawSideLineParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawSideLineParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 DrawSideLineParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawSideLineParam.measuring_spacing)
  return measuring_spacing_;
}
inline void DrawSideLineParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawSideLineParam.measuring_spacing)
}

// required int32 side = 3;
inline bool DrawSideLineParam::has_side() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DrawSideLineParam::set_has_side() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DrawSideLineParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DrawSideLineParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 DrawSideLineParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawSideLineParam.side)
  return side_;
}
inline void DrawSideLineParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawSideLineParam.side)
}

// required int32 safety_offset = 4;
inline bool DrawSideLineParam::has_safety_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DrawSideLineParam::set_has_safety_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DrawSideLineParam::clear_has_safety_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DrawSideLineParam::clear_safety_offset() {
  safety_offset_ = 0;
  clear_has_safety_offset();
}
inline ::google::protobuf::int32 DrawSideLineParam::safety_offset() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawSideLineParam.safety_offset)
  return safety_offset_;
}
inline void DrawSideLineParam::set_safety_offset(::google::protobuf::int32 value) {
  set_has_safety_offset();
  safety_offset_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawSideLineParam.safety_offset)
}

// -------------------------------------------------------------------

// DrawMidLineParam

// required int32 lcSpacing = 1;
inline bool DrawMidLineParam::has_lcspacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrawMidLineParam::set_has_lcspacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DrawMidLineParam::clear_has_lcspacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DrawMidLineParam::clear_lcspacing() {
  lcspacing_ = 0;
  clear_has_lcspacing();
}
inline ::google::protobuf::int32 DrawMidLineParam::lcspacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawMidLineParam.lcSpacing)
  return lcspacing_;
}
inline void DrawMidLineParam::set_lcspacing(::google::protobuf::int32 value) {
  set_has_lcspacing();
  lcspacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawMidLineParam.lcSpacing)
}

// required int32 measuringSpacing = 2;
inline bool DrawMidLineParam::has_measuringspacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawMidLineParam::set_has_measuringspacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawMidLineParam::clear_has_measuringspacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawMidLineParam::clear_measuringspacing() {
  measuringspacing_ = 0;
  clear_has_measuringspacing();
}
inline ::google::protobuf::int32 DrawMidLineParam::measuringspacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawMidLineParam.measuringSpacing)
  return measuringspacing_;
}
inline void DrawMidLineParam::set_measuringspacing(::google::protobuf::int32 value) {
  set_has_measuringspacing();
  measuringspacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawMidLineParam.measuringSpacing)
}

// -------------------------------------------------------------------

// DrawStakesHelpParam

// required int32 lc_spacing = 1;
inline bool DrawStakesHelpParam::has_lc_spacing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrawStakesHelpParam::set_has_lc_spacing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DrawStakesHelpParam::clear_has_lc_spacing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DrawStakesHelpParam::clear_lc_spacing() {
  lc_spacing_ = 0;
  clear_has_lc_spacing();
}
inline ::google::protobuf::int32 DrawStakesHelpParam::lc_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.lc_spacing)
  return lc_spacing_;
}
inline void DrawStakesHelpParam::set_lc_spacing(::google::protobuf::int32 value) {
  set_has_lc_spacing();
  lc_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.lc_spacing)
}

// required int32 measuring_spacing = 2;
inline bool DrawStakesHelpParam::has_measuring_spacing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrawStakesHelpParam::set_has_measuring_spacing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DrawStakesHelpParam::clear_has_measuring_spacing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DrawStakesHelpParam::clear_measuring_spacing() {
  measuring_spacing_ = 0;
  clear_has_measuring_spacing();
}
inline ::google::protobuf::int32 DrawStakesHelpParam::measuring_spacing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.measuring_spacing)
  return measuring_spacing_;
}
inline void DrawStakesHelpParam::set_measuring_spacing(::google::protobuf::int32 value) {
  set_has_measuring_spacing();
  measuring_spacing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.measuring_spacing)
}

// required int32 side = 3;
inline bool DrawStakesHelpParam::has_side() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DrawStakesHelpParam::set_has_side() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DrawStakesHelpParam::clear_has_side() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DrawStakesHelpParam::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 DrawStakesHelpParam::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.side)
  return side_;
}
inline void DrawStakesHelpParam::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.side)
}

// required int32 levelling_num = 4;
inline bool DrawStakesHelpParam::has_levelling_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DrawStakesHelpParam::set_has_levelling_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DrawStakesHelpParam::clear_has_levelling_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DrawStakesHelpParam::clear_levelling_num() {
  levelling_num_ = 0;
  clear_has_levelling_num();
}
inline ::google::protobuf::int32 DrawStakesHelpParam::levelling_num() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.levelling_num)
  return levelling_num_;
}
inline void DrawStakesHelpParam::set_levelling_num(::google::protobuf::int32 value) {
  set_has_levelling_num();
  levelling_num_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.levelling_num)
}

// required double press_coefficient = 5;
inline bool DrawStakesHelpParam::has_press_coefficient() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DrawStakesHelpParam::set_has_press_coefficient() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DrawStakesHelpParam::clear_has_press_coefficient() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DrawStakesHelpParam::clear_press_coefficient() {
  press_coefficient_ = 0;
  clear_has_press_coefficient();
}
inline double DrawStakesHelpParam::press_coefficient() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.press_coefficient)
  return press_coefficient_;
}
inline void DrawStakesHelpParam::set_press_coefficient(double value) {
  set_has_press_coefficient();
  press_coefficient_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.press_coefficient)
}

// required double Layer_thickness = 6;
inline bool DrawStakesHelpParam::has_layer_thickness() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DrawStakesHelpParam::set_has_layer_thickness() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DrawStakesHelpParam::clear_has_layer_thickness() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DrawStakesHelpParam::clear_layer_thickness() {
  layer_thickness_ = 0;
  clear_has_layer_thickness();
}
inline double DrawStakesHelpParam::layer_thickness() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.Layer_thickness)
  return layer_thickness_;
}
inline void DrawStakesHelpParam::set_layer_thickness(double value) {
  set_has_layer_thickness();
  layer_thickness_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.Layer_thickness)
}

// required double total_thickness = 7;
inline bool DrawStakesHelpParam::has_total_thickness() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DrawStakesHelpParam::set_has_total_thickness() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DrawStakesHelpParam::clear_has_total_thickness() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DrawStakesHelpParam::clear_total_thickness() {
  total_thickness_ = 0;
  clear_has_total_thickness();
}
inline double DrawStakesHelpParam::total_thickness() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.DrawStakesHelpParam.total_thickness)
  return total_thickness_;
}
inline void DrawStakesHelpParam::set_total_thickness(double value) {
  set_has_total_thickness();
  total_thickness_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.DrawStakesHelpParam.total_thickness)
}

// -------------------------------------------------------------------

// WorkEndNotify

// required string id = 1;
inline bool WorkEndNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkEndNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkEndNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkEndNotify::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& WorkEndNotify::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkEndNotify.id)
  return id_.GetNoArena();
}
inline void WorkEndNotify::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.WorkEndNotify.id)
}
#if LANG_CXX11
inline void WorkEndNotify::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.WorkEndNotify.id)
}
#endif
inline void WorkEndNotify::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.WorkEndNotify.id)
}
inline void WorkEndNotify::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.WorkEndNotify.id)
}
inline ::std::string* WorkEndNotify::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkEndNotify.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkEndNotify::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkEndNotify.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkEndNotify::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkEndNotify.id)
}

// required .middle_layer_pb.DeviceTask device_task = 2;
inline bool WorkEndNotify::has_device_task() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkEndNotify::set_has_device_task() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkEndNotify::clear_has_device_task() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkEndNotify::clear_device_task() {
  if (device_task_ != NULL) device_task_->Clear();
  clear_has_device_task();
}
inline const ::middle_layer_pb::DeviceTask& WorkEndNotify::device_task() const {
  const ::middle_layer_pb::DeviceTask* p = device_task_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.WorkEndNotify.device_task)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DeviceTask*>(
      &::middle_layer_pb::_DeviceTask_default_instance_);
}
inline ::middle_layer_pb::DeviceTask* WorkEndNotify::release_device_task() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WorkEndNotify.device_task)
  clear_has_device_task();
  ::middle_layer_pb::DeviceTask* temp = device_task_;
  device_task_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DeviceTask* WorkEndNotify::mutable_device_task() {
  set_has_device_task();
  if (device_task_ == NULL) {
    device_task_ = new ::middle_layer_pb::DeviceTask;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WorkEndNotify.device_task)
  return device_task_;
}
inline void WorkEndNotify::set_allocated_device_task(::middle_layer_pb::DeviceTask* device_task) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete device_task_;
  }
  if (device_task) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_task = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_task, submessage_arena);
    }
    set_has_device_task();
  } else {
    clear_has_device_task();
  }
  device_task_ = device_task;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WorkEndNotify.device_task)
}

// -------------------------------------------------------------------

// OperationRobotReq

// required string id = 1;
inline bool OperationRobotReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperationRobotReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperationRobotReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperationRobotReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& OperationRobotReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.OperationRobotReq.id)
  return id_.GetNoArena();
}
inline void OperationRobotReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.OperationRobotReq.id)
}
#if LANG_CXX11
inline void OperationRobotReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.OperationRobotReq.id)
}
#endif
inline void OperationRobotReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.OperationRobotReq.id)
}
inline void OperationRobotReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.OperationRobotReq.id)
}
inline ::std::string* OperationRobotReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.OperationRobotReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperationRobotReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.OperationRobotReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationRobotReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.OperationRobotReq.id)
}

// required .middle_layer_pb.enOperationType type = 2;
inline bool OperationRobotReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationRobotReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationRobotReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationRobotReq::clear_type() {
  type_ = 255;
  clear_has_type();
}
inline ::middle_layer_pb::enOperationType OperationRobotReq::type() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.OperationRobotReq.type)
  return static_cast< ::middle_layer_pb::enOperationType >(type_);
}
inline void OperationRobotReq::set_type(::middle_layer_pb::enOperationType value) {
  assert(::middle_layer_pb::enOperationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.OperationRobotReq.type)
}

// -------------------------------------------------------------------

// OperationRobotRes

// optional .middle_layer_pb.ErrorCode code = 1;
inline bool OperationRobotRes::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperationRobotRes::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperationRobotRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperationRobotRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode OperationRobotRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.OperationRobotRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void OperationRobotRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.OperationRobotRes.code)
}

// optional .middle_layer_pb.enOperationType type = 2;
inline bool OperationRobotRes::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationRobotRes::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationRobotRes::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationRobotRes::clear_type() {
  type_ = 255;
  clear_has_type();
}
inline ::middle_layer_pb::enOperationType OperationRobotRes::type() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.OperationRobotRes.type)
  return static_cast< ::middle_layer_pb::enOperationType >(type_);
}
inline void OperationRobotRes::set_type(::middle_layer_pb::enOperationType value) {
  assert(::middle_layer_pb::enOperationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.OperationRobotRes.type)
}

// -------------------------------------------------------------------

// CalSideStakeReq

// required string id = 1;
inline bool CalSideStakeReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSideStakeReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSideStakeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSideStakeReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSideStakeReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeReq.id)
  return id_.GetNoArena();
}
inline void CalSideStakeReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeReq.id)
}
#if LANG_CXX11
inline void CalSideStakeReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSideStakeReq.id)
}
#endif
inline void CalSideStakeReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSideStakeReq.id)
}
inline void CalSideStakeReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSideStakeReq.id)
}
inline ::std::string* CalSideStakeReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSideStakeReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSideStakeReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeReq.id)
}

// required string task_code = 2;
inline bool CalSideStakeReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSideStakeReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSideStakeReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSideStakeReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalSideStakeReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalSideStakeReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeReq.task_code)
}
#if LANG_CXX11
inline void CalSideStakeReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSideStakeReq.task_code)
}
#endif
inline void CalSideStakeReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSideStakeReq.task_code)
}
inline void CalSideStakeReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSideStakeReq.task_code)
}
inline ::std::string* CalSideStakeReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSideStakeReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSideStakeReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeReq.task_code)
}

// required .middle_layer_pb.StakeDto stake_dto = 3;
inline bool CalSideStakeReq::has_stake_dto() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalSideStakeReq::set_has_stake_dto() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalSideStakeReq::clear_has_stake_dto() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalSideStakeReq::clear_stake_dto() {
  if (stake_dto_ != NULL) stake_dto_->Clear();
  clear_has_stake_dto();
}
inline const ::middle_layer_pb::StakeDto& CalSideStakeReq::stake_dto() const {
  const ::middle_layer_pb::StakeDto* p = stake_dto_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeReq.stake_dto)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::StakeDto*>(
      &::middle_layer_pb::_StakeDto_default_instance_);
}
inline ::middle_layer_pb::StakeDto* CalSideStakeReq::release_stake_dto() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeReq.stake_dto)
  clear_has_stake_dto();
  ::middle_layer_pb::StakeDto* temp = stake_dto_;
  stake_dto_ = NULL;
  return temp;
}
inline ::middle_layer_pb::StakeDto* CalSideStakeReq::mutable_stake_dto() {
  set_has_stake_dto();
  if (stake_dto_ == NULL) {
    stake_dto_ = new ::middle_layer_pb::StakeDto;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeReq.stake_dto)
  return stake_dto_;
}
inline void CalSideStakeReq::set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stake_dto_;
  }
  if (stake_dto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stake_dto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stake_dto, submessage_arena);
    }
    set_has_stake_dto();
  } else {
    clear_has_stake_dto();
  }
  stake_dto_ = stake_dto;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeReq.stake_dto)
}

// required .middle_layer_pb.PointLLH pt = 4;
inline bool CalSideStakeReq::has_pt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalSideStakeReq::set_has_pt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalSideStakeReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalSideStakeReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalSideStakeReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalSideStakeReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalSideStakeReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeReq.pt)
  return pt_;
}
inline void CalSideStakeReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeReq.pt)
}

// required int32 side = 5;
inline bool CalSideStakeReq::has_side() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CalSideStakeReq::set_has_side() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CalSideStakeReq::clear_has_side() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CalSideStakeReq::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 CalSideStakeReq::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeReq.side)
  return side_;
}
inline void CalSideStakeReq::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeReq.side)
}

// -------------------------------------------------------------------

// CalSideStakeRes

// required string id = 1;
inline bool CalSideStakeRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSideStakeRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSideStakeRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSideStakeRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSideStakeRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeRes.id)
  return id_.GetNoArena();
}
inline void CalSideStakeRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeRes.id)
}
#if LANG_CXX11
inline void CalSideStakeRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSideStakeRes.id)
}
#endif
inline void CalSideStakeRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSideStakeRes.id)
}
inline void CalSideStakeRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSideStakeRes.id)
}
inline ::std::string* CalSideStakeRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSideStakeRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSideStakeRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalSideStakeRes::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalSideStakeRes::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalSideStakeRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalSideStakeRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalSideStakeRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalSideStakeRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeRes.code)
}

// required .middle_layer_pb.StakeDto stake_dto = 3;
inline bool CalSideStakeRes::has_stake_dto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSideStakeRes::set_has_stake_dto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSideStakeRes::clear_has_stake_dto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSideStakeRes::clear_stake_dto() {
  if (stake_dto_ != NULL) stake_dto_->Clear();
  clear_has_stake_dto();
}
inline const ::middle_layer_pb::StakeDto& CalSideStakeRes::stake_dto() const {
  const ::middle_layer_pb::StakeDto* p = stake_dto_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeRes.stake_dto)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::StakeDto*>(
      &::middle_layer_pb::_StakeDto_default_instance_);
}
inline ::middle_layer_pb::StakeDto* CalSideStakeRes::release_stake_dto() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeRes.stake_dto)
  clear_has_stake_dto();
  ::middle_layer_pb::StakeDto* temp = stake_dto_;
  stake_dto_ = NULL;
  return temp;
}
inline ::middle_layer_pb::StakeDto* CalSideStakeRes::mutable_stake_dto() {
  set_has_stake_dto();
  if (stake_dto_ == NULL) {
    stake_dto_ = new ::middle_layer_pb::StakeDto;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeRes.stake_dto)
  return stake_dto_;
}
inline void CalSideStakeRes::set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stake_dto_;
  }
  if (stake_dto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stake_dto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stake_dto, submessage_arena);
    }
    set_has_stake_dto();
  } else {
    clear_has_stake_dto();
  }
  stake_dto_ = stake_dto;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeRes.stake_dto)
}

// -------------------------------------------------------------------

// CalSideStakeListReq

// required string id = 1;
inline bool CalSideStakeListReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSideStakeListReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSideStakeListReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSideStakeListReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSideStakeListReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListReq.id)
  return id_.GetNoArena();
}
inline void CalSideStakeListReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeListReq.id)
}
#if LANG_CXX11
inline void CalSideStakeListReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSideStakeListReq.id)
}
#endif
inline void CalSideStakeListReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSideStakeListReq.id)
}
inline void CalSideStakeListReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSideStakeListReq.id)
}
inline ::std::string* CalSideStakeListReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeListReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSideStakeListReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeListReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSideStakeListReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeListReq.id)
}

// required string task_code = 2;
inline bool CalSideStakeListReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSideStakeListReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSideStakeListReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSideStakeListReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalSideStakeListReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalSideStakeListReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeListReq.task_code)
}
#if LANG_CXX11
inline void CalSideStakeListReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSideStakeListReq.task_code)
}
#endif
inline void CalSideStakeListReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSideStakeListReq.task_code)
}
inline void CalSideStakeListReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSideStakeListReq.task_code)
}
inline ::std::string* CalSideStakeListReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeListReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSideStakeListReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeListReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSideStakeListReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeListReq.task_code)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
inline int CalSideStakeListReq::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalSideStakeListReq::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalSideStakeListReq::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListReq.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalSideStakeListReq::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeListReq.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalSideStakeListReq::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalSideStakeListReq.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalSideStakeListReq::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalSideStakeListReq.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalSideStakeListReq::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalSideStakeListReq.stake_dto_list)
  return stake_dto_list_;
}

// required .middle_layer_pb.PointLLH pt = 4;
inline bool CalSideStakeListReq::has_pt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalSideStakeListReq::set_has_pt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalSideStakeListReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalSideStakeListReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalSideStakeListReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalSideStakeListReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeListReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalSideStakeListReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeListReq.pt)
  return pt_;
}
inline void CalSideStakeListReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeListReq.pt)
}

// required int32 side = 5;
inline bool CalSideStakeListReq::has_side() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalSideStakeListReq::set_has_side() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalSideStakeListReq::clear_has_side() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalSideStakeListReq::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 CalSideStakeListReq::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListReq.side)
  return side_;
}
inline void CalSideStakeListReq::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeListReq.side)
}

// required int32 safety_offset = 6;
inline bool CalSideStakeListReq::has_safety_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CalSideStakeListReq::set_has_safety_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CalSideStakeListReq::clear_has_safety_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CalSideStakeListReq::clear_safety_offset() {
  safety_offset_ = 0;
  clear_has_safety_offset();
}
inline ::google::protobuf::int32 CalSideStakeListReq::safety_offset() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListReq.safety_offset)
  return safety_offset_;
}
inline void CalSideStakeListReq::set_safety_offset(::google::protobuf::int32 value) {
  set_has_safety_offset();
  safety_offset_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeListReq.safety_offset)
}

// -------------------------------------------------------------------

// CalSideStakeListRes

// required string id = 1;
inline bool CalSideStakeListRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSideStakeListRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSideStakeListRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSideStakeListRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSideStakeListRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListRes.id)
  return id_.GetNoArena();
}
inline void CalSideStakeListRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeListRes.id)
}
#if LANG_CXX11
inline void CalSideStakeListRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSideStakeListRes.id)
}
#endif
inline void CalSideStakeListRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSideStakeListRes.id)
}
inline void CalSideStakeListRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSideStakeListRes.id)
}
inline ::std::string* CalSideStakeListRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeListRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSideStakeListRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSideStakeListRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSideStakeListRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSideStakeListRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalSideStakeListRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSideStakeListRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSideStakeListRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSideStakeListRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalSideStakeListRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalSideStakeListRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSideStakeListRes.code)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
inline int CalSideStakeListRes::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalSideStakeListRes::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalSideStakeListRes::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSideStakeListRes.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalSideStakeListRes::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSideStakeListRes.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalSideStakeListRes::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalSideStakeListRes.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalSideStakeListRes::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalSideStakeListRes.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalSideStakeListRes::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalSideStakeListRes.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// CalLaneStakeListRes

// required string id = 1;
inline bool CalLaneStakeListRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalLaneStakeListRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalLaneStakeListRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalLaneStakeListRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalLaneStakeListRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListRes.id)
  return id_.GetNoArena();
}
inline void CalLaneStakeListRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLaneStakeListRes.id)
}
#if LANG_CXX11
inline void CalLaneStakeListRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalLaneStakeListRes.id)
}
#endif
inline void CalLaneStakeListRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalLaneStakeListRes.id)
}
inline void CalLaneStakeListRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalLaneStakeListRes.id)
}
inline ::std::string* CalLaneStakeListRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLaneStakeListRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalLaneStakeListRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLaneStakeListRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalLaneStakeListRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLaneStakeListRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalLaneStakeListRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalLaneStakeListRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalLaneStakeListRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalLaneStakeListRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalLaneStakeListRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalLaneStakeListRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLaneStakeListRes.code)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
inline int CalLaneStakeListRes::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalLaneStakeListRes::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalLaneStakeListRes::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListRes.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalLaneStakeListRes::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLaneStakeListRes.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalLaneStakeListRes::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalLaneStakeListRes.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalLaneStakeListRes::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalLaneStakeListRes.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalLaneStakeListRes::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalLaneStakeListRes.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// CalLaneStakeListReq

// required string id = 1;
inline bool CalLaneStakeListReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalLaneStakeListReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalLaneStakeListReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalLaneStakeListReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalLaneStakeListReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListReq.id)
  return id_.GetNoArena();
}
inline void CalLaneStakeListReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLaneStakeListReq.id)
}
#if LANG_CXX11
inline void CalLaneStakeListReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalLaneStakeListReq.id)
}
#endif
inline void CalLaneStakeListReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalLaneStakeListReq.id)
}
inline void CalLaneStakeListReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalLaneStakeListReq.id)
}
inline ::std::string* CalLaneStakeListReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLaneStakeListReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalLaneStakeListReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLaneStakeListReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalLaneStakeListReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLaneStakeListReq.id)
}

// required string task_code = 2;
inline bool CalLaneStakeListReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalLaneStakeListReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalLaneStakeListReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalLaneStakeListReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalLaneStakeListReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalLaneStakeListReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLaneStakeListReq.task_code)
}
#if LANG_CXX11
inline void CalLaneStakeListReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalLaneStakeListReq.task_code)
}
#endif
inline void CalLaneStakeListReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalLaneStakeListReq.task_code)
}
inline void CalLaneStakeListReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalLaneStakeListReq.task_code)
}
inline ::std::string* CalLaneStakeListReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLaneStakeListReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalLaneStakeListReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLaneStakeListReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalLaneStakeListReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLaneStakeListReq.task_code)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
inline int CalLaneStakeListReq::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalLaneStakeListReq::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalLaneStakeListReq::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListReq.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalLaneStakeListReq::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLaneStakeListReq.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalLaneStakeListReq::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalLaneStakeListReq.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalLaneStakeListReq::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalLaneStakeListReq.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalLaneStakeListReq::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalLaneStakeListReq.stake_dto_list)
  return stake_dto_list_;
}

// required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
inline bool CalLaneStakeListReq::has_put_lane_line_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalLaneStakeListReq::set_has_put_lane_line_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalLaneStakeListReq::clear_has_put_lane_line_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalLaneStakeListReq::clear_put_lane_line_param() {
  if (put_lane_line_param_ != NULL) put_lane_line_param_->Clear();
  clear_has_put_lane_line_param();
}
inline const ::middle_layer_pb::PutLaneLineParam& CalLaneStakeListReq::put_lane_line_param() const {
  const ::middle_layer_pb::PutLaneLineParam* p = put_lane_line_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLaneStakeListReq.put_lane_line_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutLaneLineParam*>(
      &::middle_layer_pb::_PutLaneLineParam_default_instance_);
}
inline ::middle_layer_pb::PutLaneLineParam* CalLaneStakeListReq::release_put_lane_line_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLaneStakeListReq.put_lane_line_param)
  clear_has_put_lane_line_param();
  ::middle_layer_pb::PutLaneLineParam* temp = put_lane_line_param_;
  put_lane_line_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutLaneLineParam* CalLaneStakeListReq::mutable_put_lane_line_param() {
  set_has_put_lane_line_param();
  if (put_lane_line_param_ == NULL) {
    put_lane_line_param_ = new ::middle_layer_pb::PutLaneLineParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLaneStakeListReq.put_lane_line_param)
  return put_lane_line_param_;
}
inline void CalLaneStakeListReq::set_allocated_put_lane_line_param(::middle_layer_pb::PutLaneLineParam* put_lane_line_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_lane_line_param_;
  }
  if (put_lane_line_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_lane_line_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_lane_line_param, submessage_arena);
    }
    set_has_put_lane_line_param();
  } else {
    clear_has_put_lane_line_param();
  }
  put_lane_line_param_ = put_lane_line_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLaneStakeListReq.put_lane_line_param)
}

// -------------------------------------------------------------------

// CalCrossSectionStakeArrayReq

// required string id = 1;
inline bool CalCrossSectionStakeArrayReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalCrossSectionStakeArrayReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalCrossSectionStakeArrayReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalCrossSectionStakeArrayReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalCrossSectionStakeArrayReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
  return id_.GetNoArena();
}
inline void CalCrossSectionStakeArrayReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
}
#if LANG_CXX11
inline void CalCrossSectionStakeArrayReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
}
#endif
inline void CalCrossSectionStakeArrayReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
}
inline void CalCrossSectionStakeArrayReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
}
inline ::std::string* CalCrossSectionStakeArrayReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalCrossSectionStakeArrayReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalCrossSectionStakeArrayReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalCrossSectionStakeArrayReq.id)
}

// required string task_code = 2;
inline bool CalCrossSectionStakeArrayReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalCrossSectionStakeArrayReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalCrossSectionStakeArrayReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalCrossSectionStakeArrayReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalCrossSectionStakeArrayReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalCrossSectionStakeArrayReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
}
#if LANG_CXX11
inline void CalCrossSectionStakeArrayReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
}
#endif
inline void CalCrossSectionStakeArrayReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
}
inline void CalCrossSectionStakeArrayReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
}
inline ::std::string* CalCrossSectionStakeArrayReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalCrossSectionStakeArrayReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalCrossSectionStakeArrayReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalCrossSectionStakeArrayReq.task_code)
}

// required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
inline bool CalCrossSectionStakeArrayReq::has_put_cross_section_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalCrossSectionStakeArrayReq::set_has_put_cross_section_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalCrossSectionStakeArrayReq::clear_has_put_cross_section_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalCrossSectionStakeArrayReq::clear_put_cross_section_param() {
  if (put_cross_section_param_ != NULL) put_cross_section_param_->Clear();
  clear_has_put_cross_section_param();
}
inline const ::middle_layer_pb::PutCrossSectionParam& CalCrossSectionStakeArrayReq::put_cross_section_param() const {
  const ::middle_layer_pb::PutCrossSectionParam* p = put_cross_section_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayReq.put_cross_section_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutCrossSectionParam*>(
      &::middle_layer_pb::_PutCrossSectionParam_default_instance_);
}
inline ::middle_layer_pb::PutCrossSectionParam* CalCrossSectionStakeArrayReq::release_put_cross_section_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalCrossSectionStakeArrayReq.put_cross_section_param)
  clear_has_put_cross_section_param();
  ::middle_layer_pb::PutCrossSectionParam* temp = put_cross_section_param_;
  put_cross_section_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutCrossSectionParam* CalCrossSectionStakeArrayReq::mutable_put_cross_section_param() {
  set_has_put_cross_section_param();
  if (put_cross_section_param_ == NULL) {
    put_cross_section_param_ = new ::middle_layer_pb::PutCrossSectionParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayReq.put_cross_section_param)
  return put_cross_section_param_;
}
inline void CalCrossSectionStakeArrayReq::set_allocated_put_cross_section_param(::middle_layer_pb::PutCrossSectionParam* put_cross_section_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_cross_section_param_;
  }
  if (put_cross_section_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_cross_section_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_cross_section_param, submessage_arena);
    }
    set_has_put_cross_section_param();
  } else {
    clear_has_put_cross_section_param();
  }
  put_cross_section_param_ = put_cross_section_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalCrossSectionStakeArrayReq.put_cross_section_param)
}

// required .middle_layer_pb.PointLLH pt = 4;
inline bool CalCrossSectionStakeArrayReq::has_pt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalCrossSectionStakeArrayReq::set_has_pt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalCrossSectionStakeArrayReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalCrossSectionStakeArrayReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalCrossSectionStakeArrayReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalCrossSectionStakeArrayReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalCrossSectionStakeArrayReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalCrossSectionStakeArrayReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayReq.pt)
  return pt_;
}
inline void CalCrossSectionStakeArrayReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalCrossSectionStakeArrayReq.pt)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
inline int CalCrossSectionStakeArrayReq::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalCrossSectionStakeArrayReq::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalCrossSectionStakeArrayReq::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalCrossSectionStakeArrayReq::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalCrossSectionStakeArrayReq::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalCrossSectionStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalCrossSectionStakeArrayReq::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalCrossSectionStakeArrayReq.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalCrossSectionStakeArrayReq::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalCrossSectionStakeArrayReq.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// CalCrossSectionStakeArrayRes

// required string id = 1;
inline bool CalCrossSectionStakeArrayRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalCrossSectionStakeArrayRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalCrossSectionStakeArrayRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalCrossSectionStakeArrayRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalCrossSectionStakeArrayRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
  return id_.GetNoArena();
}
inline void CalCrossSectionStakeArrayRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
}
#if LANG_CXX11
inline void CalCrossSectionStakeArrayRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
}
#endif
inline void CalCrossSectionStakeArrayRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
}
inline void CalCrossSectionStakeArrayRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
}
inline ::std::string* CalCrossSectionStakeArrayRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalCrossSectionStakeArrayRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalCrossSectionStakeArrayRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalCrossSectionStakeArrayRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalCrossSectionStakeArrayRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalCrossSectionStakeArrayRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalCrossSectionStakeArrayRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalCrossSectionStakeArrayRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalCrossSectionStakeArrayRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalCrossSectionStakeArrayRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalCrossSectionStakeArrayRes.code)
}

// repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
inline int CalCrossSectionStakeArrayRes::stake_dto_two_list_size() const {
  return stake_dto_two_list_.size();
}
inline void CalCrossSectionStakeArrayRes::clear_stake_dto_two_list() {
  stake_dto_two_list_.Clear();
}
inline const ::middle_layer_pb::StakeDtoList& CalCrossSectionStakeArrayRes::stake_dto_two_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalCrossSectionStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Get(index);
}
inline ::middle_layer_pb::StakeDtoList* CalCrossSectionStakeArrayRes::mutable_stake_dto_two_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalCrossSectionStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDtoList* CalCrossSectionStakeArrayRes::add_stake_dto_two_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalCrossSectionStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >*
CalCrossSectionStakeArrayRes::mutable_stake_dto_two_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalCrossSectionStakeArrayRes.stake_dto_two_list)
  return &stake_dto_two_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >&
CalCrossSectionStakeArrayRes::stake_dto_two_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalCrossSectionStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_;
}

// -------------------------------------------------------------------

// CalStandardSquareParamReq

// required string id = 1;
inline bool CalStandardSquareParamReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalStandardSquareParamReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalStandardSquareParamReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalStandardSquareParamReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalStandardSquareParamReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamReq.id)
  return id_.GetNoArena();
}
inline void CalStandardSquareParamReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStandardSquareParamReq.id)
}
#if LANG_CXX11
inline void CalStandardSquareParamReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalStandardSquareParamReq.id)
}
#endif
inline void CalStandardSquareParamReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalStandardSquareParamReq.id)
}
inline void CalStandardSquareParamReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalStandardSquareParamReq.id)
}
inline ::std::string* CalStandardSquareParamReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalStandardSquareParamReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalStandardSquareParamReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamReq.id)
}

// required string task_code = 2;
inline bool CalStandardSquareParamReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalStandardSquareParamReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalStandardSquareParamReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalStandardSquareParamReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalStandardSquareParamReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalStandardSquareParamReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStandardSquareParamReq.task_code)
}
#if LANG_CXX11
inline void CalStandardSquareParamReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalStandardSquareParamReq.task_code)
}
#endif
inline void CalStandardSquareParamReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalStandardSquareParamReq.task_code)
}
inline void CalStandardSquareParamReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalStandardSquareParamReq.task_code)
}
inline ::std::string* CalStandardSquareParamReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalStandardSquareParamReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalStandardSquareParamReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamReq.task_code)
}

// required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
inline bool CalStandardSquareParamReq::has_draw_standard_square_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalStandardSquareParamReq::set_has_draw_standard_square_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalStandardSquareParamReq::clear_has_draw_standard_square_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalStandardSquareParamReq::clear_draw_standard_square_param() {
  if (draw_standard_square_param_ != NULL) draw_standard_square_param_->Clear();
  clear_has_draw_standard_square_param();
}
inline const ::middle_layer_pb::DrawStandardSquareParam& CalStandardSquareParamReq::draw_standard_square_param() const {
  const ::middle_layer_pb::DrawStandardSquareParam* p = draw_standard_square_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamReq.draw_standard_square_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStandardSquareParam*>(
      &::middle_layer_pb::_DrawStandardSquareParam_default_instance_);
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalStandardSquareParamReq::release_draw_standard_square_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamReq.draw_standard_square_param)
  clear_has_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* temp = draw_standard_square_param_;
  draw_standard_square_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalStandardSquareParamReq::mutable_draw_standard_square_param() {
  set_has_draw_standard_square_param();
  if (draw_standard_square_param_ == NULL) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamReq.draw_standard_square_param)
  return draw_standard_square_param_;
}
inline void CalStandardSquareParamReq::set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_standard_square_param_;
  }
  if (draw_standard_square_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_standard_square_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_standard_square_param, submessage_arena);
    }
    set_has_draw_standard_square_param();
  } else {
    clear_has_draw_standard_square_param();
  }
  draw_standard_square_param_ = draw_standard_square_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamReq.draw_standard_square_param)
}

// required .middle_layer_pb.StakeDto stake_dto = 4;
inline bool CalStandardSquareParamReq::has_stake_dto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalStandardSquareParamReq::set_has_stake_dto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalStandardSquareParamReq::clear_has_stake_dto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalStandardSquareParamReq::clear_stake_dto() {
  if (stake_dto_ != NULL) stake_dto_->Clear();
  clear_has_stake_dto();
}
inline const ::middle_layer_pb::StakeDto& CalStandardSquareParamReq::stake_dto() const {
  const ::middle_layer_pb::StakeDto* p = stake_dto_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamReq.stake_dto)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::StakeDto*>(
      &::middle_layer_pb::_StakeDto_default_instance_);
}
inline ::middle_layer_pb::StakeDto* CalStandardSquareParamReq::release_stake_dto() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamReq.stake_dto)
  clear_has_stake_dto();
  ::middle_layer_pb::StakeDto* temp = stake_dto_;
  stake_dto_ = NULL;
  return temp;
}
inline ::middle_layer_pb::StakeDto* CalStandardSquareParamReq::mutable_stake_dto() {
  set_has_stake_dto();
  if (stake_dto_ == NULL) {
    stake_dto_ = new ::middle_layer_pb::StakeDto;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamReq.stake_dto)
  return stake_dto_;
}
inline void CalStandardSquareParamReq::set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stake_dto_;
  }
  if (stake_dto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stake_dto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stake_dto, submessage_arena);
    }
    set_has_stake_dto();
  } else {
    clear_has_stake_dto();
  }
  stake_dto_ = stake_dto;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamReq.stake_dto)
}

// required .middle_layer_pb.PointLLH pt = 5;
inline bool CalStandardSquareParamReq::has_pt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CalStandardSquareParamReq::set_has_pt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CalStandardSquareParamReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CalStandardSquareParamReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalStandardSquareParamReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalStandardSquareParamReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalStandardSquareParamReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamReq.pt)
  return pt_;
}
inline void CalStandardSquareParamReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamReq.pt)
}

// required int32 side = 6;
inline bool CalStandardSquareParamReq::has_side() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CalStandardSquareParamReq::set_has_side() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CalStandardSquareParamReq::clear_has_side() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CalStandardSquareParamReq::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 CalStandardSquareParamReq::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamReq.side)
  return side_;
}
inline void CalStandardSquareParamReq::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStandardSquareParamReq.side)
}

// -------------------------------------------------------------------

// CalStandardSquareParamRes

// required string id = 1;
inline bool CalStandardSquareParamRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalStandardSquareParamRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalStandardSquareParamRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalStandardSquareParamRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalStandardSquareParamRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamRes.id)
  return id_.GetNoArena();
}
inline void CalStandardSquareParamRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStandardSquareParamRes.id)
}
#if LANG_CXX11
inline void CalStandardSquareParamRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalStandardSquareParamRes.id)
}
#endif
inline void CalStandardSquareParamRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalStandardSquareParamRes.id)
}
inline void CalStandardSquareParamRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalStandardSquareParamRes.id)
}
inline ::std::string* CalStandardSquareParamRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalStandardSquareParamRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalStandardSquareParamRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalStandardSquareParamRes::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalStandardSquareParamRes::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalStandardSquareParamRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalStandardSquareParamRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalStandardSquareParamRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalStandardSquareParamRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStandardSquareParamRes.code)
}

// required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
inline bool CalStandardSquareParamRes::has_draw_standard_square_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalStandardSquareParamRes::set_has_draw_standard_square_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalStandardSquareParamRes::clear_has_draw_standard_square_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalStandardSquareParamRes::clear_draw_standard_square_param() {
  if (draw_standard_square_param_ != NULL) draw_standard_square_param_->Clear();
  clear_has_draw_standard_square_param();
}
inline const ::middle_layer_pb::DrawStandardSquareParam& CalStandardSquareParamRes::draw_standard_square_param() const {
  const ::middle_layer_pb::DrawStandardSquareParam* p = draw_standard_square_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStandardSquareParamRes.draw_standard_square_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStandardSquareParam*>(
      &::middle_layer_pb::_DrawStandardSquareParam_default_instance_);
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalStandardSquareParamRes::release_draw_standard_square_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStandardSquareParamRes.draw_standard_square_param)
  clear_has_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* temp = draw_standard_square_param_;
  draw_standard_square_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalStandardSquareParamRes::mutable_draw_standard_square_param() {
  set_has_draw_standard_square_param();
  if (draw_standard_square_param_ == NULL) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStandardSquareParamRes.draw_standard_square_param)
  return draw_standard_square_param_;
}
inline void CalStandardSquareParamRes::set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_standard_square_param_;
  }
  if (draw_standard_square_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_standard_square_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_standard_square_param, submessage_arena);
    }
    set_has_draw_standard_square_param();
  } else {
    clear_has_draw_standard_square_param();
  }
  draw_standard_square_param_ = draw_standard_square_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStandardSquareParamRes.draw_standard_square_param)
}

// -------------------------------------------------------------------

// CalSquareWidthStakeReq

// required string id = 1;
inline bool CalSquareWidthStakeReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSquareWidthStakeReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSquareWidthStakeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSquareWidthStakeReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSquareWidthStakeReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeReq.id)
  return id_.GetNoArena();
}
inline void CalSquareWidthStakeReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareWidthStakeReq.id)
}
#if LANG_CXX11
inline void CalSquareWidthStakeReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSquareWidthStakeReq.id)
}
#endif
inline void CalSquareWidthStakeReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSquareWidthStakeReq.id)
}
inline void CalSquareWidthStakeReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSquareWidthStakeReq.id)
}
inline ::std::string* CalSquareWidthStakeReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSquareWidthStakeReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareWidthStakeReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSquareWidthStakeReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareWidthStakeReq.id)
}

// required string task_code = 2;
inline bool CalSquareWidthStakeReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSquareWidthStakeReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSquareWidthStakeReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSquareWidthStakeReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalSquareWidthStakeReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalSquareWidthStakeReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareWidthStakeReq.task_code)
}
#if LANG_CXX11
inline void CalSquareWidthStakeReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSquareWidthStakeReq.task_code)
}
#endif
inline void CalSquareWidthStakeReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSquareWidthStakeReq.task_code)
}
inline void CalSquareWidthStakeReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSquareWidthStakeReq.task_code)
}
inline ::std::string* CalSquareWidthStakeReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSquareWidthStakeReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareWidthStakeReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSquareWidthStakeReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareWidthStakeReq.task_code)
}

// required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
inline bool CalSquareWidthStakeReq::has_draw_standard_square_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalSquareWidthStakeReq::set_has_draw_standard_square_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalSquareWidthStakeReq::clear_has_draw_standard_square_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalSquareWidthStakeReq::clear_draw_standard_square_param() {
  if (draw_standard_square_param_ != NULL) draw_standard_square_param_->Clear();
  clear_has_draw_standard_square_param();
}
inline const ::middle_layer_pb::DrawStandardSquareParam& CalSquareWidthStakeReq::draw_standard_square_param() const {
  const ::middle_layer_pb::DrawStandardSquareParam* p = draw_standard_square_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeReq.draw_standard_square_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStandardSquareParam*>(
      &::middle_layer_pb::_DrawStandardSquareParam_default_instance_);
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalSquareWidthStakeReq::release_draw_standard_square_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareWidthStakeReq.draw_standard_square_param)
  clear_has_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* temp = draw_standard_square_param_;
  draw_standard_square_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalSquareWidthStakeReq::mutable_draw_standard_square_param() {
  set_has_draw_standard_square_param();
  if (draw_standard_square_param_ == NULL) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeReq.draw_standard_square_param)
  return draw_standard_square_param_;
}
inline void CalSquareWidthStakeReq::set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_standard_square_param_;
  }
  if (draw_standard_square_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_standard_square_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_standard_square_param, submessage_arena);
    }
    set_has_draw_standard_square_param();
  } else {
    clear_has_draw_standard_square_param();
  }
  draw_standard_square_param_ = draw_standard_square_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareWidthStakeReq.draw_standard_square_param)
}

// required .middle_layer_pb.StakeDto stake_dto = 4;
inline bool CalSquareWidthStakeReq::has_stake_dto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalSquareWidthStakeReq::set_has_stake_dto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalSquareWidthStakeReq::clear_has_stake_dto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalSquareWidthStakeReq::clear_stake_dto() {
  if (stake_dto_ != NULL) stake_dto_->Clear();
  clear_has_stake_dto();
}
inline const ::middle_layer_pb::StakeDto& CalSquareWidthStakeReq::stake_dto() const {
  const ::middle_layer_pb::StakeDto* p = stake_dto_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeReq.stake_dto)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::StakeDto*>(
      &::middle_layer_pb::_StakeDto_default_instance_);
}
inline ::middle_layer_pb::StakeDto* CalSquareWidthStakeReq::release_stake_dto() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareWidthStakeReq.stake_dto)
  clear_has_stake_dto();
  ::middle_layer_pb::StakeDto* temp = stake_dto_;
  stake_dto_ = NULL;
  return temp;
}
inline ::middle_layer_pb::StakeDto* CalSquareWidthStakeReq::mutable_stake_dto() {
  set_has_stake_dto();
  if (stake_dto_ == NULL) {
    stake_dto_ = new ::middle_layer_pb::StakeDto;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeReq.stake_dto)
  return stake_dto_;
}
inline void CalSquareWidthStakeReq::set_allocated_stake_dto(::middle_layer_pb::StakeDto* stake_dto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stake_dto_;
  }
  if (stake_dto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stake_dto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stake_dto, submessage_arena);
    }
    set_has_stake_dto();
  } else {
    clear_has_stake_dto();
  }
  stake_dto_ = stake_dto;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareWidthStakeReq.stake_dto)
}

// required .middle_layer_pb.PointLLH pt = 5;
inline bool CalSquareWidthStakeReq::has_pt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CalSquareWidthStakeReq::set_has_pt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CalSquareWidthStakeReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CalSquareWidthStakeReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalSquareWidthStakeReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalSquareWidthStakeReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareWidthStakeReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalSquareWidthStakeReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeReq.pt)
  return pt_;
}
inline void CalSquareWidthStakeReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareWidthStakeReq.pt)
}

// required int32 side = 6;
inline bool CalSquareWidthStakeReq::has_side() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CalSquareWidthStakeReq::set_has_side() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CalSquareWidthStakeReq::clear_has_side() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CalSquareWidthStakeReq::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 CalSquareWidthStakeReq::side() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeReq.side)
  return side_;
}
inline void CalSquareWidthStakeReq::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareWidthStakeReq.side)
}

// -------------------------------------------------------------------

// CalSquareWidthStakeRes

// required string id = 1;
inline bool CalSquareWidthStakeRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSquareWidthStakeRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSquareWidthStakeRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSquareWidthStakeRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSquareWidthStakeRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeRes.id)
  return id_.GetNoArena();
}
inline void CalSquareWidthStakeRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareWidthStakeRes.id)
}
#if LANG_CXX11
inline void CalSquareWidthStakeRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSquareWidthStakeRes.id)
}
#endif
inline void CalSquareWidthStakeRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSquareWidthStakeRes.id)
}
inline void CalSquareWidthStakeRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSquareWidthStakeRes.id)
}
inline ::std::string* CalSquareWidthStakeRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSquareWidthStakeRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareWidthStakeRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSquareWidthStakeRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareWidthStakeRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalSquareWidthStakeRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSquareWidthStakeRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSquareWidthStakeRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSquareWidthStakeRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalSquareWidthStakeRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalSquareWidthStakeRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareWidthStakeRes.code)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
inline int CalSquareWidthStakeRes::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalSquareWidthStakeRes::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalSquareWidthStakeRes::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareWidthStakeRes.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalSquareWidthStakeRes::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareWidthStakeRes.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalSquareWidthStakeRes::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalSquareWidthStakeRes.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalSquareWidthStakeRes::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalSquareWidthStakeRes.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalSquareWidthStakeRes::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalSquareWidthStakeRes.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// CalSquareStakeArrayReq

// required string id = 1;
inline bool CalSquareStakeArrayReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSquareStakeArrayReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSquareStakeArrayReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSquareStakeArrayReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSquareStakeArrayReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayReq.id)
  return id_.GetNoArena();
}
inline void CalSquareStakeArrayReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareStakeArrayReq.id)
}
#if LANG_CXX11
inline void CalSquareStakeArrayReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSquareStakeArrayReq.id)
}
#endif
inline void CalSquareStakeArrayReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSquareStakeArrayReq.id)
}
inline void CalSquareStakeArrayReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSquareStakeArrayReq.id)
}
inline ::std::string* CalSquareStakeArrayReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSquareStakeArrayReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareStakeArrayReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSquareStakeArrayReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareStakeArrayReq.id)
}

// required string task_code = 2;
inline bool CalSquareStakeArrayReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSquareStakeArrayReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSquareStakeArrayReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSquareStakeArrayReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalSquareStakeArrayReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalSquareStakeArrayReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareStakeArrayReq.task_code)
}
#if LANG_CXX11
inline void CalSquareStakeArrayReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSquareStakeArrayReq.task_code)
}
#endif
inline void CalSquareStakeArrayReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSquareStakeArrayReq.task_code)
}
inline void CalSquareStakeArrayReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSquareStakeArrayReq.task_code)
}
inline ::std::string* CalSquareStakeArrayReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSquareStakeArrayReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareStakeArrayReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSquareStakeArrayReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareStakeArrayReq.task_code)
}

// required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
inline bool CalSquareStakeArrayReq::has_draw_standard_square_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalSquareStakeArrayReq::set_has_draw_standard_square_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalSquareStakeArrayReq::clear_has_draw_standard_square_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalSquareStakeArrayReq::clear_draw_standard_square_param() {
  if (draw_standard_square_param_ != NULL) draw_standard_square_param_->Clear();
  clear_has_draw_standard_square_param();
}
inline const ::middle_layer_pb::DrawStandardSquareParam& CalSquareStakeArrayReq::draw_standard_square_param() const {
  const ::middle_layer_pb::DrawStandardSquareParam* p = draw_standard_square_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayReq.draw_standard_square_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStandardSquareParam*>(
      &::middle_layer_pb::_DrawStandardSquareParam_default_instance_);
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalSquareStakeArrayReq::release_draw_standard_square_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareStakeArrayReq.draw_standard_square_param)
  clear_has_draw_standard_square_param();
  ::middle_layer_pb::DrawStandardSquareParam* temp = draw_standard_square_param_;
  draw_standard_square_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStandardSquareParam* CalSquareStakeArrayReq::mutable_draw_standard_square_param() {
  set_has_draw_standard_square_param();
  if (draw_standard_square_param_ == NULL) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayReq.draw_standard_square_param)
  return draw_standard_square_param_;
}
inline void CalSquareStakeArrayReq::set_allocated_draw_standard_square_param(::middle_layer_pb::DrawStandardSquareParam* draw_standard_square_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_standard_square_param_;
  }
  if (draw_standard_square_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_standard_square_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_standard_square_param, submessage_arena);
    }
    set_has_draw_standard_square_param();
  } else {
    clear_has_draw_standard_square_param();
  }
  draw_standard_square_param_ = draw_standard_square_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareStakeArrayReq.draw_standard_square_param)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
inline int CalSquareStakeArrayReq::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalSquareStakeArrayReq::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalSquareStakeArrayReq::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalSquareStakeArrayReq::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalSquareStakeArrayReq::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalSquareStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalSquareStakeArrayReq::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalSquareStakeArrayReq.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalSquareStakeArrayReq::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalSquareStakeArrayReq.stake_dto_list)
  return stake_dto_list_;
}

// required .middle_layer_pb.PointLLH pt = 5;
inline bool CalSquareStakeArrayReq::has_pt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalSquareStakeArrayReq::set_has_pt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalSquareStakeArrayReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalSquareStakeArrayReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalSquareStakeArrayReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalSquareStakeArrayReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareStakeArrayReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalSquareStakeArrayReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayReq.pt)
  return pt_;
}
inline void CalSquareStakeArrayReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareStakeArrayReq.pt)
}

// -------------------------------------------------------------------

// CalSquareStakeArrayRes

// required string id = 1;
inline bool CalSquareStakeArrayRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalSquareStakeArrayRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalSquareStakeArrayRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalSquareStakeArrayRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalSquareStakeArrayRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayRes.id)
  return id_.GetNoArena();
}
inline void CalSquareStakeArrayRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareStakeArrayRes.id)
}
#if LANG_CXX11
inline void CalSquareStakeArrayRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalSquareStakeArrayRes.id)
}
#endif
inline void CalSquareStakeArrayRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalSquareStakeArrayRes.id)
}
inline void CalSquareStakeArrayRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalSquareStakeArrayRes.id)
}
inline ::std::string* CalSquareStakeArrayRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalSquareStakeArrayRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalSquareStakeArrayRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalSquareStakeArrayRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalSquareStakeArrayRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalSquareStakeArrayRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalSquareStakeArrayRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalSquareStakeArrayRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalSquareStakeArrayRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalSquareStakeArrayRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalSquareStakeArrayRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalSquareStakeArrayRes.code)
}

// repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 4;
inline int CalSquareStakeArrayRes::stake_dto_two_list_size() const {
  return stake_dto_two_list_.size();
}
inline void CalSquareStakeArrayRes::clear_stake_dto_two_list() {
  stake_dto_two_list_.Clear();
}
inline const ::middle_layer_pb::StakeDtoList& CalSquareStakeArrayRes::stake_dto_two_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalSquareStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Get(index);
}
inline ::middle_layer_pb::StakeDtoList* CalSquareStakeArrayRes::mutable_stake_dto_two_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalSquareStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDtoList* CalSquareStakeArrayRes::add_stake_dto_two_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalSquareStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >*
CalSquareStakeArrayRes::mutable_stake_dto_two_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalSquareStakeArrayRes.stake_dto_two_list)
  return &stake_dto_two_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >&
CalSquareStakeArrayRes::stake_dto_two_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalSquareStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_;
}

// -------------------------------------------------------------------

// CalLevellingStakeArrayReq

// required string id = 1;
inline bool CalLevellingStakeArrayReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalLevellingStakeArrayReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalLevellingStakeArrayReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalLevellingStakeArrayReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalLevellingStakeArrayReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayReq.id)
  return id_.GetNoArena();
}
inline void CalLevellingStakeArrayReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLevellingStakeArrayReq.id)
}
#if LANG_CXX11
inline void CalLevellingStakeArrayReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalLevellingStakeArrayReq.id)
}
#endif
inline void CalLevellingStakeArrayReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalLevellingStakeArrayReq.id)
}
inline void CalLevellingStakeArrayReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalLevellingStakeArrayReq.id)
}
inline ::std::string* CalLevellingStakeArrayReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLevellingStakeArrayReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalLevellingStakeArrayReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLevellingStakeArrayReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalLevellingStakeArrayReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLevellingStakeArrayReq.id)
}

// required string task_code = 2;
inline bool CalLevellingStakeArrayReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalLevellingStakeArrayReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalLevellingStakeArrayReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalLevellingStakeArrayReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalLevellingStakeArrayReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalLevellingStakeArrayReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
}
#if LANG_CXX11
inline void CalLevellingStakeArrayReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
}
#endif
inline void CalLevellingStakeArrayReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
}
inline void CalLevellingStakeArrayReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
}
inline ::std::string* CalLevellingStakeArrayReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalLevellingStakeArrayReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalLevellingStakeArrayReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLevellingStakeArrayReq.task_code)
}

// required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
inline bool CalLevellingStakeArrayReq::has_put_levelling_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalLevellingStakeArrayReq::set_has_put_levelling_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalLevellingStakeArrayReq::clear_has_put_levelling_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalLevellingStakeArrayReq::clear_put_levelling_param() {
  if (put_levelling_param_ != NULL) put_levelling_param_->Clear();
  clear_has_put_levelling_param();
}
inline const ::middle_layer_pb::PutLevellingParam& CalLevellingStakeArrayReq::put_levelling_param() const {
  const ::middle_layer_pb::PutLevellingParam* p = put_levelling_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayReq.put_levelling_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PutLevellingParam*>(
      &::middle_layer_pb::_PutLevellingParam_default_instance_);
}
inline ::middle_layer_pb::PutLevellingParam* CalLevellingStakeArrayReq::release_put_levelling_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLevellingStakeArrayReq.put_levelling_param)
  clear_has_put_levelling_param();
  ::middle_layer_pb::PutLevellingParam* temp = put_levelling_param_;
  put_levelling_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PutLevellingParam* CalLevellingStakeArrayReq::mutable_put_levelling_param() {
  set_has_put_levelling_param();
  if (put_levelling_param_ == NULL) {
    put_levelling_param_ = new ::middle_layer_pb::PutLevellingParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLevellingStakeArrayReq.put_levelling_param)
  return put_levelling_param_;
}
inline void CalLevellingStakeArrayReq::set_allocated_put_levelling_param(::middle_layer_pb::PutLevellingParam* put_levelling_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete put_levelling_param_;
  }
  if (put_levelling_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_levelling_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_levelling_param, submessage_arena);
    }
    set_has_put_levelling_param();
  } else {
    clear_has_put_levelling_param();
  }
  put_levelling_param_ = put_levelling_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLevellingStakeArrayReq.put_levelling_param)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
inline int CalLevellingStakeArrayReq::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalLevellingStakeArrayReq::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalLevellingStakeArrayReq::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalLevellingStakeArrayReq::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLevellingStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalLevellingStakeArrayReq::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalLevellingStakeArrayReq.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalLevellingStakeArrayReq::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalLevellingStakeArrayReq.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalLevellingStakeArrayReq::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalLevellingStakeArrayReq.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// CalLevellingStakeArrayRes

// required string id = 1;
inline bool CalLevellingStakeArrayRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalLevellingStakeArrayRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalLevellingStakeArrayRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalLevellingStakeArrayRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalLevellingStakeArrayRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayRes.id)
  return id_.GetNoArena();
}
inline void CalLevellingStakeArrayRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLevellingStakeArrayRes.id)
}
#if LANG_CXX11
inline void CalLevellingStakeArrayRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalLevellingStakeArrayRes.id)
}
#endif
inline void CalLevellingStakeArrayRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalLevellingStakeArrayRes.id)
}
inline void CalLevellingStakeArrayRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalLevellingStakeArrayRes.id)
}
inline ::std::string* CalLevellingStakeArrayRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLevellingStakeArrayRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalLevellingStakeArrayRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalLevellingStakeArrayRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalLevellingStakeArrayRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalLevellingStakeArrayRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalLevellingStakeArrayRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalLevellingStakeArrayRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalLevellingStakeArrayRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalLevellingStakeArrayRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalLevellingStakeArrayRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalLevellingStakeArrayRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalLevellingStakeArrayRes.code)
}

// repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
inline int CalLevellingStakeArrayRes::stake_dto_two_list_size() const {
  return stake_dto_two_list_.size();
}
inline void CalLevellingStakeArrayRes::clear_stake_dto_two_list() {
  stake_dto_two_list_.Clear();
}
inline const ::middle_layer_pb::StakeDtoList& CalLevellingStakeArrayRes::stake_dto_two_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalLevellingStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Get(index);
}
inline ::middle_layer_pb::StakeDtoList* CalLevellingStakeArrayRes::mutable_stake_dto_two_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalLevellingStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDtoList* CalLevellingStakeArrayRes::add_stake_dto_two_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalLevellingStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >*
CalLevellingStakeArrayRes::mutable_stake_dto_two_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalLevellingStakeArrayRes.stake_dto_two_list)
  return &stake_dto_two_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDtoList >&
CalLevellingStakeArrayRes::stake_dto_two_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalLevellingStakeArrayRes.stake_dto_two_list)
  return stake_dto_two_list_;
}

// -------------------------------------------------------------------

// CalStakesHelpReq

// required string id = 1;
inline bool CalStakesHelpReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalStakesHelpReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalStakesHelpReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalStakesHelpReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalStakesHelpReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpReq.id)
  return id_.GetNoArena();
}
inline void CalStakesHelpReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStakesHelpReq.id)
}
#if LANG_CXX11
inline void CalStakesHelpReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalStakesHelpReq.id)
}
#endif
inline void CalStakesHelpReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalStakesHelpReq.id)
}
inline void CalStakesHelpReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalStakesHelpReq.id)
}
inline ::std::string* CalStakesHelpReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalStakesHelpReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStakesHelpReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalStakesHelpReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStakesHelpReq.id)
}

// required string task_code = 2;
inline bool CalStakesHelpReq::has_task_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalStakesHelpReq::set_has_task_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalStakesHelpReq::clear_has_task_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalStakesHelpReq::clear_task_code() {
  task_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_task_code();
}
inline const ::std::string& CalStakesHelpReq::task_code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpReq.task_code)
  return task_code_.GetNoArena();
}
inline void CalStakesHelpReq::set_task_code(const ::std::string& value) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStakesHelpReq.task_code)
}
#if LANG_CXX11
inline void CalStakesHelpReq::set_task_code(::std::string&& value) {
  set_has_task_code();
  task_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalStakesHelpReq.task_code)
}
#endif
inline void CalStakesHelpReq::set_task_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalStakesHelpReq.task_code)
}
inline void CalStakesHelpReq::set_task_code(const char* value, size_t size) {
  set_has_task_code();
  task_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalStakesHelpReq.task_code)
}
inline ::std::string* CalStakesHelpReq::mutable_task_code() {
  set_has_task_code();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpReq.task_code)
  return task_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalStakesHelpReq::release_task_code() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStakesHelpReq.task_code)
  clear_has_task_code();
  return task_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalStakesHelpReq::set_allocated_task_code(::std::string* task_code) {
  if (task_code != NULL) {
    set_has_task_code();
  } else {
    clear_has_task_code();
  }
  task_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_code);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStakesHelpReq.task_code)
}

// required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
inline bool CalStakesHelpReq::has_draw_stakes_help_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CalStakesHelpReq::set_has_draw_stakes_help_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CalStakesHelpReq::clear_has_draw_stakes_help_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CalStakesHelpReq::clear_draw_stakes_help_param() {
  if (draw_stakes_help_param_ != NULL) draw_stakes_help_param_->Clear();
  clear_has_draw_stakes_help_param();
}
inline const ::middle_layer_pb::DrawStakesHelpParam& CalStakesHelpReq::draw_stakes_help_param() const {
  const ::middle_layer_pb::DrawStakesHelpParam* p = draw_stakes_help_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpReq.draw_stakes_help_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::DrawStakesHelpParam*>(
      &::middle_layer_pb::_DrawStakesHelpParam_default_instance_);
}
inline ::middle_layer_pb::DrawStakesHelpParam* CalStakesHelpReq::release_draw_stakes_help_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStakesHelpReq.draw_stakes_help_param)
  clear_has_draw_stakes_help_param();
  ::middle_layer_pb::DrawStakesHelpParam* temp = draw_stakes_help_param_;
  draw_stakes_help_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::DrawStakesHelpParam* CalStakesHelpReq::mutable_draw_stakes_help_param() {
  set_has_draw_stakes_help_param();
  if (draw_stakes_help_param_ == NULL) {
    draw_stakes_help_param_ = new ::middle_layer_pb::DrawStakesHelpParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpReq.draw_stakes_help_param)
  return draw_stakes_help_param_;
}
inline void CalStakesHelpReq::set_allocated_draw_stakes_help_param(::middle_layer_pb::DrawStakesHelpParam* draw_stakes_help_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete draw_stakes_help_param_;
  }
  if (draw_stakes_help_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      draw_stakes_help_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, draw_stakes_help_param, submessage_arena);
    }
    set_has_draw_stakes_help_param();
  } else {
    clear_has_draw_stakes_help_param();
  }
  draw_stakes_help_param_ = draw_stakes_help_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStakesHelpReq.draw_stakes_help_param)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
inline int CalStakesHelpReq::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalStakesHelpReq::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalStakesHelpReq::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpReq.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalStakesHelpReq::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpReq.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalStakesHelpReq::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalStakesHelpReq.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalStakesHelpReq::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalStakesHelpReq.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalStakesHelpReq::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalStakesHelpReq.stake_dto_list)
  return stake_dto_list_;
}

// required .middle_layer_pb.PointLLH pt = 5;
inline bool CalStakesHelpReq::has_pt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CalStakesHelpReq::set_has_pt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CalStakesHelpReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CalStakesHelpReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CalStakesHelpReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CalStakesHelpReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStakesHelpReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CalStakesHelpReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpReq.pt)
  return pt_;
}
inline void CalStakesHelpReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStakesHelpReq.pt)
}

// -------------------------------------------------------------------

// CalStakesHelpRes

// required string id = 1;
inline bool CalStakesHelpRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalStakesHelpRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalStakesHelpRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalStakesHelpRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CalStakesHelpRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpRes.id)
  return id_.GetNoArena();
}
inline void CalStakesHelpRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStakesHelpRes.id)
}
#if LANG_CXX11
inline void CalStakesHelpRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CalStakesHelpRes.id)
}
#endif
inline void CalStakesHelpRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CalStakesHelpRes.id)
}
inline void CalStakesHelpRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CalStakesHelpRes.id)
}
inline ::std::string* CalStakesHelpRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalStakesHelpRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CalStakesHelpRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalStakesHelpRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CalStakesHelpRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CalStakesHelpRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalStakesHelpRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalStakesHelpRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalStakesHelpRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CalStakesHelpRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CalStakesHelpRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CalStakesHelpRes.code)
}

// repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
inline int CalStakesHelpRes::stake_dto_list_size() const {
  return stake_dto_list_.size();
}
inline void CalStakesHelpRes::clear_stake_dto_list() {
  stake_dto_list_.Clear();
}
inline const ::middle_layer_pb::StakeDto& CalStakesHelpRes::stake_dto_list(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CalStakesHelpRes.stake_dto_list)
  return stake_dto_list_.Get(index);
}
inline ::middle_layer_pb::StakeDto* CalStakesHelpRes::mutable_stake_dto_list(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CalStakesHelpRes.stake_dto_list)
  return stake_dto_list_.Mutable(index);
}
inline ::middle_layer_pb::StakeDto* CalStakesHelpRes::add_stake_dto_list() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.CalStakesHelpRes.stake_dto_list)
  return stake_dto_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >*
CalStakesHelpRes::mutable_stake_dto_list() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.CalStakesHelpRes.stake_dto_list)
  return &stake_dto_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::StakeDto >&
CalStakesHelpRes::stake_dto_list() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.CalStakesHelpRes.stake_dto_list)
  return stake_dto_list_;
}

// -------------------------------------------------------------------

// RobotManualOperationReq

// required string id = 1;
inline bool RobotManualOperationReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotManualOperationReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotManualOperationReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotManualOperationReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotManualOperationReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationReq.id)
  return id_.GetNoArena();
}
inline void RobotManualOperationReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationReq.id)
}
#if LANG_CXX11
inline void RobotManualOperationReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotManualOperationReq.id)
}
#endif
inline void RobotManualOperationReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotManualOperationReq.id)
}
inline void RobotManualOperationReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotManualOperationReq.id)
}
inline ::std::string* RobotManualOperationReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotManualOperationReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotManualOperationReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotManualOperationReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotManualOperationReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotManualOperationReq.id)
}

// required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
inline bool RobotManualOperationReq::has_vertical_direction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotManualOperationReq::set_has_vertical_direction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotManualOperationReq::clear_has_vertical_direction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotManualOperationReq::clear_vertical_direction() {
  vertical_direction_ = 255;
  clear_has_vertical_direction();
}
inline ::middle_layer_pb::RobotManualOperationReq_enDirectionType RobotManualOperationReq::vertical_direction() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationReq.vertical_direction)
  return static_cast< ::middle_layer_pb::RobotManualOperationReq_enDirectionType >(vertical_direction_);
}
inline void RobotManualOperationReq::set_vertical_direction(::middle_layer_pb::RobotManualOperationReq_enDirectionType value) {
  assert(::middle_layer_pb::RobotManualOperationReq_enDirectionType_IsValid(value));
  set_has_vertical_direction();
  vertical_direction_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationReq.vertical_direction)
}

// required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
inline bool RobotManualOperationReq::has_horizontal_direction() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotManualOperationReq::set_has_horizontal_direction() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RobotManualOperationReq::clear_has_horizontal_direction() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RobotManualOperationReq::clear_horizontal_direction() {
  horizontal_direction_ = 255;
  clear_has_horizontal_direction();
}
inline ::middle_layer_pb::RobotManualOperationReq_enDirectionType RobotManualOperationReq::horizontal_direction() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationReq.horizontal_direction)
  return static_cast< ::middle_layer_pb::RobotManualOperationReq_enDirectionType >(horizontal_direction_);
}
inline void RobotManualOperationReq::set_horizontal_direction(::middle_layer_pb::RobotManualOperationReq_enDirectionType value) {
  assert(::middle_layer_pb::RobotManualOperationReq_enDirectionType_IsValid(value));
  set_has_horizontal_direction();
  horizontal_direction_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationReq.horizontal_direction)
}

// required double vertical_value = 4;
inline bool RobotManualOperationReq::has_vertical_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotManualOperationReq::set_has_vertical_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotManualOperationReq::clear_has_vertical_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotManualOperationReq::clear_vertical_value() {
  vertical_value_ = 0;
  clear_has_vertical_value();
}
inline double RobotManualOperationReq::vertical_value() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationReq.vertical_value)
  return vertical_value_;
}
inline void RobotManualOperationReq::set_vertical_value(double value) {
  set_has_vertical_value();
  vertical_value_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationReq.vertical_value)
}

// required double horizontal_value = 5;
inline bool RobotManualOperationReq::has_horizontal_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotManualOperationReq::set_has_horizontal_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotManualOperationReq::clear_has_horizontal_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotManualOperationReq::clear_horizontal_value() {
  horizontal_value_ = 0;
  clear_has_horizontal_value();
}
inline double RobotManualOperationReq::horizontal_value() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationReq.horizontal_value)
  return horizontal_value_;
}
inline void RobotManualOperationReq::set_horizontal_value(double value) {
  set_has_horizontal_value();
  horizontal_value_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationReq.horizontal_value)
}

// -------------------------------------------------------------------

// RobotManualOperationRes

// required string id = 1;
inline bool RobotManualOperationRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotManualOperationRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotManualOperationRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotManualOperationRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotManualOperationRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationRes.id)
  return id_.GetNoArena();
}
inline void RobotManualOperationRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationRes.id)
}
#if LANG_CXX11
inline void RobotManualOperationRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotManualOperationRes.id)
}
#endif
inline void RobotManualOperationRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotManualOperationRes.id)
}
inline void RobotManualOperationRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotManualOperationRes.id)
}
inline ::std::string* RobotManualOperationRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotManualOperationRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotManualOperationRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotManualOperationRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotManualOperationRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotManualOperationRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool RobotManualOperationRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotManualOperationRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotManualOperationRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotManualOperationRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode RobotManualOperationRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotManualOperationRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void RobotManualOperationRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotManualOperationRes.code)
}

// -------------------------------------------------------------------

// RobotAutopilotModeReq

// repeated .middle_layer_pb.PlaneCoordinatesParams plane_coordinates_params = 1;
inline int RobotAutopilotModeReq::plane_coordinates_params_size() const {
  return plane_coordinates_params_.size();
}
inline void RobotAutopilotModeReq::clear_plane_coordinates_params() {
  plane_coordinates_params_.Clear();
}
inline const ::middle_layer_pb::PlaneCoordinatesParams& RobotAutopilotModeReq::plane_coordinates_params(int index) const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotAutopilotModeReq.plane_coordinates_params)
  return plane_coordinates_params_.Get(index);
}
inline ::middle_layer_pb::PlaneCoordinatesParams* RobotAutopilotModeReq::mutable_plane_coordinates_params(int index) {
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotAutopilotModeReq.plane_coordinates_params)
  return plane_coordinates_params_.Mutable(index);
}
inline ::middle_layer_pb::PlaneCoordinatesParams* RobotAutopilotModeReq::add_plane_coordinates_params() {
  // @@protoc_insertion_point(field_add:middle_layer_pb.RobotAutopilotModeReq.plane_coordinates_params)
  return plane_coordinates_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::PlaneCoordinatesParams >*
RobotAutopilotModeReq::mutable_plane_coordinates_params() {
  // @@protoc_insertion_point(field_mutable_list:middle_layer_pb.RobotAutopilotModeReq.plane_coordinates_params)
  return &plane_coordinates_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::middle_layer_pb::PlaneCoordinatesParams >&
RobotAutopilotModeReq::plane_coordinates_params() const {
  // @@protoc_insertion_point(field_list:middle_layer_pb.RobotAutopilotModeReq.plane_coordinates_params)
  return plane_coordinates_params_;
}

// -------------------------------------------------------------------

// PlaneCoordinatesParams

// required double x = 1;
inline bool PlaneCoordinatesParams::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaneCoordinatesParams::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaneCoordinatesParams::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaneCoordinatesParams::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double PlaneCoordinatesParams::x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PlaneCoordinatesParams.x)
  return x_;
}
inline void PlaneCoordinatesParams::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PlaneCoordinatesParams.x)
}

// required double y = 2;
inline bool PlaneCoordinatesParams::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaneCoordinatesParams::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaneCoordinatesParams::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaneCoordinatesParams::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double PlaneCoordinatesParams::y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PlaneCoordinatesParams.y)
  return y_;
}
inline void PlaneCoordinatesParams::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PlaneCoordinatesParams.y)
}

// optional double Z = 3;
inline bool PlaneCoordinatesParams::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlaneCoordinatesParams::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlaneCoordinatesParams::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlaneCoordinatesParams::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double PlaneCoordinatesParams::z() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PlaneCoordinatesParams.Z)
  return z_;
}
inline void PlaneCoordinatesParams::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PlaneCoordinatesParams.Z)
}

// required double angle = 4;
inline bool PlaneCoordinatesParams::has_angle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlaneCoordinatesParams::set_has_angle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlaneCoordinatesParams::clear_has_angle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlaneCoordinatesParams::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline double PlaneCoordinatesParams::angle() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.PlaneCoordinatesParams.angle)
  return angle_;
}
inline void PlaneCoordinatesParams::set_angle(double value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.PlaneCoordinatesParams.angle)
}

// -------------------------------------------------------------------

// RobotAutopilotModeRes

// required string id = 1;
inline bool RobotAutopilotModeRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotAutopilotModeRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotAutopilotModeRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotAutopilotModeRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotAutopilotModeRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotAutopilotModeRes.id)
  return id_.GetNoArena();
}
inline void RobotAutopilotModeRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotAutopilotModeRes.id)
}
#if LANG_CXX11
inline void RobotAutopilotModeRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotAutopilotModeRes.id)
}
#endif
inline void RobotAutopilotModeRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotAutopilotModeRes.id)
}
inline void RobotAutopilotModeRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotAutopilotModeRes.id)
}
inline ::std::string* RobotAutopilotModeRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotAutopilotModeRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotAutopilotModeRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotAutopilotModeRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotAutopilotModeRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotAutopilotModeRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool RobotAutopilotModeRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotAutopilotModeRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotAutopilotModeRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotAutopilotModeRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode RobotAutopilotModeRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotAutopilotModeRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void RobotAutopilotModeRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotAutopilotModeRes.code)
}

// -------------------------------------------------------------------

// RobotDustingNotify

// required string id = 1;
inline bool RobotDustingNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotDustingNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotDustingNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotDustingNotify::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RobotDustingNotify::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotDustingNotify.id)
  return id_.GetNoArena();
}
inline void RobotDustingNotify::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotDustingNotify.id)
}
#if LANG_CXX11
inline void RobotDustingNotify::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.RobotDustingNotify.id)
}
#endif
inline void RobotDustingNotify::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.RobotDustingNotify.id)
}
inline void RobotDustingNotify::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.RobotDustingNotify.id)
}
inline ::std::string* RobotDustingNotify::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotDustingNotify.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotDustingNotify::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotDustingNotify.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotDustingNotify::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotDustingNotify.id)
}

// optional .middle_layer_pb.RobotSiloParams silo_params = 2;
inline bool RobotDustingNotify::has_silo_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotDustingNotify::set_has_silo_params() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotDustingNotify::clear_has_silo_params() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotDustingNotify::clear_silo_params() {
  if (silo_params_ != NULL) silo_params_->Clear();
  clear_has_silo_params();
}
inline const ::middle_layer_pb::RobotSiloParams& RobotDustingNotify::silo_params() const {
  const ::middle_layer_pb::RobotSiloParams* p = silo_params_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotDustingNotify.silo_params)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotSiloParams*>(
      &::middle_layer_pb::_RobotSiloParams_default_instance_);
}
inline ::middle_layer_pb::RobotSiloParams* RobotDustingNotify::release_silo_params() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotDustingNotify.silo_params)
  clear_has_silo_params();
  ::middle_layer_pb::RobotSiloParams* temp = silo_params_;
  silo_params_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotSiloParams* RobotDustingNotify::mutable_silo_params() {
  set_has_silo_params();
  if (silo_params_ == NULL) {
    silo_params_ = new ::middle_layer_pb::RobotSiloParams;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotDustingNotify.silo_params)
  return silo_params_;
}
inline void RobotDustingNotify::set_allocated_silo_params(::middle_layer_pb::RobotSiloParams* silo_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete silo_params_;
  }
  if (silo_params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      silo_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, silo_params, submessage_arena);
    }
    set_has_silo_params();
  } else {
    clear_has_silo_params();
  }
  silo_params_ = silo_params;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotDustingNotify.silo_params)
}

// required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
inline bool RobotDustingNotify::has_dusting_slider_params() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotDustingNotify::set_has_dusting_slider_params() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotDustingNotify::clear_has_dusting_slider_params() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotDustingNotify::clear_dusting_slider_params() {
  if (dusting_slider_params_ != NULL) dusting_slider_params_->Clear();
  clear_has_dusting_slider_params();
}
inline const ::middle_layer_pb::RobotDustingSliderParams& RobotDustingNotify::dusting_slider_params() const {
  const ::middle_layer_pb::RobotDustingSliderParams* p = dusting_slider_params_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotDustingNotify.dusting_slider_params)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::RobotDustingSliderParams*>(
      &::middle_layer_pb::_RobotDustingSliderParams_default_instance_);
}
inline ::middle_layer_pb::RobotDustingSliderParams* RobotDustingNotify::release_dusting_slider_params() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.RobotDustingNotify.dusting_slider_params)
  clear_has_dusting_slider_params();
  ::middle_layer_pb::RobotDustingSliderParams* temp = dusting_slider_params_;
  dusting_slider_params_ = NULL;
  return temp;
}
inline ::middle_layer_pb::RobotDustingSliderParams* RobotDustingNotify::mutable_dusting_slider_params() {
  set_has_dusting_slider_params();
  if (dusting_slider_params_ == NULL) {
    dusting_slider_params_ = new ::middle_layer_pb::RobotDustingSliderParams;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.RobotDustingNotify.dusting_slider_params)
  return dusting_slider_params_;
}
inline void RobotDustingNotify::set_allocated_dusting_slider_params(::middle_layer_pb::RobotDustingSliderParams* dusting_slider_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dusting_slider_params_;
  }
  if (dusting_slider_params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dusting_slider_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dusting_slider_params, submessage_arena);
    }
    set_has_dusting_slider_params();
  } else {
    clear_has_dusting_slider_params();
  }
  dusting_slider_params_ = dusting_slider_params;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.RobotDustingNotify.dusting_slider_params)
}

// required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
inline bool RobotDustingNotify::has_dusting_switch_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotDustingNotify::set_has_dusting_switch_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotDustingNotify::clear_has_dusting_switch_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotDustingNotify::clear_dusting_switch_type() {
  dusting_switch_type_ = 0;
  clear_has_dusting_switch_type();
}
inline ::middle_layer_pb::RobotDustingNotify_DustingSwitchType RobotDustingNotify::dusting_switch_type() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotDustingNotify.dusting_switch_type)
  return static_cast< ::middle_layer_pb::RobotDustingNotify_DustingSwitchType >(dusting_switch_type_);
}
inline void RobotDustingNotify::set_dusting_switch_type(::middle_layer_pb::RobotDustingNotify_DustingSwitchType value) {
  assert(::middle_layer_pb::RobotDustingNotify_DustingSwitchType_IsValid(value));
  set_has_dusting_switch_type();
  dusting_switch_type_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotDustingNotify.dusting_switch_type)
}

// -------------------------------------------------------------------

// RobotSiloParams

// required double powder_total = 1;
inline bool RobotSiloParams::has_powder_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotSiloParams::set_has_powder_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotSiloParams::clear_has_powder_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotSiloParams::clear_powder_total() {
  powder_total_ = 0;
  clear_has_powder_total();
}
inline double RobotSiloParams::powder_total() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotSiloParams.powder_total)
  return powder_total_;
}
inline void RobotSiloParams::set_powder_total(double value) {
  set_has_powder_total();
  powder_total_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotSiloParams.powder_total)
}

// required double powder_margin = 2;
inline bool RobotSiloParams::has_powder_margin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotSiloParams::set_has_powder_margin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotSiloParams::clear_has_powder_margin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotSiloParams::clear_powder_margin() {
  powder_margin_ = 0;
  clear_has_powder_margin();
}
inline double RobotSiloParams::powder_margin() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotSiloParams.powder_margin)
  return powder_margin_;
}
inline void RobotSiloParams::set_powder_margin(double value) {
  set_has_powder_margin();
  powder_margin_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotSiloParams.powder_margin)
}

// -------------------------------------------------------------------

// RobotDustingSliderParams

// required double offset_x = 1;
inline bool RobotDustingSliderParams::has_offset_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotDustingSliderParams::set_has_offset_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotDustingSliderParams::clear_has_offset_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotDustingSliderParams::clear_offset_x() {
  offset_x_ = 0;
  clear_has_offset_x();
}
inline double RobotDustingSliderParams::offset_x() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotDustingSliderParams.offset_x)
  return offset_x_;
}
inline void RobotDustingSliderParams::set_offset_x(double value) {
  set_has_offset_x();
  offset_x_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotDustingSliderParams.offset_x)
}

// required double offset_y = 2;
inline bool RobotDustingSliderParams::has_offset_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotDustingSliderParams::set_has_offset_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotDustingSliderParams::clear_has_offset_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotDustingSliderParams::clear_offset_y() {
  offset_y_ = 0;
  clear_has_offset_y();
}
inline double RobotDustingSliderParams::offset_y() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.RobotDustingSliderParams.offset_y)
  return offset_y_;
}
inline void RobotDustingSliderParams::set_offset_y(double value) {
  set_has_offset_y();
  offset_y_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.RobotDustingSliderParams.offset_y)
}

// -------------------------------------------------------------------

// FourParam

// required double dx = 1;
inline bool FourParam::has_dx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FourParam::set_has_dx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FourParam::clear_has_dx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FourParam::clear_dx() {
  dx_ = 0;
  clear_has_dx();
}
inline double FourParam::dx() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.FourParam.dx)
  return dx_;
}
inline void FourParam::set_dx(double value) {
  set_has_dx();
  dx_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.FourParam.dx)
}

// required double dy = 2;
inline bool FourParam::has_dy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FourParam::set_has_dy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FourParam::clear_has_dy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FourParam::clear_dy() {
  dy_ = 0;
  clear_has_dy();
}
inline double FourParam::dy() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.FourParam.dy)
  return dy_;
}
inline void FourParam::set_dy(double value) {
  set_has_dy();
  dy_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.FourParam.dy)
}

// required double scale = 3;
inline bool FourParam::has_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FourParam::set_has_scale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FourParam::clear_has_scale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FourParam::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline double FourParam::scale() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.FourParam.scale)
  return scale_;
}
inline void FourParam::set_scale(double value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.FourParam.scale)
}

// required double rotate = 4;
inline bool FourParam::has_rotate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FourParam::set_has_rotate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FourParam::clear_has_rotate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FourParam::clear_rotate() {
  rotate_ = 0;
  clear_has_rotate();
}
inline double FourParam::rotate() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.FourParam.rotate)
  return rotate_;
}
inline void FourParam::set_rotate(double value) {
  set_has_rotate();
  rotate_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.FourParam.rotate)
}

// -------------------------------------------------------------------

// ProjectionParam

// required string projection_name = 1;
inline bool ProjectionParam::has_projection_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProjectionParam::set_has_projection_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProjectionParam::clear_has_projection_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProjectionParam::clear_projection_name() {
  projection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_projection_name();
}
inline const ::std::string& ProjectionParam::projection_name() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.projection_name)
  return projection_name_.GetNoArena();
}
inline void ProjectionParam::set_projection_name(const ::std::string& value) {
  set_has_projection_name();
  projection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.projection_name)
}
#if LANG_CXX11
inline void ProjectionParam::set_projection_name(::std::string&& value) {
  set_has_projection_name();
  projection_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.ProjectionParam.projection_name)
}
#endif
inline void ProjectionParam::set_projection_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_projection_name();
  projection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.ProjectionParam.projection_name)
}
inline void ProjectionParam::set_projection_name(const char* value, size_t size) {
  set_has_projection_name();
  projection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.ProjectionParam.projection_name)
}
inline ::std::string* ProjectionParam::mutable_projection_name() {
  set_has_projection_name();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.ProjectionParam.projection_name)
  return projection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectionParam::release_projection_name() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.ProjectionParam.projection_name)
  clear_has_projection_name();
  return projection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectionParam::set_allocated_projection_name(::std::string* projection_name) {
  if (projection_name != NULL) {
    set_has_projection_name();
  } else {
    clear_has_projection_name();
  }
  projection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), projection_name);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.ProjectionParam.projection_name)
}

// required double scale_factor = 2;
inline bool ProjectionParam::has_scale_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProjectionParam::set_has_scale_factor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProjectionParam::clear_has_scale_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProjectionParam::clear_scale_factor() {
  scale_factor_ = 0;
  clear_has_scale_factor();
}
inline double ProjectionParam::scale_factor() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.scale_factor)
  return scale_factor_;
}
inline void ProjectionParam::set_scale_factor(double value) {
  set_has_scale_factor();
  scale_factor_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.scale_factor)
}

// required double central_meridian = 3;
inline bool ProjectionParam::has_central_meridian() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProjectionParam::set_has_central_meridian() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProjectionParam::clear_has_central_meridian() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProjectionParam::clear_central_meridian() {
  central_meridian_ = 0;
  clear_has_central_meridian();
}
inline double ProjectionParam::central_meridian() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.central_meridian)
  return central_meridian_;
}
inline void ProjectionParam::set_central_meridian(double value) {
  set_has_central_meridian();
  central_meridian_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.central_meridian)
}

// required double latitude_of_origin = 4;
inline bool ProjectionParam::has_latitude_of_origin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProjectionParam::set_has_latitude_of_origin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProjectionParam::clear_has_latitude_of_origin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProjectionParam::clear_latitude_of_origin() {
  latitude_of_origin_ = 0;
  clear_has_latitude_of_origin();
}
inline double ProjectionParam::latitude_of_origin() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.latitude_of_origin)
  return latitude_of_origin_;
}
inline void ProjectionParam::set_latitude_of_origin(double value) {
  set_has_latitude_of_origin();
  latitude_of_origin_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.latitude_of_origin)
}

// required double false_easting = 5;
inline bool ProjectionParam::has_false_easting() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProjectionParam::set_has_false_easting() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProjectionParam::clear_has_false_easting() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProjectionParam::clear_false_easting() {
  false_easting_ = 0;
  clear_has_false_easting();
}
inline double ProjectionParam::false_easting() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.false_easting)
  return false_easting_;
}
inline void ProjectionParam::set_false_easting(double value) {
  set_has_false_easting();
  false_easting_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.false_easting)
}

// required double false_northing = 6;
inline bool ProjectionParam::has_false_northing() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProjectionParam::set_has_false_northing() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProjectionParam::clear_has_false_northing() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProjectionParam::clear_false_northing() {
  false_northing_ = 0;
  clear_has_false_northing();
}
inline double ProjectionParam::false_northing() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.false_northing)
  return false_northing_;
}
inline void ProjectionParam::set_false_northing(double value) {
  set_has_false_northing();
  false_northing_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.false_northing)
}

// required double height = 7;
inline bool ProjectionParam::has_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProjectionParam::set_has_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProjectionParam::clear_has_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProjectionParam::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double ProjectionParam::height() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.ProjectionParam.height)
  return height_;
}
inline void ProjectionParam::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.ProjectionParam.height)
}

// -------------------------------------------------------------------

// EllipsoidParam

// required string ellipsoid_name = 1;
inline bool EllipsoidParam::has_ellipsoid_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EllipsoidParam::set_has_ellipsoid_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EllipsoidParam::clear_has_ellipsoid_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EllipsoidParam::clear_ellipsoid_name() {
  ellipsoid_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ellipsoid_name();
}
inline const ::std::string& EllipsoidParam::ellipsoid_name() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.EllipsoidParam.ellipsoid_name)
  return ellipsoid_name_.GetNoArena();
}
inline void EllipsoidParam::set_ellipsoid_name(const ::std::string& value) {
  set_has_ellipsoid_name();
  ellipsoid_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.EllipsoidParam.ellipsoid_name)
}
#if LANG_CXX11
inline void EllipsoidParam::set_ellipsoid_name(::std::string&& value) {
  set_has_ellipsoid_name();
  ellipsoid_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.EllipsoidParam.ellipsoid_name)
}
#endif
inline void EllipsoidParam::set_ellipsoid_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ellipsoid_name();
  ellipsoid_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.EllipsoidParam.ellipsoid_name)
}
inline void EllipsoidParam::set_ellipsoid_name(const char* value, size_t size) {
  set_has_ellipsoid_name();
  ellipsoid_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.EllipsoidParam.ellipsoid_name)
}
inline ::std::string* EllipsoidParam::mutable_ellipsoid_name() {
  set_has_ellipsoid_name();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.EllipsoidParam.ellipsoid_name)
  return ellipsoid_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EllipsoidParam::release_ellipsoid_name() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.EllipsoidParam.ellipsoid_name)
  clear_has_ellipsoid_name();
  return ellipsoid_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EllipsoidParam::set_allocated_ellipsoid_name(::std::string* ellipsoid_name) {
  if (ellipsoid_name != NULL) {
    set_has_ellipsoid_name();
  } else {
    clear_has_ellipsoid_name();
  }
  ellipsoid_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ellipsoid_name);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.EllipsoidParam.ellipsoid_name)
}

// required double macro_axis = 2;
inline bool EllipsoidParam::has_macro_axis() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EllipsoidParam::set_has_macro_axis() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EllipsoidParam::clear_has_macro_axis() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EllipsoidParam::clear_macro_axis() {
  macro_axis_ = 0;
  clear_has_macro_axis();
}
inline double EllipsoidParam::macro_axis() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.EllipsoidParam.macro_axis)
  return macro_axis_;
}
inline void EllipsoidParam::set_macro_axis(double value) {
  set_has_macro_axis();
  macro_axis_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.EllipsoidParam.macro_axis)
}

// required double minor_axis = 3;
inline bool EllipsoidParam::has_minor_axis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EllipsoidParam::set_has_minor_axis() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EllipsoidParam::clear_has_minor_axis() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EllipsoidParam::clear_minor_axis() {
  minor_axis_ = 0;
  clear_has_minor_axis();
}
inline double EllipsoidParam::minor_axis() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.EllipsoidParam.minor_axis)
  return minor_axis_;
}
inline void EllipsoidParam::set_minor_axis(double value) {
  set_has_minor_axis();
  minor_axis_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.EllipsoidParam.minor_axis)
}

// required double flattening = 4;
inline bool EllipsoidParam::has_flattening() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EllipsoidParam::set_has_flattening() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EllipsoidParam::clear_has_flattening() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EllipsoidParam::clear_flattening() {
  flattening_ = 0;
  clear_has_flattening();
}
inline double EllipsoidParam::flattening() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.EllipsoidParam.flattening)
  return flattening_;
}
inline void EllipsoidParam::set_flattening(double value) {
  set_has_flattening();
  flattening_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.EllipsoidParam.flattening)
}

// -------------------------------------------------------------------

// CoordinateCalibrationReq

// required string id = 1;
inline bool CoordinateCalibrationReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoordinateCalibrationReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoordinateCalibrationReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoordinateCalibrationReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CoordinateCalibrationReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationReq.id)
  return id_.GetNoArena();
}
inline void CoordinateCalibrationReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CoordinateCalibrationReq.id)
}
#if LANG_CXX11
inline void CoordinateCalibrationReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CoordinateCalibrationReq.id)
}
#endif
inline void CoordinateCalibrationReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CoordinateCalibrationReq.id)
}
inline void CoordinateCalibrationReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CoordinateCalibrationReq.id)
}
inline ::std::string* CoordinateCalibrationReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CoordinateCalibrationReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordinateCalibrationReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CoordinateCalibrationReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordinateCalibrationReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CoordinateCalibrationReq.id)
}

// required .middle_layer_pb.PointLLH pt = 2;
inline bool CoordinateCalibrationReq::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoordinateCalibrationReq::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoordinateCalibrationReq::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoordinateCalibrationReq::clear_pt() {
  if (pt_ != NULL) pt_->Clear();
  clear_has_pt();
}
inline const ::middle_layer_pb::PointLLH& CoordinateCalibrationReq::pt() const {
  const ::middle_layer_pb::PointLLH* p = pt_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationReq.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::PointLLH*>(
      &::middle_layer_pb::_PointLLH_default_instance_);
}
inline ::middle_layer_pb::PointLLH* CoordinateCalibrationReq::release_pt() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CoordinateCalibrationReq.pt)
  clear_has_pt();
  ::middle_layer_pb::PointLLH* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline ::middle_layer_pb::PointLLH* CoordinateCalibrationReq::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::middle_layer_pb::PointLLH;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CoordinateCalibrationReq.pt)
  return pt_;
}
inline void CoordinateCalibrationReq::set_allocated_pt(::middle_layer_pb::PointLLH* pt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pt_;
  }
  if (pt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    set_has_pt();
  } else {
    clear_has_pt();
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CoordinateCalibrationReq.pt)
}

// required .middle_layer_pb.FourParam four_param = 3;
inline bool CoordinateCalibrationReq::has_four_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoordinateCalibrationReq::set_has_four_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoordinateCalibrationReq::clear_has_four_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoordinateCalibrationReq::clear_four_param() {
  if (four_param_ != NULL) four_param_->Clear();
  clear_has_four_param();
}
inline const ::middle_layer_pb::FourParam& CoordinateCalibrationReq::four_param() const {
  const ::middle_layer_pb::FourParam* p = four_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationReq.four_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::FourParam*>(
      &::middle_layer_pb::_FourParam_default_instance_);
}
inline ::middle_layer_pb::FourParam* CoordinateCalibrationReq::release_four_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CoordinateCalibrationReq.four_param)
  clear_has_four_param();
  ::middle_layer_pb::FourParam* temp = four_param_;
  four_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::FourParam* CoordinateCalibrationReq::mutable_four_param() {
  set_has_four_param();
  if (four_param_ == NULL) {
    four_param_ = new ::middle_layer_pb::FourParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CoordinateCalibrationReq.four_param)
  return four_param_;
}
inline void CoordinateCalibrationReq::set_allocated_four_param(::middle_layer_pb::FourParam* four_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete four_param_;
  }
  if (four_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      four_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, four_param, submessage_arena);
    }
    set_has_four_param();
  } else {
    clear_has_four_param();
  }
  four_param_ = four_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CoordinateCalibrationReq.four_param)
}

// required double elevation_fitting = 4;
inline bool CoordinateCalibrationReq::has_elevation_fitting() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CoordinateCalibrationReq::set_has_elevation_fitting() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CoordinateCalibrationReq::clear_has_elevation_fitting() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CoordinateCalibrationReq::clear_elevation_fitting() {
  elevation_fitting_ = 0;
  clear_has_elevation_fitting();
}
inline double CoordinateCalibrationReq::elevation_fitting() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationReq.elevation_fitting)
  return elevation_fitting_;
}
inline void CoordinateCalibrationReq::set_elevation_fitting(double value) {
  set_has_elevation_fitting();
  elevation_fitting_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CoordinateCalibrationReq.elevation_fitting)
}

// required .middle_layer_pb.ProjectionParam projection_param = 5;
inline bool CoordinateCalibrationReq::has_projection_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CoordinateCalibrationReq::set_has_projection_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CoordinateCalibrationReq::clear_has_projection_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CoordinateCalibrationReq::clear_projection_param() {
  if (projection_param_ != NULL) projection_param_->Clear();
  clear_has_projection_param();
}
inline const ::middle_layer_pb::ProjectionParam& CoordinateCalibrationReq::projection_param() const {
  const ::middle_layer_pb::ProjectionParam* p = projection_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationReq.projection_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::ProjectionParam*>(
      &::middle_layer_pb::_ProjectionParam_default_instance_);
}
inline ::middle_layer_pb::ProjectionParam* CoordinateCalibrationReq::release_projection_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CoordinateCalibrationReq.projection_param)
  clear_has_projection_param();
  ::middle_layer_pb::ProjectionParam* temp = projection_param_;
  projection_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::ProjectionParam* CoordinateCalibrationReq::mutable_projection_param() {
  set_has_projection_param();
  if (projection_param_ == NULL) {
    projection_param_ = new ::middle_layer_pb::ProjectionParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CoordinateCalibrationReq.projection_param)
  return projection_param_;
}
inline void CoordinateCalibrationReq::set_allocated_projection_param(::middle_layer_pb::ProjectionParam* projection_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete projection_param_;
  }
  if (projection_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      projection_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, projection_param, submessage_arena);
    }
    set_has_projection_param();
  } else {
    clear_has_projection_param();
  }
  projection_param_ = projection_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CoordinateCalibrationReq.projection_param)
}

// required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
inline bool CoordinateCalibrationReq::has_ellipsoid_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CoordinateCalibrationReq::set_has_ellipsoid_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CoordinateCalibrationReq::clear_has_ellipsoid_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CoordinateCalibrationReq::clear_ellipsoid_param() {
  if (ellipsoid_param_ != NULL) ellipsoid_param_->Clear();
  clear_has_ellipsoid_param();
}
inline const ::middle_layer_pb::EllipsoidParam& CoordinateCalibrationReq::ellipsoid_param() const {
  const ::middle_layer_pb::EllipsoidParam* p = ellipsoid_param_;
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationReq.ellipsoid_param)
  return p != NULL ? *p : *reinterpret_cast<const ::middle_layer_pb::EllipsoidParam*>(
      &::middle_layer_pb::_EllipsoidParam_default_instance_);
}
inline ::middle_layer_pb::EllipsoidParam* CoordinateCalibrationReq::release_ellipsoid_param() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CoordinateCalibrationReq.ellipsoid_param)
  clear_has_ellipsoid_param();
  ::middle_layer_pb::EllipsoidParam* temp = ellipsoid_param_;
  ellipsoid_param_ = NULL;
  return temp;
}
inline ::middle_layer_pb::EllipsoidParam* CoordinateCalibrationReq::mutable_ellipsoid_param() {
  set_has_ellipsoid_param();
  if (ellipsoid_param_ == NULL) {
    ellipsoid_param_ = new ::middle_layer_pb::EllipsoidParam;
  }
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CoordinateCalibrationReq.ellipsoid_param)
  return ellipsoid_param_;
}
inline void CoordinateCalibrationReq::set_allocated_ellipsoid_param(::middle_layer_pb::EllipsoidParam* ellipsoid_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ellipsoid_param_;
  }
  if (ellipsoid_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ellipsoid_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ellipsoid_param, submessage_arena);
    }
    set_has_ellipsoid_param();
  } else {
    clear_has_ellipsoid_param();
  }
  ellipsoid_param_ = ellipsoid_param;
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CoordinateCalibrationReq.ellipsoid_param)
}

// -------------------------------------------------------------------

// CoordinateCalibrationRes

// required string id = 1;
inline bool CoordinateCalibrationRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoordinateCalibrationRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoordinateCalibrationRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoordinateCalibrationRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& CoordinateCalibrationRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationRes.id)
  return id_.GetNoArena();
}
inline void CoordinateCalibrationRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.CoordinateCalibrationRes.id)
}
#if LANG_CXX11
inline void CoordinateCalibrationRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.CoordinateCalibrationRes.id)
}
#endif
inline void CoordinateCalibrationRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.CoordinateCalibrationRes.id)
}
inline void CoordinateCalibrationRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.CoordinateCalibrationRes.id)
}
inline ::std::string* CoordinateCalibrationRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.CoordinateCalibrationRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordinateCalibrationRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.CoordinateCalibrationRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordinateCalibrationRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.CoordinateCalibrationRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool CoordinateCalibrationRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoordinateCalibrationRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoordinateCalibrationRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoordinateCalibrationRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode CoordinateCalibrationRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.CoordinateCalibrationRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void CoordinateCalibrationRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.CoordinateCalibrationRes.code)
}

// -------------------------------------------------------------------

// WriteWordReq

// required string id = 1;
inline bool WriteWordReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteWordReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteWordReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteWordReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& WriteWordReq::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WriteWordReq.id)
  return id_.GetNoArena();
}
inline void WriteWordReq::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.WriteWordReq.id)
}
#if LANG_CXX11
inline void WriteWordReq::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.WriteWordReq.id)
}
#endif
inline void WriteWordReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.WriteWordReq.id)
}
inline void WriteWordReq::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.WriteWordReq.id)
}
inline ::std::string* WriteWordReq::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WriteWordReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteWordReq::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WriteWordReq.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteWordReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WriteWordReq.id)
}

// required string word = 2;
inline bool WriteWordReq::has_word() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteWordReq::set_has_word() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteWordReq::clear_has_word() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteWordReq::clear_word() {
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_word();
}
inline const ::std::string& WriteWordReq::word() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WriteWordReq.word)
  return word_.GetNoArena();
}
inline void WriteWordReq::set_word(const ::std::string& value) {
  set_has_word();
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.WriteWordReq.word)
}
#if LANG_CXX11
inline void WriteWordReq::set_word(::std::string&& value) {
  set_has_word();
  word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.WriteWordReq.word)
}
#endif
inline void WriteWordReq::set_word(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_word();
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.WriteWordReq.word)
}
inline void WriteWordReq::set_word(const char* value, size_t size) {
  set_has_word();
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.WriteWordReq.word)
}
inline ::std::string* WriteWordReq::mutable_word() {
  set_has_word();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WriteWordReq.word)
  return word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteWordReq::release_word() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WriteWordReq.word)
  clear_has_word();
  return word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteWordReq::set_allocated_word(::std::string* word) {
  if (word != NULL) {
    set_has_word();
  } else {
    clear_has_word();
  }
  word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), word);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WriteWordReq.word)
}

// -------------------------------------------------------------------

// WriteWordRes

// required string id = 1;
inline bool WriteWordRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteWordRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteWordRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteWordRes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& WriteWordRes::id() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WriteWordRes.id)
  return id_.GetNoArena();
}
inline void WriteWordRes::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:middle_layer_pb.WriteWordRes.id)
}
#if LANG_CXX11
inline void WriteWordRes::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:middle_layer_pb.WriteWordRes.id)
}
#endif
inline void WriteWordRes::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:middle_layer_pb.WriteWordRes.id)
}
inline void WriteWordRes::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:middle_layer_pb.WriteWordRes.id)
}
inline ::std::string* WriteWordRes::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:middle_layer_pb.WriteWordRes.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteWordRes::release_id() {
  // @@protoc_insertion_point(field_release:middle_layer_pb.WriteWordRes.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteWordRes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:middle_layer_pb.WriteWordRes.id)
}

// optional .middle_layer_pb.ErrorCode code = 2;
inline bool WriteWordRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteWordRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteWordRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteWordRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::middle_layer_pb::ErrorCode WriteWordRes::code() const {
  // @@protoc_insertion_point(field_get:middle_layer_pb.WriteWordRes.code)
  return static_cast< ::middle_layer_pb::ErrorCode >(code_);
}
inline void WriteWordRes::set_code(::middle_layer_pb::ErrorCode value) {
  assert(::middle_layer_pb::ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:middle_layer_pb.WriteWordRes.code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace middle_layer_pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::middle_layer_pb::RobotCoreState_AgxVehicleState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::RobotCoreState_AgxVehicleState>() {
  return ::middle_layer_pb::RobotCoreState_AgxVehicleState_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::RobotCoreState_AgxControlMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::RobotCoreState_AgxControlMode>() {
  return ::middle_layer_pb::RobotCoreState_AgxControlMode_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState>() {
  return ::middle_layer_pb::RobotCoreState_AgxRcSwitchState_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::TaskState_enState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::TaskState_enState>() {
  return ::middle_layer_pb::TaskState_enState_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::RtkOperationCmdReq_enOperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::RtkOperationCmdReq_enOperationType>() {
  return ::middle_layer_pb::RtkOperationCmdReq_enOperationType_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::RobotManualOperationReq_enDirectionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::RobotManualOperationReq_enDirectionType>() {
  return ::middle_layer_pb::RobotManualOperationReq_enDirectionType_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::RobotDustingNotify_DustingSwitchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::RobotDustingNotify_DustingSwitchType>() {
  return ::middle_layer_pb::RobotDustingNotify_DustingSwitchType_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::ErrorCode>() {
  return ::middle_layer_pb::ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::WorkType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::WorkType>() {
  return ::middle_layer_pb::WorkType_descriptor();
}
template <> struct is_proto_enum< ::middle_layer_pb::enOperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::middle_layer_pb::enOperationType>() {
  return ::middle_layer_pb::enOperationType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_middle_5flayer_2eproto__INCLUDED
