// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: middle_layer.proto

#include "middle_layer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace middle_layer_pb {
class QueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Query>
      _instance;
} _Query_default_instance_;
class AnswerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Answer>
      _instance;
} _Answer_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class PointENUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointENU>
      _instance;
} _PointENU_default_instance_;
class PointLLHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointLLH>
      _instance;
} _PointLLH_default_instance_;
class Point2DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point2D>
      _instance;
} _Point2D_default_instance_;
class Point3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3D>
      _instance;
} _Point3D_default_instance_;
class QuaternionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quaternion>
      _instance;
} _Quaternion_default_instance_;
class ImuAccelMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImuAccelMessage>
      _instance;
} _ImuAccelMessage_default_instance_;
class ImuGyroMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImuGyroMessage>
      _instance;
} _ImuGyroMessage_default_instance_;
class ImuEulerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImuEulerMessage>
      _instance;
} _ImuEulerMessage_default_instance_;
class RobotCoreStateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreStateReq>
      _instance;
} _RobotCoreStateReq_default_instance_;
class RobotCoreState_SystemStateMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreState_SystemStateMessage>
      _instance;
} _RobotCoreState_SystemStateMessage_default_instance_;
class RobotCoreState_MotionStateMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreState_MotionStateMessage>
      _instance;
} _RobotCoreState_MotionStateMessage_default_instance_;
class RobotCoreState_RcStateMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreState_RcStateMessage>
      _instance;
} _RobotCoreState_RcStateMessage_default_instance_;
class RobotCoreState_BmsBasicMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreState_BmsBasicMessage>
      _instance;
} _RobotCoreState_BmsBasicMessage_default_instance_;
class RobotCoreState_OdometryMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreState_OdometryMessage>
      _instance;
} _RobotCoreState_OdometryMessage_default_instance_;
class RobotCoreStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreState>
      _instance;
} _RobotCoreState_default_instance_;
class RobotCoreStateResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreStateRes>
      _instance;
} _RobotCoreStateRes_default_instance_;
class RobotCoreStateNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotCoreStateNotify>
      _instance;
} _RobotCoreStateNotify_default_instance_;
class AppLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppLoginReq>
      _instance;
} _AppLoginReq_default_instance_;
class AppLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppLoginRes>
      _instance;
} _AppLoginRes_default_instance_;
class RobotLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotLoginReq>
      _instance;
} _RobotLoginReq_default_instance_;
class RobotLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotLoginRes>
      _instance;
} _RobotLoginRes_default_instance_;
class CloudLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudLoginReq>
      _instance;
} _CloudLoginReq_default_instance_;
class CloudLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloudLoginRes>
      _instance;
} _CloudLoginRes_default_instance_;
class LaserResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaserResult>
      _instance;
} _LaserResult_default_instance_;
class RtkResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtkResult>
      _instance;
} _RtkResult_default_instance_;
class RtkDataSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtkDataSource>
      _instance;
} _RtkDataSource_default_instance_;
class SensorInfoNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorInfoNotify>
      _instance;
} _SensorInfoNotify_default_instance_;
class MeasureResultNotify_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeasureResultNotify_Point>
      _instance;
} _MeasureResultNotify_Point_default_instance_;
class MeasureResultNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeasureResultNotify>
      _instance;
} _MeasureResultNotify_default_instance_;
class TaskStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskState>
      _instance;
} _TaskState_default_instance_;
class TaskStateNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskStateNotify>
      _instance;
} _TaskStateNotify_default_instance_;
class TargetTrackNotify_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetTrackNotify_Point>
      _instance;
} _TargetTrackNotify_Point_default_instance_;
class TargetTrackNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetTrackNotify>
      _instance;
} _TargetTrackNotify_default_instance_;
class RtkOperationCmdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtkOperationCmdReq>
      _instance;
} _RtkOperationCmdReq_default_instance_;
class RtkOperationCmdResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtkOperationCmdRes>
      _instance;
} _RtkOperationCmdRes_default_instance_;
class RtkOffsetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtkOffsetInfo>
      _instance;
} _RtkOffsetInfo_default_instance_;
class WorkMessageIssuedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkMessageIssued>
      _instance;
} _WorkMessageIssued_default_instance_;
class WorkMessageIssuedResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkMessageIssuedRes>
      _instance;
} _WorkMessageIssuedRes_default_instance_;
class DeviceTaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceTask>
      _instance;
} _DeviceTask_default_instance_;
class StakeDtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StakeDto>
      _instance;
} _StakeDto_default_instance_;
class StakeDtoListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StakeDtoList>
      _instance;
} _StakeDtoList_default_instance_;
class StakeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StakeInfo>
      _instance;
} _StakeInfo_default_instance_;
class StakeDtoListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StakeDtoListReq>
      _instance;
} _StakeDtoListReq_default_instance_;
class StakeDtoListResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StakeDtoListRes>
      _instance;
} _StakeDtoListRes_default_instance_;
class PutSideLineParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutSideLineParam>
      _instance;
} _PutSideLineParam_default_instance_;
class PutMidLineParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutMidLineParam>
      _instance;
} _PutMidLineParam_default_instance_;
class PutLevellingParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutLevellingParam>
      _instance;
} _PutLevellingParam_default_instance_;
class PutLaneLineParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutLaneLineParam>
      _instance;
} _PutLaneLineParam_default_instance_;
class PutCrossSectionParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutCrossSectionParam>
      _instance;
} _PutCrossSectionParam_default_instance_;
class DrawStandardSquareParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DrawStandardSquareParam>
      _instance;
} _DrawStandardSquareParam_default_instance_;
class DrawSideLineParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DrawSideLineParam>
      _instance;
} _DrawSideLineParam_default_instance_;
class DrawMidLineParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DrawMidLineParam>
      _instance;
} _DrawMidLineParam_default_instance_;
class DrawStakesHelpParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DrawStakesHelpParam>
      _instance;
} _DrawStakesHelpParam_default_instance_;
class WorkEndNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkEndNotify>
      _instance;
} _WorkEndNotify_default_instance_;
class OperationRobotReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationRobotReq>
      _instance;
} _OperationRobotReq_default_instance_;
class OperationRobotResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationRobotRes>
      _instance;
} _OperationRobotRes_default_instance_;
class CalSideStakeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSideStakeReq>
      _instance;
} _CalSideStakeReq_default_instance_;
class CalSideStakeResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSideStakeRes>
      _instance;
} _CalSideStakeRes_default_instance_;
class CalSideStakeListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSideStakeListReq>
      _instance;
} _CalSideStakeListReq_default_instance_;
class CalSideStakeListResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSideStakeListRes>
      _instance;
} _CalSideStakeListRes_default_instance_;
class CalLaneStakeListResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalLaneStakeListRes>
      _instance;
} _CalLaneStakeListRes_default_instance_;
class CalLaneStakeListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalLaneStakeListReq>
      _instance;
} _CalLaneStakeListReq_default_instance_;
class CalCrossSectionStakeArrayReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalCrossSectionStakeArrayReq>
      _instance;
} _CalCrossSectionStakeArrayReq_default_instance_;
class CalCrossSectionStakeArrayResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalCrossSectionStakeArrayRes>
      _instance;
} _CalCrossSectionStakeArrayRes_default_instance_;
class CalStandardSquareParamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalStandardSquareParamReq>
      _instance;
} _CalStandardSquareParamReq_default_instance_;
class CalStandardSquareParamResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalStandardSquareParamRes>
      _instance;
} _CalStandardSquareParamRes_default_instance_;
class CalSquareWidthStakeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSquareWidthStakeReq>
      _instance;
} _CalSquareWidthStakeReq_default_instance_;
class CalSquareWidthStakeResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSquareWidthStakeRes>
      _instance;
} _CalSquareWidthStakeRes_default_instance_;
class CalSquareStakeArrayReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSquareStakeArrayReq>
      _instance;
} _CalSquareStakeArrayReq_default_instance_;
class CalSquareStakeArrayResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalSquareStakeArrayRes>
      _instance;
} _CalSquareStakeArrayRes_default_instance_;
class CalLevellingStakeArrayReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalLevellingStakeArrayReq>
      _instance;
} _CalLevellingStakeArrayReq_default_instance_;
class CalLevellingStakeArrayResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalLevellingStakeArrayRes>
      _instance;
} _CalLevellingStakeArrayRes_default_instance_;
class CalStakesHelpReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalStakesHelpReq>
      _instance;
} _CalStakesHelpReq_default_instance_;
class CalStakesHelpResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalStakesHelpRes>
      _instance;
} _CalStakesHelpRes_default_instance_;
class RobotManualOperationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotManualOperationReq>
      _instance;
} _RobotManualOperationReq_default_instance_;
class RobotManualOperationResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotManualOperationRes>
      _instance;
} _RobotManualOperationRes_default_instance_;
class RobotAutopilotModeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotAutopilotModeReq>
      _instance;
} _RobotAutopilotModeReq_default_instance_;
class PlaneCoordinatesParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneCoordinatesParams>
      _instance;
} _PlaneCoordinatesParams_default_instance_;
class RobotAutopilotModeResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotAutopilotModeRes>
      _instance;
} _RobotAutopilotModeRes_default_instance_;
class RobotDustingNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotDustingNotify>
      _instance;
} _RobotDustingNotify_default_instance_;
class RobotSiloParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotSiloParams>
      _instance;
} _RobotSiloParams_default_instance_;
class RobotDustingSliderParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotDustingSliderParams>
      _instance;
} _RobotDustingSliderParams_default_instance_;
class FourParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FourParam>
      _instance;
} _FourParam_default_instance_;
class ProjectionParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjectionParam>
      _instance;
} _ProjectionParam_default_instance_;
class EllipsoidParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EllipsoidParam>
      _instance;
} _EllipsoidParam_default_instance_;
class CoordinateCalibrationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinateCalibrationReq>
      _instance;
} _CoordinateCalibrationReq_default_instance_;
class CoordinateCalibrationResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinateCalibrationRes>
      _instance;
} _CoordinateCalibrationRes_default_instance_;
class WriteWordReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteWordReq>
      _instance;
} _WriteWordReq_default_instance_;
class WriteWordResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteWordRes>
      _instance;
} _WriteWordRes_default_instance_;
}  // namespace middle_layer_pb
namespace protobuf_middle_5flayer_2eproto {
void InitDefaultsQueryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_Query_default_instance_;
    new (ptr) ::middle_layer_pb::Query();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::Query::InitAsDefaultInstance();
}

void InitDefaultsQuery() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryImpl);
}

void InitDefaultsAnswerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_Answer_default_instance_;
    new (ptr) ::middle_layer_pb::Answer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::Answer::InitAsDefaultInstance();
}

void InitDefaultsAnswer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAnswerImpl);
}

void InitDefaultsEmptyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_Empty_default_instance_;
    new (ptr) ::middle_layer_pb::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::Empty::InitAsDefaultInstance();
}

void InitDefaultsEmpty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmptyImpl);
}

void InitDefaultsPointENUImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PointENU_default_instance_;
    new (ptr) ::middle_layer_pb::PointENU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PointENU::InitAsDefaultInstance();
}

void InitDefaultsPointENU() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointENUImpl);
}

void InitDefaultsPointLLHImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PointLLH_default_instance_;
    new (ptr) ::middle_layer_pb::PointLLH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PointLLH::InitAsDefaultInstance();
}

void InitDefaultsPointLLH() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointLLHImpl);
}

void InitDefaultsPoint2DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_Point2D_default_instance_;
    new (ptr) ::middle_layer_pb::Point2D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::Point2D::InitAsDefaultInstance();
}

void InitDefaultsPoint2D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint2DImpl);
}

void InitDefaultsPoint3DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_Point3D_default_instance_;
    new (ptr) ::middle_layer_pb::Point3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::Point3D::InitAsDefaultInstance();
}

void InitDefaultsPoint3D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3DImpl);
}

void InitDefaultsQuaternionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_Quaternion_default_instance_;
    new (ptr) ::middle_layer_pb::Quaternion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::Quaternion::InitAsDefaultInstance();
}

void InitDefaultsQuaternion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuaternionImpl);
}

void InitDefaultsImuAccelMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_ImuAccelMessage_default_instance_;
    new (ptr) ::middle_layer_pb::ImuAccelMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::ImuAccelMessage::InitAsDefaultInstance();
}

void InitDefaultsImuAccelMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImuAccelMessageImpl);
}

void InitDefaultsImuGyroMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_ImuGyroMessage_default_instance_;
    new (ptr) ::middle_layer_pb::ImuGyroMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::ImuGyroMessage::InitAsDefaultInstance();
}

void InitDefaultsImuGyroMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImuGyroMessageImpl);
}

void InitDefaultsImuEulerMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_ImuEulerMessage_default_instance_;
    new (ptr) ::middle_layer_pb::ImuEulerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::ImuEulerMessage::InitAsDefaultInstance();
}

void InitDefaultsImuEulerMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImuEulerMessageImpl);
}

void InitDefaultsRobotCoreStateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotCoreStateReq_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreStateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreStateReq::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreStateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreStateReqImpl);
}

void InitDefaultsRobotCoreState_SystemStateMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotCoreState_SystemStateMessage_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreState_SystemStateMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreState_SystemStateMessage::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreState_SystemStateMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreState_SystemStateMessageImpl);
}

void InitDefaultsRobotCoreState_MotionStateMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotCoreState_MotionStateMessage_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreState_MotionStateMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreState_MotionStateMessage::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreState_MotionStateMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreState_MotionStateMessageImpl);
}

void InitDefaultsRobotCoreState_RcStateMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotCoreState_RcStateMessage_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreState_RcStateMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreState_RcStateMessage::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreState_RcStateMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreState_RcStateMessageImpl);
}

void InitDefaultsRobotCoreState_BmsBasicMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotCoreState_BmsBasicMessage_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreState_BmsBasicMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreState_BmsBasicMessage::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreState_BmsBasicMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreState_BmsBasicMessageImpl);
}

void InitDefaultsRobotCoreState_OdometryMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotCoreState_OdometryMessage_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreState_OdometryMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreState_OdometryMessage::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreState_OdometryMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreState_OdometryMessageImpl);
}

void InitDefaultsRobotCoreStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_SystemStateMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_MotionStateMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_RcStateMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_BmsBasicMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_OdometryMessage();
  {
    void* ptr = &::middle_layer_pb::_RobotCoreState_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreState::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreStateImpl);
}

void InitDefaultsRobotCoreStateResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState();
  {
    void* ptr = &::middle_layer_pb::_RobotCoreStateRes_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreStateRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreStateRes::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreStateRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreStateResImpl);
}

void InitDefaultsRobotCoreStateNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState();
  {
    void* ptr = &::middle_layer_pb::_RobotCoreStateNotify_default_instance_;
    new (ptr) ::middle_layer_pb::RobotCoreStateNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotCoreStateNotify::InitAsDefaultInstance();
}

void InitDefaultsRobotCoreStateNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotCoreStateNotifyImpl);
}

void InitDefaultsAppLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_AppLoginReq_default_instance_;
    new (ptr) ::middle_layer_pb::AppLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::AppLoginReq::InitAsDefaultInstance();
}

void InitDefaultsAppLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAppLoginReqImpl);
}

void InitDefaultsAppLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_AppLoginRes_default_instance_;
    new (ptr) ::middle_layer_pb::AppLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::AppLoginRes::InitAsDefaultInstance();
}

void InitDefaultsAppLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAppLoginResImpl);
}

void InitDefaultsRobotLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotLoginReq_default_instance_;
    new (ptr) ::middle_layer_pb::RobotLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotLoginReq::InitAsDefaultInstance();
}

void InitDefaultsRobotLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotLoginReqImpl);
}

void InitDefaultsRobotLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotLoginRes_default_instance_;
    new (ptr) ::middle_layer_pb::RobotLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotLoginRes::InitAsDefaultInstance();
}

void InitDefaultsRobotLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotLoginResImpl);
}

void InitDefaultsCloudLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_CloudLoginReq_default_instance_;
    new (ptr) ::middle_layer_pb::CloudLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CloudLoginReq::InitAsDefaultInstance();
}

void InitDefaultsCloudLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloudLoginReqImpl);
}

void InitDefaultsCloudLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_CloudLoginRes_default_instance_;
    new (ptr) ::middle_layer_pb::CloudLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CloudLoginRes::InitAsDefaultInstance();
}

void InitDefaultsCloudLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloudLoginResImpl);
}

void InitDefaultsLaserResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_LaserResult_default_instance_;
    new (ptr) ::middle_layer_pb::LaserResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::LaserResult::InitAsDefaultInstance();
}

void InitDefaultsLaserResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLaserResultImpl);
}

void InitDefaultsRtkResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPointENU();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_RtkResult_default_instance_;
    new (ptr) ::middle_layer_pb::RtkResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RtkResult::InitAsDefaultInstance();
}

void InitDefaultsRtkResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRtkResultImpl);
}

void InitDefaultsRtkDataSourceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RtkDataSource_default_instance_;
    new (ptr) ::middle_layer_pb::RtkDataSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RtkDataSource::InitAsDefaultInstance();
}

void InitDefaultsRtkDataSource() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRtkDataSourceImpl);
}

void InitDefaultsSensorInfoNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsImuAccelMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsImuGyroMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsImuEulerMessage();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  protobuf_middle_5flayer_2eproto::InitDefaultsRtkDataSource();
  {
    void* ptr = &::middle_layer_pb::_SensorInfoNotify_default_instance_;
    new (ptr) ::middle_layer_pb::SensorInfoNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::SensorInfoNotify::InitAsDefaultInstance();
}

void InitDefaultsSensorInfoNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSensorInfoNotifyImpl);
}

void InitDefaultsMeasureResultNotify_PointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_MeasureResultNotify_Point_default_instance_;
    new (ptr) ::middle_layer_pb::MeasureResultNotify_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::MeasureResultNotify_Point::InitAsDefaultInstance();
}

void InitDefaultsMeasureResultNotify_Point() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeasureResultNotify_PointImpl);
}

void InitDefaultsMeasureResultNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotify_Point();
  {
    void* ptr = &::middle_layer_pb::_MeasureResultNotify_default_instance_;
    new (ptr) ::middle_layer_pb::MeasureResultNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::MeasureResultNotify::InitAsDefaultInstance();
}

void InitDefaultsMeasureResultNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeasureResultNotifyImpl);
}

void InitDefaultsTaskStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_TaskState_default_instance_;
    new (ptr) ::middle_layer_pb::TaskState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::TaskState::InitAsDefaultInstance();
}

void InitDefaultsTaskState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskStateImpl);
}

void InitDefaultsTaskStateNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsTaskState();
  {
    void* ptr = &::middle_layer_pb::_TaskStateNotify_default_instance_;
    new (ptr) ::middle_layer_pb::TaskStateNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::TaskStateNotify::InitAsDefaultInstance();
}

void InitDefaultsTaskStateNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskStateNotifyImpl);
}

void InitDefaultsTargetTrackNotify_PointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPoint2D();
  {
    void* ptr = &::middle_layer_pb::_TargetTrackNotify_Point_default_instance_;
    new (ptr) ::middle_layer_pb::TargetTrackNotify_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::TargetTrackNotify_Point::InitAsDefaultInstance();
}

void InitDefaultsTargetTrackNotify_Point() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTargetTrackNotify_PointImpl);
}

void InitDefaultsTargetTrackNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotify_Point();
  {
    void* ptr = &::middle_layer_pb::_TargetTrackNotify_default_instance_;
    new (ptr) ::middle_layer_pb::TargetTrackNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::TargetTrackNotify::InitAsDefaultInstance();
}

void InitDefaultsTargetTrackNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTargetTrackNotifyImpl);
}

void InitDefaultsRtkOperationCmdReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RtkOperationCmdReq_default_instance_;
    new (ptr) ::middle_layer_pb::RtkOperationCmdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RtkOperationCmdReq::InitAsDefaultInstance();
}

void InitDefaultsRtkOperationCmdReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRtkOperationCmdReqImpl);
}

void InitDefaultsRtkOperationCmdResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RtkOperationCmdRes_default_instance_;
    new (ptr) ::middle_layer_pb::RtkOperationCmdRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RtkOperationCmdRes::InitAsDefaultInstance();
}

void InitDefaultsRtkOperationCmdRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRtkOperationCmdResImpl);
}

void InitDefaultsRtkOffsetInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_RtkOffsetInfo_default_instance_;
    new (ptr) ::middle_layer_pb::RtkOffsetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RtkOffsetInfo::InitAsDefaultInstance();
}

void InitDefaultsRtkOffsetInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRtkOffsetInfoImpl);
}

void InitDefaultsWorkMessageIssuedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDeviceTask();
  protobuf_middle_5flayer_2eproto::InitDefaultsRtkOffsetInfo();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPutSideLineParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawSideLineParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsPutMidLineParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawMidLineParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsPutLevellingParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsPutLaneLineParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStakesHelpParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsPutCrossSectionParam();
  {
    void* ptr = &::middle_layer_pb::_WorkMessageIssued_default_instance_;
    new (ptr) ::middle_layer_pb::WorkMessageIssued();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::WorkMessageIssued::InitAsDefaultInstance();
}

void InitDefaultsWorkMessageIssued() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkMessageIssuedImpl);
}

void InitDefaultsWorkMessageIssuedResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDeviceTask();
  {
    void* ptr = &::middle_layer_pb::_WorkMessageIssuedRes_default_instance_;
    new (ptr) ::middle_layer_pb::WorkMessageIssuedRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::WorkMessageIssuedRes::InitAsDefaultInstance();
}

void InitDefaultsWorkMessageIssuedRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkMessageIssuedResImpl);
}

void InitDefaultsDeviceTaskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_DeviceTask_default_instance_;
    new (ptr) ::middle_layer_pb::DeviceTask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::DeviceTask::InitAsDefaultInstance();
}

void InitDefaultsDeviceTask() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceTaskImpl);
}

void InitDefaultsStakeDtoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_StakeDto_default_instance_;
    new (ptr) ::middle_layer_pb::StakeDto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::StakeDto::InitAsDefaultInstance();
}

void InitDefaultsStakeDto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStakeDtoImpl);
}

void InitDefaultsStakeDtoListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_StakeDtoList_default_instance_;
    new (ptr) ::middle_layer_pb::StakeDtoList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::StakeDtoList::InitAsDefaultInstance();
}

void InitDefaultsStakeDtoList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStakeDtoListImpl);
}

void InitDefaultsStakeInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_StakeInfo_default_instance_;
    new (ptr) ::middle_layer_pb::StakeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::StakeInfo::InitAsDefaultInstance();
}

void InitDefaultsStakeInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStakeInfoImpl);
}

void InitDefaultsStakeDtoListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeInfo();
  {
    void* ptr = &::middle_layer_pb::_StakeDtoListReq_default_instance_;
    new (ptr) ::middle_layer_pb::StakeDtoListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::StakeDtoListReq::InitAsDefaultInstance();
}

void InitDefaultsStakeDtoListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStakeDtoListReqImpl);
}

void InitDefaultsStakeDtoListResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_StakeDtoListRes_default_instance_;
    new (ptr) ::middle_layer_pb::StakeDtoListRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::StakeDtoListRes::InitAsDefaultInstance();
}

void InitDefaultsStakeDtoListRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStakeDtoListResImpl);
}

void InitDefaultsPutSideLineParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PutSideLineParam_default_instance_;
    new (ptr) ::middle_layer_pb::PutSideLineParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PutSideLineParam::InitAsDefaultInstance();
}

void InitDefaultsPutSideLineParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutSideLineParamImpl);
}

void InitDefaultsPutMidLineParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PutMidLineParam_default_instance_;
    new (ptr) ::middle_layer_pb::PutMidLineParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PutMidLineParam::InitAsDefaultInstance();
}

void InitDefaultsPutMidLineParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutMidLineParamImpl);
}

void InitDefaultsPutLevellingParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PutLevellingParam_default_instance_;
    new (ptr) ::middle_layer_pb::PutLevellingParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PutLevellingParam::InitAsDefaultInstance();
}

void InitDefaultsPutLevellingParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutLevellingParamImpl);
}

void InitDefaultsPutLaneLineParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PutLaneLineParam_default_instance_;
    new (ptr) ::middle_layer_pb::PutLaneLineParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PutLaneLineParam::InitAsDefaultInstance();
}

void InitDefaultsPutLaneLineParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutLaneLineParamImpl);
}

void InitDefaultsPutCrossSectionParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PutCrossSectionParam_default_instance_;
    new (ptr) ::middle_layer_pb::PutCrossSectionParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PutCrossSectionParam::InitAsDefaultInstance();
}

void InitDefaultsPutCrossSectionParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutCrossSectionParamImpl);
}

void InitDefaultsDrawStandardSquareParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_DrawStandardSquareParam_default_instance_;
    new (ptr) ::middle_layer_pb::DrawStandardSquareParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::DrawStandardSquareParam::InitAsDefaultInstance();
}

void InitDefaultsDrawStandardSquareParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDrawStandardSquareParamImpl);
}

void InitDefaultsDrawSideLineParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_DrawSideLineParam_default_instance_;
    new (ptr) ::middle_layer_pb::DrawSideLineParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::DrawSideLineParam::InitAsDefaultInstance();
}

void InitDefaultsDrawSideLineParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDrawSideLineParamImpl);
}

void InitDefaultsDrawMidLineParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_DrawMidLineParam_default_instance_;
    new (ptr) ::middle_layer_pb::DrawMidLineParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::DrawMidLineParam::InitAsDefaultInstance();
}

void InitDefaultsDrawMidLineParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDrawMidLineParamImpl);
}

void InitDefaultsDrawStakesHelpParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_DrawStakesHelpParam_default_instance_;
    new (ptr) ::middle_layer_pb::DrawStakesHelpParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::DrawStakesHelpParam::InitAsDefaultInstance();
}

void InitDefaultsDrawStakesHelpParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDrawStakesHelpParamImpl);
}

void InitDefaultsWorkEndNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDeviceTask();
  {
    void* ptr = &::middle_layer_pb::_WorkEndNotify_default_instance_;
    new (ptr) ::middle_layer_pb::WorkEndNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::WorkEndNotify::InitAsDefaultInstance();
}

void InitDefaultsWorkEndNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkEndNotifyImpl);
}

void InitDefaultsOperationRobotReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_OperationRobotReq_default_instance_;
    new (ptr) ::middle_layer_pb::OperationRobotReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::OperationRobotReq::InitAsDefaultInstance();
}

void InitDefaultsOperationRobotReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationRobotReqImpl);
}

void InitDefaultsOperationRobotResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_OperationRobotRes_default_instance_;
    new (ptr) ::middle_layer_pb::OperationRobotRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::OperationRobotRes::InitAsDefaultInstance();
}

void InitDefaultsOperationRobotRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationRobotResImpl);
}

void InitDefaultsCalSideStakeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_CalSideStakeReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalSideStakeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSideStakeReq::InitAsDefaultInstance();
}

void InitDefaultsCalSideStakeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSideStakeReqImpl);
}

void InitDefaultsCalSideStakeResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalSideStakeRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalSideStakeRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSideStakeRes::InitAsDefaultInstance();
}

void InitDefaultsCalSideStakeRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSideStakeResImpl);
}

void InitDefaultsCalSideStakeListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_CalSideStakeListReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalSideStakeListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSideStakeListReq::InitAsDefaultInstance();
}

void InitDefaultsCalSideStakeListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSideStakeListReqImpl);
}

void InitDefaultsCalSideStakeListResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalSideStakeListRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalSideStakeListRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSideStakeListRes::InitAsDefaultInstance();
}

void InitDefaultsCalSideStakeListRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSideStakeListResImpl);
}

void InitDefaultsCalLaneStakeListResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalLaneStakeListRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalLaneStakeListRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalLaneStakeListRes::InitAsDefaultInstance();
}

void InitDefaultsCalLaneStakeListRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalLaneStakeListResImpl);
}

void InitDefaultsCalLaneStakeListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPutLaneLineParam();
  {
    void* ptr = &::middle_layer_pb::_CalLaneStakeListReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalLaneStakeListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalLaneStakeListReq::InitAsDefaultInstance();
}

void InitDefaultsCalLaneStakeListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalLaneStakeListReqImpl);
}

void InitDefaultsCalCrossSectionStakeArrayReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPutCrossSectionParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalCrossSectionStakeArrayReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalCrossSectionStakeArrayReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalCrossSectionStakeArrayReq::InitAsDefaultInstance();
}

void InitDefaultsCalCrossSectionStakeArrayReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalCrossSectionStakeArrayReqImpl);
}

void InitDefaultsCalCrossSectionStakeArrayResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoList();
  {
    void* ptr = &::middle_layer_pb::_CalCrossSectionStakeArrayRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalCrossSectionStakeArrayRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalCrossSectionStakeArrayRes::InitAsDefaultInstance();
}

void InitDefaultsCalCrossSectionStakeArrayRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalCrossSectionStakeArrayResImpl);
}

void InitDefaultsCalStandardSquareParamReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_CalStandardSquareParamReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalStandardSquareParamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalStandardSquareParamReq::InitAsDefaultInstance();
}

void InitDefaultsCalStandardSquareParamReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalStandardSquareParamReqImpl);
}

void InitDefaultsCalStandardSquareParamResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  {
    void* ptr = &::middle_layer_pb::_CalStandardSquareParamRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalStandardSquareParamRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalStandardSquareParamRes::InitAsDefaultInstance();
}

void InitDefaultsCalStandardSquareParamRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalStandardSquareParamResImpl);
}

void InitDefaultsCalSquareWidthStakeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_CalSquareWidthStakeReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalSquareWidthStakeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSquareWidthStakeReq::InitAsDefaultInstance();
}

void InitDefaultsCalSquareWidthStakeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSquareWidthStakeReqImpl);
}

void InitDefaultsCalSquareWidthStakeResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalSquareWidthStakeRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalSquareWidthStakeRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSquareWidthStakeRes::InitAsDefaultInstance();
}

void InitDefaultsCalSquareWidthStakeRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSquareWidthStakeResImpl);
}

void InitDefaultsCalSquareStakeArrayReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_CalSquareStakeArrayReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalSquareStakeArrayReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSquareStakeArrayReq::InitAsDefaultInstance();
}

void InitDefaultsCalSquareStakeArrayReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSquareStakeArrayReqImpl);
}

void InitDefaultsCalSquareStakeArrayResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoList();
  {
    void* ptr = &::middle_layer_pb::_CalSquareStakeArrayRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalSquareStakeArrayRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalSquareStakeArrayRes::InitAsDefaultInstance();
}

void InitDefaultsCalSquareStakeArrayRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalSquareStakeArrayResImpl);
}

void InitDefaultsCalLevellingStakeArrayReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPutLevellingParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalLevellingStakeArrayReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalLevellingStakeArrayReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalLevellingStakeArrayReq::InitAsDefaultInstance();
}

void InitDefaultsCalLevellingStakeArrayReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalLevellingStakeArrayReqImpl);
}

void InitDefaultsCalLevellingStakeArrayResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoList();
  {
    void* ptr = &::middle_layer_pb::_CalLevellingStakeArrayRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalLevellingStakeArrayRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalLevellingStakeArrayRes::InitAsDefaultInstance();
}

void InitDefaultsCalLevellingStakeArrayRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalLevellingStakeArrayResImpl);
}

void InitDefaultsCalStakesHelpReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsDrawStakesHelpParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  {
    void* ptr = &::middle_layer_pb::_CalStakesHelpReq_default_instance_;
    new (ptr) ::middle_layer_pb::CalStakesHelpReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalStakesHelpReq::InitAsDefaultInstance();
}

void InitDefaultsCalStakesHelpReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalStakesHelpReqImpl);
}

void InitDefaultsCalStakesHelpResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  {
    void* ptr = &::middle_layer_pb::_CalStakesHelpRes_default_instance_;
    new (ptr) ::middle_layer_pb::CalStakesHelpRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CalStakesHelpRes::InitAsDefaultInstance();
}

void InitDefaultsCalStakesHelpRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCalStakesHelpResImpl);
}

void InitDefaultsRobotManualOperationReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotManualOperationReq_default_instance_;
    new (ptr) ::middle_layer_pb::RobotManualOperationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotManualOperationReq::InitAsDefaultInstance();
}

void InitDefaultsRobotManualOperationReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotManualOperationReqImpl);
}

void InitDefaultsRobotManualOperationResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotManualOperationRes_default_instance_;
    new (ptr) ::middle_layer_pb::RobotManualOperationRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotManualOperationRes::InitAsDefaultInstance();
}

void InitDefaultsRobotManualOperationRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotManualOperationResImpl);
}

void InitDefaultsRobotAutopilotModeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPlaneCoordinatesParams();
  {
    void* ptr = &::middle_layer_pb::_RobotAutopilotModeReq_default_instance_;
    new (ptr) ::middle_layer_pb::RobotAutopilotModeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotAutopilotModeReq::InitAsDefaultInstance();
}

void InitDefaultsRobotAutopilotModeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotAutopilotModeReqImpl);
}

void InitDefaultsPlaneCoordinatesParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_PlaneCoordinatesParams_default_instance_;
    new (ptr) ::middle_layer_pb::PlaneCoordinatesParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::PlaneCoordinatesParams::InitAsDefaultInstance();
}

void InitDefaultsPlaneCoordinatesParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaneCoordinatesParamsImpl);
}

void InitDefaultsRobotAutopilotModeResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotAutopilotModeRes_default_instance_;
    new (ptr) ::middle_layer_pb::RobotAutopilotModeRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotAutopilotModeRes::InitAsDefaultInstance();
}

void InitDefaultsRobotAutopilotModeRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotAutopilotModeResImpl);
}

void InitDefaultsRobotDustingNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotSiloParams();
  protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingSliderParams();
  {
    void* ptr = &::middle_layer_pb::_RobotDustingNotify_default_instance_;
    new (ptr) ::middle_layer_pb::RobotDustingNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotDustingNotify::InitAsDefaultInstance();
}

void InitDefaultsRobotDustingNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotDustingNotifyImpl);
}

void InitDefaultsRobotSiloParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotSiloParams_default_instance_;
    new (ptr) ::middle_layer_pb::RobotSiloParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotSiloParams::InitAsDefaultInstance();
}

void InitDefaultsRobotSiloParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotSiloParamsImpl);
}

void InitDefaultsRobotDustingSliderParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_RobotDustingSliderParams_default_instance_;
    new (ptr) ::middle_layer_pb::RobotDustingSliderParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::RobotDustingSliderParams::InitAsDefaultInstance();
}

void InitDefaultsRobotDustingSliderParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRobotDustingSliderParamsImpl);
}

void InitDefaultsFourParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_FourParam_default_instance_;
    new (ptr) ::middle_layer_pb::FourParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::FourParam::InitAsDefaultInstance();
}

void InitDefaultsFourParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFourParamImpl);
}

void InitDefaultsProjectionParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_ProjectionParam_default_instance_;
    new (ptr) ::middle_layer_pb::ProjectionParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::ProjectionParam::InitAsDefaultInstance();
}

void InitDefaultsProjectionParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProjectionParamImpl);
}

void InitDefaultsEllipsoidParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_EllipsoidParam_default_instance_;
    new (ptr) ::middle_layer_pb::EllipsoidParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::EllipsoidParam::InitAsDefaultInstance();
}

void InitDefaultsEllipsoidParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEllipsoidParamImpl);
}

void InitDefaultsCoordinateCalibrationReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  protobuf_middle_5flayer_2eproto::InitDefaultsFourParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsProjectionParam();
  protobuf_middle_5flayer_2eproto::InitDefaultsEllipsoidParam();
  {
    void* ptr = &::middle_layer_pb::_CoordinateCalibrationReq_default_instance_;
    new (ptr) ::middle_layer_pb::CoordinateCalibrationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CoordinateCalibrationReq::InitAsDefaultInstance();
}

void InitDefaultsCoordinateCalibrationReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCoordinateCalibrationReqImpl);
}

void InitDefaultsCoordinateCalibrationResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_CoordinateCalibrationRes_default_instance_;
    new (ptr) ::middle_layer_pb::CoordinateCalibrationRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::CoordinateCalibrationRes::InitAsDefaultInstance();
}

void InitDefaultsCoordinateCalibrationRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCoordinateCalibrationResImpl);
}

void InitDefaultsWriteWordReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_WriteWordReq_default_instance_;
    new (ptr) ::middle_layer_pb::WriteWordReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::WriteWordReq::InitAsDefaultInstance();
}

void InitDefaultsWriteWordReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteWordReqImpl);
}

void InitDefaultsWriteWordResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::middle_layer_pb::_WriteWordRes_default_instance_;
    new (ptr) ::middle_layer_pb::WriteWordRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::middle_layer_pb::WriteWordRes::InitAsDefaultInstance();
}

void InitDefaultsWriteWordRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteWordResImpl);
}

::google::protobuf::Metadata file_level_metadata[92];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Query, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Query, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Query, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Query, questioner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Query, question_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Answer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Answer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Answer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Answer, questioner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Answer, answerer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Answer, solution_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Empty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Empty, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointENU, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointENU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointENU, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointENU, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointENU, z_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointLLH, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointLLH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointLLH, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointLLH, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointLLH, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PointLLH, heading_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point2D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point2D, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point3D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Point3D, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Quaternion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Quaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Quaternion, qx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Quaternion, qy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Quaternion, qz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::Quaternion, qw_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuAccelMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuAccelMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuAccelMessage, accel_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuAccelMessage, accel_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuAccelMessage, accel_z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuGyroMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuGyroMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuGyroMessage, gyro_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuGyroMessage, gyro_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuGyroMessage, gyro_z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuEulerMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuEulerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuEulerMessage, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuEulerMessage, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ImuEulerMessage, roll_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_SystemStateMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_SystemStateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_SystemStateMessage, vehicle_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_SystemStateMessage, control_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_SystemStateMessage, battery_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_SystemStateMessage, error_code_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_MotionStateMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_MotionStateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_MotionStateMessage, linear_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_MotionStateMessage, angular_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_MotionStateMessage, lateral_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_MotionStateMessage, steering_angle_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, swa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, swb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, swc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, swd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, stick_right_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, stick_right_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, stick_left_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, stick_left_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_RcStateMessage, var_a_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, battery_soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, battery_soh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_BmsBasicMessage, temperature_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_OdometryMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_OdometryMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_OdometryMessage, left_wheel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState_OdometryMessage, right_wheel_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, system_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, motion_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, rc_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, bms_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreState, odom_state_),
  0,
  6,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateRes, state_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotCoreStateNotify, state_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::AppLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::AppLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::AppLoginReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::AppLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::AppLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::AppLoginRes, code_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotLoginReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotLoginRes, code_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CloudLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CloudLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CloudLoginReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CloudLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CloudLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CloudLoginRes, code_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::LaserResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::LaserResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::LaserResult, height_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkResult, utm_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkResult, gnss_result_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkDataSource, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkDataSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkDataSource, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, imu_accel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, imu_gyro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, imu_euler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, gnss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::SensorInfoNotify, rtk_),
  0,
  6,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify_Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify_Point, stake_dto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify_Point, rtk_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify_Point, pl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify_Point, task_code_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::MeasureResultNotify, pos_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskState, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskState, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskState, stake_dto_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskStateNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskStateNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskStateNotify, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TaskStateNotify, state_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify_Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify_Point, pt_x_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify_Point, pt_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify_Point, pt_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify_Point, pt_s_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify, curr_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::TargetTrackNotify, pos_list_),
  0,
  2,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdReq, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOperationCmdRes, code_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, offset_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, offset_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RtkOffsetInfo, offset_z_),
  2,
  0,
  1,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, device_task_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, work_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, rtk_offset_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, stake_dto_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, put_side_line_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, draw_side_line_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, put_mid_line_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, draw_mid_line_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, draw_standard_square_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, put_levelling_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, put_lane_line_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, draw_stakes_help_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssued, put_cross_section_param_),
  0,
  1,
  12,
  2,
  ~0u,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssuedRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssuedRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssuedRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkMessageIssuedRes, device_task_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, start_stake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, end_stake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DeviceTask, status_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, stake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, ground_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDto, angle_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoList, stake_dto_list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeInfo, stake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeInfo, stop_line_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListReq, section_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListReq, work_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListReq, stake_info_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::StakeDtoListRes, section_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutSideLineParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutSideLineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutSideLineParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutSideLineParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutSideLineParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutSideLineParam, safety_offset_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutMidLineParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutMidLineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutMidLineParam, lcspacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutMidLineParam, measuringspacing_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, levelling_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, press_coefficient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, point_density_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, layer_thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, total_thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLevellingParam, safety_offset_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLaneLineParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLaneLineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLaneLineParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLaneLineParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLaneLineParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutLaneLineParam, lane_num_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutCrossSectionParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutCrossSectionParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutCrossSectionParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutCrossSectionParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutCrossSectionParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PutCrossSectionParam, point_density_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, square_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, square_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, square_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, square_columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, require_earthwork_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, fill_dig_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStandardSquareParam, safety_offset_),
  0,
  1,
  3,
  2,
  5,
  4,
  7,
  6,
  9,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawSideLineParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawSideLineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawSideLineParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawSideLineParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawSideLineParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawSideLineParam, safety_offset_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawMidLineParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawMidLineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawMidLineParam, lcspacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawMidLineParam, measuringspacing_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, lc_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, measuring_spacing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, levelling_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, press_coefficient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, layer_thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::DrawStakesHelpParam, total_thickness_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkEndNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkEndNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WorkEndNotify, device_task_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotReq, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::OperationRobotRes, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, stake_dto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeReq, side_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeRes, stake_dto_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, stake_dto_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListReq, safety_offset_),
  0,
  1,
  ~0u,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSideStakeListRes, stake_dto_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListRes, stake_dto_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListReq, stake_dto_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLaneStakeListReq, put_lane_line_param_),
  0,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, put_cross_section_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayReq, stake_dto_list_),
  0,
  1,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalCrossSectionStakeArrayRes, stake_dto_two_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, draw_standard_square_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, stake_dto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamReq, side_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStandardSquareParamRes, draw_standard_square_param_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, draw_standard_square_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, stake_dto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeReq, side_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareWidthStakeRes, stake_dto_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, draw_standard_square_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, stake_dto_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayReq, pt_),
  0,
  1,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalSquareStakeArrayRes, stake_dto_two_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayReq, put_levelling_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayReq, stake_dto_list_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalLevellingStakeArrayRes, stake_dto_two_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, task_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, draw_stakes_help_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, stake_dto_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpReq, pt_),
  0,
  1,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpRes, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CalStakesHelpRes, stake_dto_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, vertical_direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, horizontal_direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, vertical_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationReq, horizontal_value_),
  0,
  3,
  4,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotManualOperationRes, code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeReq, plane_coordinates_params_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PlaneCoordinatesParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PlaneCoordinatesParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PlaneCoordinatesParams, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PlaneCoordinatesParams, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PlaneCoordinatesParams, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::PlaneCoordinatesParams, angle_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotAutopilotModeRes, code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingNotify, silo_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingNotify, dusting_slider_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingNotify, dusting_switch_type_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotSiloParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotSiloParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotSiloParams, powder_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotSiloParams, powder_margin_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingSliderParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingSliderParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingSliderParams, offset_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::RobotDustingSliderParams, offset_y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::FourParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::FourParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::FourParam, dx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::FourParam, dy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::FourParam, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::FourParam, rotate_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, projection_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, scale_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, central_meridian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, latitude_of_origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, false_easting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, false_northing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::ProjectionParam, height_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::EllipsoidParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::EllipsoidParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::EllipsoidParam, ellipsoid_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::EllipsoidParam, macro_axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::EllipsoidParam, minor_axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::EllipsoidParam, flattening_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, four_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, elevation_fitting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, projection_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationReq, ellipsoid_param_),
  0,
  1,
  2,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::CoordinateCalibrationRes, code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordReq, word_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordRes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::middle_layer_pb::WriteWordRes, code_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::middle_layer_pb::Query)},
  { 11, 20, sizeof(::middle_layer_pb::Answer)},
  { 24, 30, sizeof(::middle_layer_pb::Empty)},
  { 31, 39, sizeof(::middle_layer_pb::PointENU)},
  { 42, 51, sizeof(::middle_layer_pb::PointLLH)},
  { 55, 62, sizeof(::middle_layer_pb::Point2D)},
  { 64, 72, sizeof(::middle_layer_pb::Point3D)},
  { 75, 84, sizeof(::middle_layer_pb::Quaternion)},
  { 88, 96, sizeof(::middle_layer_pb::ImuAccelMessage)},
  { 99, 107, sizeof(::middle_layer_pb::ImuGyroMessage)},
  { 110, 118, sizeof(::middle_layer_pb::ImuEulerMessage)},
  { 121, 127, sizeof(::middle_layer_pb::RobotCoreStateReq)},
  { 128, 137, sizeof(::middle_layer_pb::RobotCoreState_SystemStateMessage)},
  { 141, 150, sizeof(::middle_layer_pb::RobotCoreState_MotionStateMessage)},
  { 154, 168, sizeof(::middle_layer_pb::RobotCoreState_RcStateMessage)},
  { 177, 187, sizeof(::middle_layer_pb::RobotCoreState_BmsBasicMessage)},
  { 192, 199, sizeof(::middle_layer_pb::RobotCoreState_OdometryMessage)},
  { 201, 213, sizeof(::middle_layer_pb::RobotCoreState)},
  { 220, 226, sizeof(::middle_layer_pb::RobotCoreStateRes)},
  { 227, 233, sizeof(::middle_layer_pb::RobotCoreStateNotify)},
  { 234, 240, sizeof(::middle_layer_pb::AppLoginReq)},
  { 241, 247, sizeof(::middle_layer_pb::AppLoginRes)},
  { 248, 254, sizeof(::middle_layer_pb::RobotLoginReq)},
  { 255, 261, sizeof(::middle_layer_pb::RobotLoginRes)},
  { 262, 268, sizeof(::middle_layer_pb::CloudLoginReq)},
  { 269, 275, sizeof(::middle_layer_pb::CloudLoginRes)},
  { 276, 282, sizeof(::middle_layer_pb::LaserResult)},
  { 283, 290, sizeof(::middle_layer_pb::RtkResult)},
  { 292, 298, sizeof(::middle_layer_pb::RtkDataSource)},
  { 299, 311, sizeof(::middle_layer_pb::SensorInfoNotify)},
  { 318, 327, sizeof(::middle_layer_pb::MeasureResultNotify_Point)},
  { 331, 339, sizeof(::middle_layer_pb::MeasureResultNotify)},
  { 342, 350, sizeof(::middle_layer_pb::TaskState)},
  { 353, 361, sizeof(::middle_layer_pb::TaskStateNotify)},
  { 364, 373, sizeof(::middle_layer_pb::TargetTrackNotify_Point)},
  { 377, 386, sizeof(::middle_layer_pb::TargetTrackNotify)},
  { 390, 397, sizeof(::middle_layer_pb::RtkOperationCmdReq)},
  { 399, 405, sizeof(::middle_layer_pb::RtkOperationCmdRes)},
  { 406, 417, sizeof(::middle_layer_pb::RtkOffsetInfo)},
  { 423, 442, sizeof(::middle_layer_pb::WorkMessageIssued)},
  { 456, 463, sizeof(::middle_layer_pb::WorkMessageIssuedRes)},
  { 465, 476, sizeof(::middle_layer_pb::DeviceTask)},
  { 482, 493, sizeof(::middle_layer_pb::StakeDto)},
  { 499, 505, sizeof(::middle_layer_pb::StakeDtoList)},
  { 506, 513, sizeof(::middle_layer_pb::StakeInfo)},
  { 515, 523, sizeof(::middle_layer_pb::StakeDtoListReq)},
  { 526, 533, sizeof(::middle_layer_pb::StakeDtoListRes)},
  { 535, 544, sizeof(::middle_layer_pb::PutSideLineParam)},
  { 548, 555, sizeof(::middle_layer_pb::PutMidLineParam)},
  { 557, 571, sizeof(::middle_layer_pb::PutLevellingParam)},
  { 580, 589, sizeof(::middle_layer_pb::PutLaneLineParam)},
  { 593, 602, sizeof(::middle_layer_pb::PutCrossSectionParam)},
  { 606, 621, sizeof(::middle_layer_pb::DrawStandardSquareParam)},
  { 631, 640, sizeof(::middle_layer_pb::DrawSideLineParam)},
  { 644, 651, sizeof(::middle_layer_pb::DrawMidLineParam)},
  { 653, 665, sizeof(::middle_layer_pb::DrawStakesHelpParam)},
  { 672, 679, sizeof(::middle_layer_pb::WorkEndNotify)},
  { 681, 688, sizeof(::middle_layer_pb::OperationRobotReq)},
  { 690, 697, sizeof(::middle_layer_pb::OperationRobotRes)},
  { 699, 709, sizeof(::middle_layer_pb::CalSideStakeReq)},
  { 714, 722, sizeof(::middle_layer_pb::CalSideStakeRes)},
  { 725, 736, sizeof(::middle_layer_pb::CalSideStakeListReq)},
  { 742, 750, sizeof(::middle_layer_pb::CalSideStakeListRes)},
  { 753, 761, sizeof(::middle_layer_pb::CalLaneStakeListRes)},
  { 764, 773, sizeof(::middle_layer_pb::CalLaneStakeListReq)},
  { 777, 787, sizeof(::middle_layer_pb::CalCrossSectionStakeArrayReq)},
  { 792, 800, sizeof(::middle_layer_pb::CalCrossSectionStakeArrayRes)},
  { 803, 814, sizeof(::middle_layer_pb::CalStandardSquareParamReq)},
  { 820, 828, sizeof(::middle_layer_pb::CalStandardSquareParamRes)},
  { 831, 842, sizeof(::middle_layer_pb::CalSquareWidthStakeReq)},
  { 848, 856, sizeof(::middle_layer_pb::CalSquareWidthStakeRes)},
  { 859, 869, sizeof(::middle_layer_pb::CalSquareStakeArrayReq)},
  { 874, 882, sizeof(::middle_layer_pb::CalSquareStakeArrayRes)},
  { 885, 894, sizeof(::middle_layer_pb::CalLevellingStakeArrayReq)},
  { 898, 906, sizeof(::middle_layer_pb::CalLevellingStakeArrayRes)},
  { 909, 919, sizeof(::middle_layer_pb::CalStakesHelpReq)},
  { 924, 932, sizeof(::middle_layer_pb::CalStakesHelpRes)},
  { 935, 945, sizeof(::middle_layer_pb::RobotManualOperationReq)},
  { 950, 957, sizeof(::middle_layer_pb::RobotManualOperationRes)},
  { 959, 965, sizeof(::middle_layer_pb::RobotAutopilotModeReq)},
  { 966, 975, sizeof(::middle_layer_pb::PlaneCoordinatesParams)},
  { 979, 986, sizeof(::middle_layer_pb::RobotAutopilotModeRes)},
  { 988, 997, sizeof(::middle_layer_pb::RobotDustingNotify)},
  { 1001, 1008, sizeof(::middle_layer_pb::RobotSiloParams)},
  { 1010, 1017, sizeof(::middle_layer_pb::RobotDustingSliderParams)},
  { 1019, 1028, sizeof(::middle_layer_pb::FourParam)},
  { 1032, 1044, sizeof(::middle_layer_pb::ProjectionParam)},
  { 1051, 1060, sizeof(::middle_layer_pb::EllipsoidParam)},
  { 1064, 1075, sizeof(::middle_layer_pb::CoordinateCalibrationReq)},
  { 1081, 1088, sizeof(::middle_layer_pb::CoordinateCalibrationRes)},
  { 1090, 1097, sizeof(::middle_layer_pb::WriteWordReq)},
  { 1099, 1106, sizeof(::middle_layer_pb::WriteWordRes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_Answer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PointENU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PointLLH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_Point2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_Point3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_Quaternion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_ImuAccelMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_ImuGyroMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_ImuEulerMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreState_SystemStateMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreState_MotionStateMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreState_RcStateMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreState_BmsBasicMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreState_OdometryMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreStateRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotCoreStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_AppLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_AppLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CloudLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CloudLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_LaserResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RtkResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RtkDataSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_SensorInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_MeasureResultNotify_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_MeasureResultNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_TaskState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_TaskStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_TargetTrackNotify_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_TargetTrackNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RtkOperationCmdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RtkOperationCmdRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RtkOffsetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_WorkMessageIssued_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_WorkMessageIssuedRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_DeviceTask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_StakeDto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_StakeDtoList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_StakeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_StakeDtoListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_StakeDtoListRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PutSideLineParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PutMidLineParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PutLevellingParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PutLaneLineParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PutCrossSectionParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_DrawStandardSquareParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_DrawSideLineParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_DrawMidLineParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_DrawStakesHelpParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_WorkEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_OperationRobotReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_OperationRobotRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSideStakeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSideStakeRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSideStakeListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSideStakeListRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalLaneStakeListRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalLaneStakeListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalCrossSectionStakeArrayReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalCrossSectionStakeArrayRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalStandardSquareParamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalStandardSquareParamRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSquareWidthStakeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSquareWidthStakeRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSquareStakeArrayReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalSquareStakeArrayRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalLevellingStakeArrayReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalLevellingStakeArrayRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalStakesHelpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CalStakesHelpRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotManualOperationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotManualOperationRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotAutopilotModeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_PlaneCoordinatesParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotAutopilotModeRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotDustingNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotSiloParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_RobotDustingSliderParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_FourParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_ProjectionParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_EllipsoidParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CoordinateCalibrationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_CoordinateCalibrationRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_WriteWordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::middle_layer_pb::_WriteWordRes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "middle_layer.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 92);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022middle_layer.proto\022\017middle_layer_pb\"9\n"
      "\005Query\022\n\n\002id\030\001 \002(\003\022\022\n\nquestioner\030\002 \002(\t\022\020"
      "\n\010question\030\003 \003(\t\"L\n\006Answer\022\n\n\002id\030\001 \002(\003\022\022"
      "\n\nquestioner\030\002 \002(\t\022\020\n\010answerer\030\003 \002(\t\022\020\n\010"
      "solution\030\004 \003(\t\"\023\n\005Empty\022\n\n\002id\030\001 \001(\005\"8\n\010P"
      "ointENU\022\016\n\001x\030\001 \001(\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\022"
      "\014\n\001z\030\003 \001(\001:\0010\"U\n\010PointLLH\022\020\n\003lon\030\001 \001(\001:\003"
      "nan\022\020\n\003lat\030\002 \001(\001:\003nan\022\021\n\006height\030\003 \001(\001:\0010"
      "\022\022\n\007heading\030\004 \001(\001:\0010\")\n\007Point2D\022\016\n\001x\030\001 \001"
      "(\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\"9\n\007Point3D\022\016\n\001x\030"
      "\001 \001(\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\022\016\n\001z\030\003 \001(\001:\003n"
      "an\"P\n\nQuaternion\022\017\n\002qx\030\001 \001(\001:\003nan\022\017\n\002qy\030"
      "\002 \001(\001:\003nan\022\017\n\002qz\030\003 \001(\001:\003nan\022\017\n\002qw\030\004 \001(\001:"
      "\003nan\"D\n\017ImuAccelMessage\022\017\n\007accel_x\030\001 \002(\002"
      "\022\017\n\007accel_y\030\002 \002(\002\022\017\n\007accel_z\030\003 \002(\002\"@\n\016Im"
      "uGyroMessage\022\016\n\006gyro_x\030\001 \002(\002\022\016\n\006gyro_y\030\002"
      " \002(\002\022\016\n\006gyro_z\030\003 \002(\002\";\n\017ImuEulerMessage\022"
      "\013\n\003yaw\030\001 \002(\002\022\r\n\005pitch\030\002 \002(\002\022\014\n\004roll\030\003 \002("
      "\002\"\037\n\021RobotCoreStateReq\022\n\n\002id\030\001 \002(\t\"\212\014\n\016R"
      "obotCoreState\022\n\n\002id\030\001 \002(\t\022\021\n\ttimestamp\030\002"
      " \002(\003\022H\n\014system_state\030\003 \001(\01322.middle_laye"
      "r_pb.RobotCoreState.SystemStateMessage\022H"
      "\n\014motion_state\030\004 \001(\01322.middle_layer_pb.R"
      "obotCoreState.MotionStateMessage\022@\n\010rc_s"
      "tate\030\005 \001(\0132..middle_layer_pb.RobotCoreSt"
      "ate.RcStateMessage\022B\n\tbms_state\030\006 \001(\0132/."
      "middle_layer_pb.RobotCoreState.BmsBasicM"
      "essage\022C\n\nodom_state\030\007 \001(\0132/.middle_laye"
      "r_pb.RobotCoreState.OdometryMessage\032\317\001\n\022"
      "SystemStateMessage\022F\n\rvehicle_state\030\001 \001("
      "\0162/.middle_layer_pb.RobotCoreState.AgxVe"
      "hicleState\022D\n\014control_mode\030\002 \001(\0162..middl"
      "e_layer_pb.RobotCoreState.AgxControlMode"
      "\022\027\n\017battery_voltage\030\003 \001(\002\022\022\n\nerror_code\030"
      "\004 \001(\005\032y\n\022MotionStateMessage\022\027\n\017linear_ve"
      "locity\030\001 \001(\002\022\030\n\020angular_velocity\030\002 \001(\002\022\030"
      "\n\020lateral_velocity\030\003 \001(\002\022\026\n\016steering_ang"
      "le\030\004 \001(\002\032\365\002\n\016RcStateMessage\022=\n\003swa\030\001 \001(\016"
      "20.middle_layer_pb.RobotCoreState.AgxRcS"
      "witchState\022=\n\003swb\030\002 \001(\01620.middle_layer_p"
      "b.RobotCoreState.AgxRcSwitchState\022=\n\003swc"
      "\030\003 \001(\01620.middle_layer_pb.RobotCoreState."
      "AgxRcSwitchState\022=\n\003swd\030\004 \001(\01620.middle_l"
      "ayer_pb.RobotCoreState.AgxRcSwitchState\022"
      "\025\n\rstick_right_v\030\005 \001(\005\022\025\n\rstick_right_h\030"
      "\006 \001(\005\022\024\n\014stick_left_v\030\007 \001(\005\022\024\n\014stick_lef"
      "t_h\030\010 \001(\005\022\r\n\005var_a\030\t \001(\005\032r\n\017BmsBasicMess"
      "age\022\023\n\013battery_soc\030\001 \001(\r\022\023\n\013battery_soh\030"
      "\002 \001(\r\022\017\n\007voltage\030\003 \001(\002\022\017\n\007current\030\004 \001(\002\022"
      "\023\n\013temperature\030\005 \001(\002\032:\n\017OdometryMessage\022"
      "\022\n\nleft_wheel\030\001 \001(\002\022\023\n\013right_wheel\030\002 \001(\002"
      "\"a\n\017AgxVehicleState\022\030\n\024VEHICLE_STATE_NOR"
      "MAL\020\000\022\027\n\023VEHICLE_STATE_ESTOP\020\001\022\033\n\027VEHICL"
      "E_STATE_EXCEPTION\020\002\"R\n\016AgxControlMode\022\023\n"
      "\017CONTROL_MODE_RC\020\000\022\024\n\020CONTROL_MODE_CAN\020\001"
      "\022\025\n\021CONTROL_MODE_UART\020\002\"N\n\020AgxRcSwitchSt"
      "ate\022\020\n\014RC_SWITCH_UP\020\000\022\024\n\020RC_SWITCH_MIDDL"
      "E\020\001\022\022\n\016RC_SWITCH_DOWN\020\002\"C\n\021RobotCoreStat"
      "eRes\022.\n\005state\030\001 \002(\0132\037.middle_layer_pb.Ro"
      "botCoreState\"F\n\024RobotCoreStateNotify\022.\n\005"
      "state\030\001 \002(\0132\037.middle_layer_pb.RobotCoreS"
      "tate\"\031\n\013AppLoginReq\022\n\n\002id\030\001 \002(\t\"7\n\013AppLo"
      "ginRes\022(\n\004code\030\001 \001(\0162\032.middle_layer_pb.E"
      "rrorCode\"\033\n\rRobotLoginReq\022\n\n\002id\030\001 \002(\t\"9\n"
      "\rRobotLoginRes\022(\n\004code\030\001 \001(\0162\032.middle_la"
      "yer_pb.ErrorCode\"\033\n\rCloudLoginReq\022\n\n\002id\030"
      "\001 \002(\t\"9\n\rCloudLoginRes\022(\n\004code\030\001 \001(\0162\032.m"
      "iddle_layer_pb.ErrorCode\"\035\n\013LaserResult\022"
      "\016\n\006height\030\001 \002(\001\"j\n\tRtkResult\022-\n\nutm_resu"
      "lt\030\001 \001(\0132\031.middle_layer_pb.PointENU\022.\n\013g"
      "nss_result\030\002 \001(\0132\031.middle_layer_pb.Point"
      "LLH\"\035\n\rRtkDataSource\022\014\n\004data\030\001 \001(\014\"\244\002\n\020S"
      "ensorInfoNotify\022\n\n\002id\030\001 \002(\t\022\021\n\ttimestamp"
      "\030\002 \002(\003\0223\n\timu_accel\030\003 \001(\0132 .middle_layer"
      "_pb.ImuAccelMessage\0221\n\010imu_gyro\030\004 \001(\0132\037."
      "middle_layer_pb.ImuGyroMessage\0223\n\timu_eu"
      "ler\030\005 \001(\0132 .middle_layer_pb.ImuEulerMess"
      "age\022\'\n\004gnss\030\006 \001(\0132\031.middle_layer_pb.Poin"
      "tLLH\022+\n\003rtk\030\007 \001(\0132\036.middle_layer_pb.RtkD"
      "ataSource\"\220\002\n\023MeasureResultNotify\022\n\n\002id\030"
      "\001 \002(\t\022\021\n\ttimestamp\030\002 \002(\003\022<\n\010pos_list\030\003 \003"
      "(\0132*.middle_layer_pb.MeasureResultNotify"
      ".Point\032\233\001\n\005Point\022,\n\tstake_dto\030\001 \002(\0132\031.mi"
      "ddle_layer_pb.StakeDto\022*\n\007rtk_res\030\002 \002(\0132"
      "\031.middle_layer_pb.PointLLH\022%\n\002pl\030\003 \001(\0132\031"
      ".middle_layer_pb.PointLLH\022\021\n\ttask_code\030\004"
      " \002(\t\"\223\002\n\tTaskState\0221\n\005state\030\001 \002(\0162\".midd"
      "le_layer_pb.TaskState.enState\022\021\n\ttask_co"
      "de\030\002 \001(\t\022,\n\tstake_dto\030\003 \001(\0132\031.middle_lay"
      "er_pb.StakeDto\"\221\001\n\007enState\022\027\n\022TASK_STATE"
      "_INVALID\020\377\001\022\025\n\021TASK_STATE_NORMAL\020\000\022\023\n\017TA"
      "SK_STATE_PLAY\020\001\022\024\n\020TASK_STATE_PAUSE\020\002\022\023\n"
      "\017TASK_STATE_STOP\020\003\022\026\n\022TASK_STATE_UNKNOWN"
      "\020\017\"[\n\017TaskStateNotify\022\n\n\002id\030\001 \002(\t\022\021\n\ttim"
      "estamp\030\002 \002(\003\022)\n\005state\030\003 \002(\0132\032.middle_lay"
      "er_pb.TaskState\"\207\002\n\021TargetTrackNotify\022\n\n"
      "\002id\030\001 \002(\t\022\021\n\ttimestamp\030\002 \002(\003\022:\n\010curr_pos"
      "\030\003 \001(\0132(.middle_layer_pb.TargetTrackNoti"
      "fy.Point\022:\n\010pos_list\030\004 \003(\0132(.middle_laye"
      "r_pb.TargetTrackNotify.Point\032[\n\005Point\022(\n"
      "\006pt_x_y\030\001 \002(\0132\030.middle_layer_pb.Point2D\022"
      "\014\n\004pt_h\030\002 \002(\001\022\014\n\004pt_c\030\003 \002(\001\022\014\n\004pt_s\030\004 \002("
      "\001\"\316\001\n\022RtkOperationCmdReq\022\n\n\002id\030\001 \002(\t\022A\n\004"
      "type\030\002 \002(\01623.middle_layer_pb.RtkOperatio"
      "nCmdReq.enOperationType\"i\n\017enOperationTy"
      "pe\022\033\n\026OPERATION_TYPE_INVALID\020\377\001\022\032\n\026OPERA"
      "TION_TYPE_CONNECT\020\000\022\035\n\031OPERATION_TYPE_DI"
      "SCONNECT\020\001\">\n\022RtkOperationCmdRes\022(\n\004code"
      "\030\001 \002(\0162\032.middle_layer_pb.ErrorCode\"\212\001\n\rR"
      "tkOffsetInfo\022&\n\003pos\030\001 \002(\0132\031.middle_layer"
      "_pb.PointLLH\022\014\n\004name\030\002 \002(\t\022\r\n\005level\030\003 \002("
      "\t\022\020\n\010offset_x\030\004 \002(\001\022\020\n\010offset_y\030\005 \002(\001\022\020\n"
      "\010offset_z\030\006 \002(\001\"\310\006\n\021WorkMessageIssued\022\n\n"
      "\002id\030\001 \002(\t\0220\n\013device_task\030\002 \002(\0132\033.middle_"
      "layer_pb.DeviceTask\022,\n\twork_type\030\003 \002(\0162\031"
      ".middle_layer_pb.WorkType\0227\n\017rtk_offset_"
      "info\030\004 \002(\0132\036.middle_layer_pb.RtkOffsetIn"
      "fo\0221\n\016stake_dto_list\030\005 \003(\0132\031.middle_laye"
      "r_pb.StakeDto\022>\n\023put_side_line_param\030\006 \001"
      "(\0132!.middle_layer_pb.PutSideLineParam\022@\n"
      "\024draw_side_line_param\030\007 \001(\0132\".middle_lay"
      "er_pb.DrawSideLineParam\022<\n\022put_mid_line_"
      "param\030\010 \001(\0132 .middle_layer_pb.PutMidLine"
      "Param\022>\n\023draw_mid_line_param\030\t \001(\0132!.mid"
      "dle_layer_pb.DrawMidLineParam\022L\n\032draw_st"
      "andard_square_param\030\n \001(\0132(.middle_layer"
      "_pb.DrawStandardSquareParam\022\?\n\023put_level"
      "ling_param\030\013 \001(\0132\".middle_layer_pb.PutLe"
      "vellingParam\022>\n\023put_lane_line_param\030\014 \001("
      "\0132!.middle_layer_pb.PutLaneLineParam\022D\n\026"
      "draw_stakes_help_param\030\r \001(\0132$.middle_la"
      "yer_pb.DrawStakesHelpParam\022F\n\027put_cross_"
      "section_param\030\016 \001(\0132%.middle_layer_pb.Pu"
      "tCrossSectionParam\"r\n\024WorkMessageIssuedR"
      "es\022(\n\004code\030\001 \002(\0162\032.middle_layer_pb.Error"
      "Code\0220\n\013device_task\030\002 \001(\0132\033.middle_layer"
      "_pb.DeviceTask\"}\n\nDeviceTask\022\021\n\ttask_cod"
      "e\030\001 \002(\t\022\023\n\013start_stake\030\003 \002(\t\022\021\n\tend_stak"
      "e\030\004 \002(\t\022\022\n\nstart_time\030\005 \002(\003\022\020\n\010end_time\030"
      "\006 \002(\003\022\016\n\006status\030\007 \002(\005\"Y\n\010StakeDto\022\r\n\005sta"
      "ke\030\001 \002(\t\022\t\n\001x\030\004 \002(\001\022\t\n\001y\030\005 \002(\001\022\t\n\001Z\030\006 \002("
      "\001\022\016\n\006ground\030\010 \002(\001\022\r\n\005angle\030\t \002(\001\"A\n\014Stak"
      "eDtoList\0221\n\016stake_dto_list\030\007 \003(\0132\031.middl"
      "e_layer_pb.StakeDto\"H\n\tStakeInfo\022(\n\005stak"
      "e\030\001 \003(\0132\031.middle_layer_pb.StakeDto\022\021\n\tst"
      "op_line\030\002 \003(\t\"\206\001\n\017StakeDtoListReq\022\025\n\rsec"
      "tion_index\030\001 \002(\005\022,\n\twork_type\030\002 \002(\0162\031.mi"
      "ddle_layer_pb.WorkType\022.\n\nstake_info\030\003 \003"
      "(\0132\032.middle_layer_pb.StakeInfo\"R\n\017StakeD"
      "toListRes\022(\n\004code\030\001 \002(\0162\032.middle_layer_p"
      "b.ErrorCode\022\025\n\rsection_index\030\002 \002(\005\"f\n\020Pu"
      "tSideLineParam\022\022\n\nlc_spacing\030\001 \002(\005\022\031\n\021me"
      "asuring_spacing\030\002 \002(\005\022\014\n\004side\030\003 \002(\005\022\025\n\rs"
      "afety_offset\030\004 \002(\005\">\n\017PutMidLineParam\022\021\n"
      "\tlcSpacing\030\001 \002(\005\022\030\n\020measuringSpacing\030\002 \002"
      "(\005\"\342\001\n\021PutLevellingParam\022\022\n\nlc_spacing\030\001"
      " \002(\005\022\031\n\021measuring_spacing\030\002 \002(\005\022\014\n\004side\030"
      "\003 \002(\005\022\025\n\rlevelling_num\030\004 \002(\005\022\031\n\021press_co"
      "efficient\030\005 \002(\001\022\025\n\rpoint_density\030\006 \002(\001\022\027"
      "\n\017Layer_thickness\030\007 \002(\001\022\027\n\017total_thickne"
      "ss\030\010 \002(\001\022\025\n\rsafety_offset\030\t \002(\005\"a\n\020PutLa"
      "neLineParam\022\022\n\nlc_spacing\030\001 \002(\005\022\031\n\021measu"
      "ring_spacing\030\002 \002(\005\022\014\n\004side\030\003 \002(\005\022\020\n\010lane"
      "_num\030\004 \002(\005\"j\n\024PutCrossSectionParam\022\022\n\nlc"
      "_spacing\030\001 \002(\005\022\031\n\021measuring_spacing\030\002 \002("
      "\005\022\014\n\004side\030\003 \002(\005\022\025\n\rpoint_density\030\004 \002(\001\"\372"
      "\001\n\027DrawStandardSquareParam\022\022\n\nlc_spacing"
      "\030\001 \002(\005\022\031\n\021measuring_spacing\030\002 \002(\005\022\014\n\004sid"
      "e\030\003 \002(\005\022\025\n\rsquare_length\030\004 \002(\001\022\024\n\014square"
      "_width\030\005 \002(\001\022\022\n\nsquare_row\030\006 \002(\005\022\026\n\016squa"
      "re_columns\030\007 \002(\005\022\031\n\021require_earthwork\030\010 "
      "\002(\001\022\027\n\017fill_dig_height\030\t \002(\001\022\025\n\rsafety_o"
      "ffset\030\n \002(\005\"g\n\021DrawSideLineParam\022\022\n\nlc_s"
      "pacing\030\001 \002(\005\022\031\n\021measuring_spacing\030\002 \002(\005\022"
      "\014\n\004side\030\003 \002(\005\022\025\n\rsafety_offset\030\004 \002(\005\"\?\n\020"
      "DrawMidLineParam\022\021\n\tlcSpacing\030\001 \002(\005\022\030\n\020m"
      "easuringSpacing\030\002 \002(\005\"\266\001\n\023DrawStakesHelp"
      "Param\022\022\n\nlc_spacing\030\001 \002(\005\022\031\n\021measuring_s"
      "pacing\030\002 \002(\005\022\014\n\004side\030\003 \002(\005\022\025\n\rlevelling_"
      "num\030\004 \002(\005\022\031\n\021press_coefficient\030\005 \002(\001\022\027\n\017"
      "Layer_thickness\030\006 \002(\001\022\027\n\017total_thickness"
      "\030\007 \002(\001\"M\n\rWorkEndNotify\022\n\n\002id\030\001 \002(\t\0220\n\013d"
      "evice_task\030\002 \002(\0132\033.middle_layer_pb.Devic"
      "eTask\"O\n\021OperationRobotReq\022\n\n\002id\030\001 \002(\t\022."
      "\n\004type\030\002 \002(\0162 .middle_layer_pb.enOperati"
      "onType\"m\n\021OperationRobotRes\022(\n\004code\030\001 \001("
      "\0162\032.middle_layer_pb.ErrorCode\022.\n\004type\030\002 "
      "\001(\0162 .middle_layer_pb.enOperationType\"\223\001"
      "\n\017CalSideStakeReq\022\n\n\002id\030\001 \002(\t\022\021\n\ttask_co"
      "de\030\002 \002(\t\022,\n\tstake_dto\030\003 \002(\0132\031.middle_lay"
      "er_pb.StakeDto\022%\n\002pt\030\004 \002(\0132\031.middle_laye"
      "r_pb.PointLLH\022\014\n\004side\030\005 \002(\005\"u\n\017CalSideSt"
      "akeRes\022\n\n\002id\030\001 \002(\t\022(\n\004code\030\002 \001(\0162\032.middl"
      "e_layer_pb.ErrorCode\022,\n\tstake_dto\030\003 \002(\0132"
      "\031.middle_layer_pb.StakeDto\"\263\001\n\023CalSideSt"
      "akeListReq\022\n\n\002id\030\001 \002(\t\022\021\n\ttask_code\030\002 \002("
      "\t\0221\n\016stake_dto_list\030\003 \003(\0132\031.middle_layer"
      "_pb.StakeDto\022%\n\002pt\030\004 \002(\0132\031.middle_layer_"
      "pb.PointLLH\022\014\n\004side\030\005 \002(\005\022\025\n\rsafety_offs"
      "et\030\006 \002(\005\"~\n\023CalSideStakeListRes\022\n\n\002id\030\001 "
      "\002(\t\022(\n\004code\030\002 \001(\0162\032.middle_layer_pb.Erro"
      "rCode\0221\n\016stake_dto_list\030\003 \003(\0132\031.middle_l"
      "ayer_pb.StakeDto\"~\n\023CalLaneStakeListRes\022"
      "\n\n\002id\030\001 \002(\t\022(\n\004code\030\002 \001(\0162\032.middle_layer"
      "_pb.ErrorCode\0221\n\016stake_dto_list\030\003 \003(\0132\031."
      "middle_layer_pb.StakeDto\"\247\001\n\023CalLaneStak"
      "eListReq\022\n\n\002id\030\001 \002(\t\022\021\n\ttask_code\030\002 \002(\t\022"
      "1\n\016stake_dto_list\030\003 \003(\0132\031.middle_layer_p"
      "b.StakeDto\022>\n\023put_lane_line_param\030\004 \002(\0132"
      "!.middle_layer_pb.PutLaneLineParam\"\337\001\n\034C"
      "alCrossSectionStakeArrayReq\022\n\n\002id\030\001 \002(\t\022"
      "\021\n\ttask_code\030\002 \002(\t\022F\n\027put_cross_section_"
      "param\030\003 \002(\0132%.middle_layer_pb.PutCrossSe"
      "ctionParam\022%\n\002pt\030\004 \002(\0132\031.middle_layer_pb"
      ".PointLLH\0221\n\016stake_dto_list\030\005 \003(\0132\031.midd"
      "le_layer_pb.StakeDto\"\217\001\n\034CalCrossSection"
      "StakeArrayRes\022\n\n\002id\030\001 \002(\t\022(\n\004code\030\002 \001(\0162"
      "\032.middle_layer_pb.ErrorCode\0229\n\022stake_dto"
      "_two_list\030\003 \003(\0132\035.middle_layer_pb.StakeD"
      "toList\"\353\001\n\031CalStandardSquareParamReq\022\n\n\002"
      "id\030\001 \002(\t\022\021\n\ttask_code\030\002 \002(\t\022L\n\032draw_stan"
      "dard_square_param\030\003 \002(\0132(.middle_layer_p"
      "b.DrawStandardSquareParam\022,\n\tstake_dto\030\004"
      " \002(\0132\031.middle_layer_pb.StakeDto\022%\n\002pt\030\005 "
      "\002(\0132\031.middle_layer_pb.PointLLH\022\014\n\004side\030\006"
      " \002(\005\"\237\001\n\031CalStandardSquareParamRes\022\n\n\002id"
      "\030\001 \002(\t\022(\n\004code\030\002 \001(\0162\032.middle_layer_pb.E"
      "rrorCode\022L\n\032draw_standard_square_param\030\003"
      " \002(\0132(.middle_layer_pb.DrawStandardSquar"
      "eParam\"\350\001\n\026CalSquareWidthStakeReq\022\n\n\002id\030"
      "\001 \002(\t\022\021\n\ttask_code\030\002 \002(\t\022L\n\032draw_standar"
      "d_square_param\030\003 \002(\0132(.middle_layer_pb.D"
      "rawStandardSquareParam\022,\n\tstake_dto\030\004 \002("
      "\0132\031.middle_layer_pb.StakeDto\022%\n\002pt\030\005 \002(\013"
      "2\031.middle_layer_pb.PointLLH\022\014\n\004side\030\006 \002("
      "\005\"\201\001\n\026CalSquareWidthStakeRes\022\n\n\002id\030\001 \002(\t"
      "\022(\n\004code\030\002 \001(\0162\032.middle_layer_pb.ErrorCo"
      "de\0221\n\016stake_dto_list\030\003 \003(\0132\031.middle_laye"
      "r_pb.StakeDto\"\337\001\n\026CalSquareStakeArrayReq"
      "\022\n\n\002id\030\001 \002(\t\022\021\n\ttask_code\030\002 \002(\t\022L\n\032draw_"
      "standard_square_param\030\003 \002(\0132(.middle_lay"
      "er_pb.DrawStandardSquareParam\0221\n\016stake_d"
      "to_list\030\004 \003(\0132\031.middle_layer_pb.StakeDto"
      "\022%\n\002pt\030\005 \002(\0132\031.middle_layer_pb.PointLLH\""
      "\211\001\n\026CalSquareStakeArrayRes\022\n\n\002id\030\001 \002(\t\022("
      "\n\004code\030\002 \001(\0162\032.middle_layer_pb.ErrorCode"
      "\0229\n\022stake_dto_two_list\030\004 \003(\0132\035.middle_la"
      "yer_pb.StakeDtoList\"\256\001\n\031CalLevellingStak"
      "eArrayReq\022\n\n\002id\030\001 \002(\t\022\021\n\ttask_code\030\002 \002(\t"
      "\022\?\n\023put_levelling_param\030\003 \002(\0132\".middle_l"
      "ayer_pb.PutLevellingParam\0221\n\016stake_dto_l"
      "ist\030\004 \003(\0132\031.middle_layer_pb.StakeDto\"\214\001\n"
      "\031CalLevellingStakeArrayRes\022\n\n\002id\030\001 \002(\t\022("
      "\n\004code\030\002 \001(\0162\032.middle_layer_pb.ErrorCode"
      "\0229\n\022stake_dto_two_list\030\003 \003(\0132\035.middle_la"
      "yer_pb.StakeDtoList\"\321\001\n\020CalStakesHelpReq"
      "\022\n\n\002id\030\001 \002(\t\022\021\n\ttask_code\030\002 \002(\t\022D\n\026draw_"
      "stakes_help_param\030\003 \002(\0132$.middle_layer_p"
      "b.DrawStakesHelpParam\0221\n\016stake_dto_list\030"
      "\004 \003(\0132\031.middle_layer_pb.StakeDto\022%\n\002pt\030\005"
      " \002(\0132\031.middle_layer_pb.PointLLH\"{\n\020CalSt"
      "akesHelpRes\022\n\n\002id\030\001 \002(\t\022(\n\004code\030\002 \001(\0162\032."
      "middle_layer_pb.ErrorCode\0221\n\016stake_dto_l"
      "ist\030\003 \003(\0132\031.middle_layer_pb.StakeDto\"\235\003\n"
      "\027RobotManualOperationReq\022\n\n\002id\030\001 \002(\t\022T\n\022"
      "vertical_direction\030\002 \002(\01628.middle_layer_"
      "pb.RobotManualOperationReq.enDirectionTy"
      "pe\022V\n\024horizontal_direction\030\003 \002(\01628.middl"
      "e_layer_pb.RobotManualOperationReq.enDir"
      "ectionType\022\026\n\016vertical_value\030\004 \002(\001\022\030\n\020ho"
      "rizontal_value\030\005 \002(\001\"\225\001\n\017enDirectionType"
      "\022\033\n\026DIRECTION_TYPE_INVALID\020\377\001\022\027\n\023DIRECTI"
      "ON_TYPE_LEFT\020\000\022\030\n\024DIRECTION_TYPE_RIGHT\020\001"
      "\022\030\n\024DIRECTION_TYPE_FRONT\020\002\022\030\n\024DIRECTION_"
      "TYPE_AFTER\020\003\"O\n\027RobotManualOperationRes\022"
      "\n\n\002id\030\001 \002(\t\022(\n\004code\030\002 \001(\0162\032.middle_layer"
      "_pb.ErrorCode\"b\n\025RobotAutopilotModeReq\022I"
      "\n\030plane_coordinates_params\030\001 \003(\0132\'.middl"
      "e_layer_pb.PlaneCoordinatesParams\"H\n\026Pla"
      "neCoordinatesParams\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002("
      "\001\022\t\n\001Z\030\003 \001(\001\022\r\n\005angle\030\004 \002(\001\"M\n\025RobotAuto"
      "pilotModeRes\022\n\n\002id\030\001 \002(\t\022(\n\004code\030\002 \001(\0162\032"
      ".middle_layer_pb.ErrorCode\"\255\002\n\022RobotDust"
      "ingNotify\022\n\n\002id\030\001 \002(\t\0225\n\013silo_params\030\002 \001"
      "(\0132 .middle_layer_pb.RobotSiloParams\022H\n\025"
      "dusting_slider_params\030\003 \002(\0132).middle_lay"
      "er_pb.RobotDustingSliderParams\022R\n\023dustin"
      "g_switch_type\030\004 \002(\01625.middle_layer_pb.Ro"
      "botDustingNotify.DustingSwitchType\"6\n\021Du"
      "stingSwitchType\022\020\n\014switch_close\020\000\022\017\n\013swi"
      "tch_open\020\001\">\n\017RobotSiloParams\022\024\n\014powder_"
      "total\030\001 \002(\001\022\025\n\rpowder_margin\030\002 \002(\001\">\n\030Ro"
      "botDustingSliderParams\022\020\n\010offset_x\030\001 \002(\001"
      "\022\020\n\010offset_y\030\002 \002(\001\"B\n\tFourParam\022\n\n\002dx\030\001 "
      "\002(\001\022\n\n\002dy\030\002 \002(\001\022\r\n\005scale\030\003 \002(\001\022\016\n\006rotate"
      "\030\004 \002(\001\"\265\001\n\017ProjectionParam\022\027\n\017projection"
      "_name\030\001 \002(\t\022\024\n\014scale_factor\030\002 \002(\001\022\030\n\020cen"
      "tral_meridian\030\003 \002(\001\022\032\n\022latitude_of_origi"
      "n\030\004 \002(\001\022\025\n\rfalse_easting\030\005 \002(\001\022\026\n\016false_"
      "northing\030\006 \002(\001\022\016\n\006height\030\007 \002(\001\"d\n\016Ellips"
      "oidParam\022\026\n\016ellipsoid_name\030\001 \002(\t\022\022\n\nmacr"
      "o_axis\030\002 \002(\001\022\022\n\nminor_axis\030\003 \002(\001\022\022\n\nflat"
      "tening\030\004 \002(\001\"\216\002\n\030CoordinateCalibrationRe"
      "q\022\n\n\002id\030\001 \002(\t\022%\n\002pt\030\002 \002(\0132\031.middle_layer"
      "_pb.PointLLH\022.\n\nfour_param\030\003 \002(\0132\032.middl"
      "e_layer_pb.FourParam\022\031\n\021elevation_fittin"
      "g\030\004 \002(\001\022:\n\020projection_param\030\005 \002(\0132 .midd"
      "le_layer_pb.ProjectionParam\0228\n\017ellipsoid"
      "_param\030\006 \002(\0132\037.middle_layer_pb.Ellipsoid"
      "Param\"P\n\030CoordinateCalibrationRes\022\n\n\002id\030"
      "\001 \002(\t\022(\n\004code\030\002 \001(\0162\032.middle_layer_pb.Er"
      "rorCode\"(\n\014WriteWordReq\022\n\n\002id\030\001 \002(\t\022\014\n\004w"
      "ord\030\002 \002(\t\"D\n\014WriteWordRes\022\n\n\002id\030\001 \002(\t\022(\n"
      "\004code\030\002 \001(\0162\032.middle_layer_pb.ErrorCode*"
      "\?\n\tErrorCode\022\014\n\010kNoError\020\000\022\021\n\rkInvalidEr"
      "ror\020\002\022\021\n\rkUnknownError\020\003*\357\001\n\010WorkType\022\020\n"
      "\014PUT_MID_LINE\020\001\022\021\n\rPUT_SIDE_LINE\020\002\022\027\n\023PU"
      "T_LEVELLING_PARAM\020\003\022\021\n\rPUT_LANE_LINE\020\004\022\025"
      "\n\021PUT_CROSS_SECTION\020\005\022\030\n\024DRAW_STANDARD_S"
      "QUARE\020\006\022\027\n\023DRAW_MID_LINE_PARAM\020\007\022\030\n\024DRAW"
      "_SIDE_LINE_PARAM\020\010\022\032\n\026DRAW_STAKES_HELP_P"
      "ARAM\020\t\022\022\n\016DRAW_LANE_LINE\020\020*\233\001\n\017enOperati"
      "onType\022\033\n\026OPERATION_TYPE_INVALID\020\377\001\022\027\n\023O"
      "PERATION_TYPE_PLAY\020\000\022\030\n\024OPERATION_TYPE_P"
      "AUSE\020\001\022\027\n\023OPERATION_TYPE_STOP\020\002\022\037\n\033OPERA"
      "TION_TYPE_ADD_MATERIAL\020\003B(\n\031com.kotei.co"
      "mmon.protocolB\013MiddleLayer"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13066);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "middle_layer.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_middle_5flayer_2eproto
namespace middle_layer_pb {
const ::google::protobuf::EnumDescriptor* RobotCoreState_AgxVehicleState_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[0];
}
bool RobotCoreState_AgxVehicleState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotCoreState_AgxVehicleState RobotCoreState::VEHICLE_STATE_NORMAL;
const RobotCoreState_AgxVehicleState RobotCoreState::VEHICLE_STATE_ESTOP;
const RobotCoreState_AgxVehicleState RobotCoreState::VEHICLE_STATE_EXCEPTION;
const RobotCoreState_AgxVehicleState RobotCoreState::AgxVehicleState_MIN;
const RobotCoreState_AgxVehicleState RobotCoreState::AgxVehicleState_MAX;
const int RobotCoreState::AgxVehicleState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotCoreState_AgxControlMode_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[1];
}
bool RobotCoreState_AgxControlMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotCoreState_AgxControlMode RobotCoreState::CONTROL_MODE_RC;
const RobotCoreState_AgxControlMode RobotCoreState::CONTROL_MODE_CAN;
const RobotCoreState_AgxControlMode RobotCoreState::CONTROL_MODE_UART;
const RobotCoreState_AgxControlMode RobotCoreState::AgxControlMode_MIN;
const RobotCoreState_AgxControlMode RobotCoreState::AgxControlMode_MAX;
const int RobotCoreState::AgxControlMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotCoreState_AgxRcSwitchState_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[2];
}
bool RobotCoreState_AgxRcSwitchState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotCoreState_AgxRcSwitchState RobotCoreState::RC_SWITCH_UP;
const RobotCoreState_AgxRcSwitchState RobotCoreState::RC_SWITCH_MIDDLE;
const RobotCoreState_AgxRcSwitchState RobotCoreState::RC_SWITCH_DOWN;
const RobotCoreState_AgxRcSwitchState RobotCoreState::AgxRcSwitchState_MIN;
const RobotCoreState_AgxRcSwitchState RobotCoreState::AgxRcSwitchState_MAX;
const int RobotCoreState::AgxRcSwitchState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TaskState_enState_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[3];
}
bool TaskState_enState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 15:
    case 255:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TaskState_enState TaskState::TASK_STATE_INVALID;
const TaskState_enState TaskState::TASK_STATE_NORMAL;
const TaskState_enState TaskState::TASK_STATE_PLAY;
const TaskState_enState TaskState::TASK_STATE_PAUSE;
const TaskState_enState TaskState::TASK_STATE_STOP;
const TaskState_enState TaskState::TASK_STATE_UNKNOWN;
const TaskState_enState TaskState::enState_MIN;
const TaskState_enState TaskState::enState_MAX;
const int TaskState::enState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RtkOperationCmdReq_enOperationType_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[4];
}
bool RtkOperationCmdReq_enOperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 255:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq::OPERATION_TYPE_INVALID;
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq::OPERATION_TYPE_CONNECT;
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq::OPERATION_TYPE_DISCONNECT;
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq::enOperationType_MIN;
const RtkOperationCmdReq_enOperationType RtkOperationCmdReq::enOperationType_MAX;
const int RtkOperationCmdReq::enOperationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotManualOperationReq_enDirectionType_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[5];
}
bool RobotManualOperationReq_enDirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 255:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::DIRECTION_TYPE_INVALID;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::DIRECTION_TYPE_LEFT;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::DIRECTION_TYPE_RIGHT;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::DIRECTION_TYPE_FRONT;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::DIRECTION_TYPE_AFTER;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::enDirectionType_MIN;
const RobotManualOperationReq_enDirectionType RobotManualOperationReq::enDirectionType_MAX;
const int RobotManualOperationReq::enDirectionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotDustingNotify_DustingSwitchType_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[6];
}
bool RobotDustingNotify_DustingSwitchType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotDustingNotify_DustingSwitchType RobotDustingNotify::switch_close;
const RobotDustingNotify_DustingSwitchType RobotDustingNotify::switch_open;
const RobotDustingNotify_DustingSwitchType RobotDustingNotify::DustingSwitchType_MIN;
const RobotDustingNotify_DustingSwitchType RobotDustingNotify::DustingSwitchType_MAX;
const int RobotDustingNotify::DustingSwitchType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[7];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WorkType_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[8];
}
bool WorkType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* enOperationType_descriptor() {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_middle_5flayer_2eproto::file_level_enum_descriptors[9];
}
bool enOperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Query::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Query::kIdFieldNumber;
const int Query::kQuestionerFieldNumber;
const int Query::kQuestionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Query::Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsQuery();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.Query)
}
Query::Query(const Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      question_(from.question_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  questioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_questioner()) {
    questioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.questioner_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.Query)
}

void Query::SharedCtor() {
  _cached_size_ = 0;
  questioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
}

Query::~Query() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.Query)
  SharedDtor();
}

void Query::SharedDtor() {
  questioner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Query::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Query::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Query& Query::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsQuery();
  return *internal_default_instance();
}

Query* Query::New(::google::protobuf::Arena* arena) const {
  Query* n = new Query;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  question_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!questioner_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*questioner_.UnsafeRawStringPointer())->clear();
  }
  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.Query)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string questioner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_questioner()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->questioner().data(), static_cast<int>(this->questioner().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.Query.questioner");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string question = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_question()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->question(this->question_size() - 1).data(),
            static_cast<int>(this->question(this->question_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.Query.question");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.Query)
  return false;
#undef DO_
}

void Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string questioner = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->questioner().data(), static_cast<int>(this->questioner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Query.questioner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->questioner(), output);
  }

  // repeated string question = 3;
  for (int i = 0, n = this->question_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->question(i).data(), static_cast<int>(this->question(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Query.question");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->question(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.Query)
}

::google::protobuf::uint8* Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string questioner = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->questioner().data(), static_cast<int>(this->questioner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Query.questioner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->questioner(), target);
  }

  // repeated string question = 3;
  for (int i = 0, n = this->question_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->question(i).data(), static_cast<int>(this->question(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Query.question");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->question(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.Query)
  return target;
}

size_t Query::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.Query)
  size_t total_size = 0;

  if (has_questioner()) {
    // required string questioner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->questioner());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  return total_size;
}
size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.Query)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string questioner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->questioner());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string question = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->question_size());
  for (int i = 0, n = this->question_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->question(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.Query)
    MergeFrom(*source);
  }
}

void Query::MergeFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  question_.MergeFrom(from.question_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_questioner();
      questioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.questioner_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Query::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Query::Swap(Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Query::InternalSwap(Query* other) {
  using std::swap;
  question_.InternalSwap(&other->question_);
  questioner_.Swap(&other->questioner_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Query::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Answer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Answer::kIdFieldNumber;
const int Answer::kQuestionerFieldNumber;
const int Answer::kAnswererFieldNumber;
const int Answer::kSolutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Answer::Answer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsAnswer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.Answer)
}
Answer::Answer(const Answer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      solution_(from.solution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  questioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_questioner()) {
    questioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.questioner_);
  }
  answerer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_answerer()) {
    answerer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.answerer_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.Answer)
}

void Answer::SharedCtor() {
  _cached_size_ = 0;
  questioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  answerer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
}

Answer::~Answer() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.Answer)
  SharedDtor();
}

void Answer::SharedDtor() {
  questioner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  answerer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Answer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Answer::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Answer& Answer::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsAnswer();
  return *internal_default_instance();
}

Answer* Answer::New(::google::protobuf::Arena* arena) const {
  Answer* n = new Answer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Answer::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.Answer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  solution_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!questioner_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*questioner_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!answerer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*answerer_.UnsafeRawStringPointer())->clear();
    }
  }
  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Answer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.Answer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string questioner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_questioner()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->questioner().data(), static_cast<int>(this->questioner().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.Answer.questioner");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string answerer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_answerer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->answerer().data(), static_cast<int>(this->answerer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.Answer.answerer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string solution = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_solution()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->solution(this->solution_size() - 1).data(),
            static_cast<int>(this->solution(this->solution_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.Answer.solution");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.Answer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.Answer)
  return false;
#undef DO_
}

void Answer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.Answer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string questioner = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->questioner().data(), static_cast<int>(this->questioner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Answer.questioner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->questioner(), output);
  }

  // required string answerer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->answerer().data(), static_cast<int>(this->answerer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Answer.answerer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->answerer(), output);
  }

  // repeated string solution = 4;
  for (int i = 0, n = this->solution_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solution(i).data(), static_cast<int>(this->solution(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Answer.solution");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->solution(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.Answer)
}

::google::protobuf::uint8* Answer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.Answer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string questioner = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->questioner().data(), static_cast<int>(this->questioner().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Answer.questioner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->questioner(), target);
  }

  // required string answerer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->answerer().data(), static_cast<int>(this->answerer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Answer.answerer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->answerer(), target);
  }

  // repeated string solution = 4;
  for (int i = 0, n = this->solution_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solution(i).data(), static_cast<int>(this->solution(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.Answer.solution");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->solution(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.Answer)
  return target;
}

size_t Answer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.Answer)
  size_t total_size = 0;

  if (has_questioner()) {
    // required string questioner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->questioner());
  }

  if (has_answerer()) {
    // required string answerer = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->answerer());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  return total_size;
}
size_t Answer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.Answer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string questioner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->questioner());

    // required string answerer = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->answerer());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string solution = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->solution_size());
  for (int i = 0, n = this->solution_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->solution(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Answer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.Answer)
  GOOGLE_DCHECK_NE(&from, this);
  const Answer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Answer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.Answer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.Answer)
    MergeFrom(*source);
  }
}

void Answer::MergeFrom(const Answer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.Answer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  solution_.MergeFrom(from.solution_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_questioner();
      questioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.questioner_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_answerer();
      answerer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.answerer_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Answer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.Answer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Answer::CopyFrom(const Answer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.Answer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Answer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Answer::Swap(Answer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Answer::InternalSwap(Answer* other) {
  using std::swap;
  solution_.InternalSwap(&other->solution_);
  questioner_.Swap(&other->questioner_);
  answerer_.Swap(&other->answerer_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Answer::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Empty::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsEmpty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsEmpty();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.Empty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointENU::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointENU::kXFieldNumber;
const int PointENU::kYFieldNumber;
const int PointENU::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointENU::PointENU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPointENU();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PointENU)
}
PointENU::PointENU(const PointENU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&z_, &from.z_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&z_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PointENU)
}

void PointENU::SharedCtor() {
  _cached_size_ = 0;
  z_ = 0;
  x_ = ::google::protobuf::internal::NaN();
  y_ = ::google::protobuf::internal::NaN();
}

PointENU::~PointENU() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PointENU)
  SharedDtor();
}

void PointENU::SharedDtor() {
}

void PointENU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PointENU::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointENU& PointENU::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPointENU();
  return *internal_default_instance();
}

PointENU* PointENU::New(::google::protobuf::Arena* arena) const {
  PointENU* n = new PointENU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PointENU::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PointENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    z_ = 0;
    x_ = ::google::protobuf::internal::NaN();
    y_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PointENU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PointENU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PointENU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PointENU)
  return false;
#undef DO_
}

void PointENU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PointENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PointENU)
}

::google::protobuf::uint8* PointENU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PointENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PointENU)
  return target;
}

size_t PointENU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PointENU)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double z = 3 [default = 0];
    if (has_z()) {
      total_size += 1 + 8;
    }

    // optional double x = 1 [default = nan];
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 2 [default = nan];
    if (has_y()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PointENU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PointENU)
  GOOGLE_DCHECK_NE(&from, this);
  const PointENU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointENU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PointENU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PointENU)
    MergeFrom(*source);
  }
}

void PointENU::MergeFrom(const PointENU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PointENU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PointENU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PointENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointENU::CopyFrom(const PointENU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PointENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointENU::IsInitialized() const {
  return true;
}

void PointENU::Swap(PointENU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointENU::InternalSwap(PointENU* other) {
  using std::swap;
  swap(z_, other->z_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PointENU::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointLLH::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointLLH::kLonFieldNumber;
const int PointLLH::kLatFieldNumber;
const int PointLLH::kHeightFieldNumber;
const int PointLLH::kHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointLLH::PointLLH()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PointLLH)
}
PointLLH::PointLLH(const PointLLH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&lat_) -
    reinterpret_cast<char*>(&height_)) + sizeof(lat_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PointLLH)
}

void PointLLH::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_) -
      reinterpret_cast<char*>(&height_)) + sizeof(heading_));
  lon_ = ::google::protobuf::internal::NaN();
  lat_ = ::google::protobuf::internal::NaN();
}

PointLLH::~PointLLH() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PointLLH)
  SharedDtor();
}

void PointLLH::SharedDtor() {
}

void PointLLH::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PointLLH::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointLLH& PointLLH::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPointLLH();
  return *internal_default_instance();
}

PointLLH* PointLLH::New(::google::protobuf::Arena* arena) const {
  PointLLH* n = new PointLLH;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PointLLH::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PointLLH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&heading_) -
        reinterpret_cast<char*>(&height_)) + sizeof(heading_));
    lon_ = ::google::protobuf::internal::NaN();
    lat_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PointLLH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PointLLH)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double lon = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_lon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lat = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_lat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double height = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double heading = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PointLLH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PointLLH)
  return false;
#undef DO_
}

void PointLLH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PointLLH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double lon = 1 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lon(), output);
  }

  // optional double lat = 2 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lat(), output);
  }

  // optional double height = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->height(), output);
  }

  // optional double heading = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->heading(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PointLLH)
}

::google::protobuf::uint8* PointLLH::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PointLLH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double lon = 1 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lon(), target);
  }

  // optional double lat = 2 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lat(), target);
  }

  // optional double height = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->height(), target);
  }

  // optional double heading = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->heading(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PointLLH)
  return target;
}

size_t PointLLH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PointLLH)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double height = 3 [default = 0];
    if (has_height()) {
      total_size += 1 + 8;
    }

    // optional double heading = 4 [default = 0];
    if (has_heading()) {
      total_size += 1 + 8;
    }

    // optional double lon = 1 [default = nan];
    if (has_lon()) {
      total_size += 1 + 8;
    }

    // optional double lat = 2 [default = nan];
    if (has_lat()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PointLLH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PointLLH)
  GOOGLE_DCHECK_NE(&from, this);
  const PointLLH* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointLLH>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PointLLH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PointLLH)
    MergeFrom(*source);
  }
}

void PointLLH::MergeFrom(const PointLLH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PointLLH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      heading_ = from.heading_;
    }
    if (cached_has_bits & 0x00000004u) {
      lon_ = from.lon_;
    }
    if (cached_has_bits & 0x00000008u) {
      lat_ = from.lat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PointLLH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PointLLH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointLLH::CopyFrom(const PointLLH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PointLLH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointLLH::IsInitialized() const {
  return true;
}

void PointLLH::Swap(PointLLH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointLLH::InternalSwap(PointLLH* other) {
  using std::swap;
  swap(height_, other->height_);
  swap(heading_, other->heading_);
  swap(lon_, other->lon_);
  swap(lat_, other->lat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PointLLH::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point2D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2D::kXFieldNumber;
const int Point2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2D::Point2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPoint2D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.Point2D)
}
Point2D::Point2D(const Point2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.Point2D)
}

void Point2D::SharedCtor() {
  _cached_size_ = 0;
  x_ = ::google::protobuf::internal::NaN();
  y_ = ::google::protobuf::internal::NaN();
}

Point2D::~Point2D() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.Point2D)
  SharedDtor();
}

void Point2D::SharedDtor() {
}

void Point2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point2D::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point2D& Point2D::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPoint2D();
  return *internal_default_instance();
}

Point2D* Point2D::New(::google::protobuf::Arena* arena) const {
  Point2D* n = new Point2D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point2D::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.Point2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    x_ = ::google::protobuf::internal::NaN();
    y_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.Point2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.Point2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.Point2D)
  return false;
#undef DO_
}

void Point2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.Point2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.Point2D)
}

::google::protobuf::uint8* Point2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.Point2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.Point2D)
  return target;
}

size_t Point2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.Point2D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double x = 1 [default = nan];
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 2 [default = nan];
    if (has_y()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.Point2D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.Point2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.Point2D)
    MergeFrom(*source);
  }
}

void Point2D::MergeFrom(const Point2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.Point2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2D::CopyFrom(const Point2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2D::IsInitialized() const {
  return true;
}

void Point2D::Swap(Point2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2D::InternalSwap(Point2D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point2D::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPoint3D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.Point3D)
}
Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.Point3D)
}

void Point3D::SharedCtor() {
  _cached_size_ = 0;
  x_ = ::google::protobuf::internal::NaN();
  y_ = ::google::protobuf::internal::NaN();
  z_ = ::google::protobuf::internal::NaN();
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3D& Point3D::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPoint3D();
  return *internal_default_instance();
}

Point3D* Point3D::New(::google::protobuf::Arena* arena) const {
  Point3D* n = new Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    x_ = ::google::protobuf::internal::NaN();
    y_ = ::google::protobuf::internal::NaN();
    z_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z = 3 [default = nan];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.Point3D)
  return target;
}

size_t Point3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.Point3D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional double x = 1 [default = nan];
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 2 [default = nan];
    if (has_y()) {
      total_size += 1 + 8;
    }

    // optional double z = 3 [default = nan];
    if (has_z()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quaternion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quaternion::kQxFieldNumber;
const int Quaternion::kQyFieldNumber;
const int Quaternion::kQzFieldNumber;
const int Quaternion::kQwFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quaternion::Quaternion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsQuaternion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.Quaternion)
}
Quaternion::Quaternion(const Quaternion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&qx_, &from.qx_,
    static_cast<size_t>(reinterpret_cast<char*>(&qw_) -
    reinterpret_cast<char*>(&qx_)) + sizeof(qw_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.Quaternion)
}

void Quaternion::SharedCtor() {
  _cached_size_ = 0;
  qx_ = ::google::protobuf::internal::NaN();
  qy_ = ::google::protobuf::internal::NaN();
  qz_ = ::google::protobuf::internal::NaN();
  qw_ = ::google::protobuf::internal::NaN();
}

Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.Quaternion)
  SharedDtor();
}

void Quaternion::SharedDtor() {
}

void Quaternion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quaternion::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quaternion& Quaternion::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsQuaternion();
  return *internal_default_instance();
}

Quaternion* Quaternion::New(::google::protobuf::Arena* arena) const {
  Quaternion* n = new Quaternion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    qx_ = ::google::protobuf::internal::NaN();
    qy_ = ::google::protobuf::internal::NaN();
    qz_ = ::google::protobuf::internal::NaN();
    qw_ = ::google::protobuf::internal::NaN();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Quaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.Quaternion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double qx = 1 [default = nan];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_qx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double qy = 2 [default = nan];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_qy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double qz = 3 [default = nan];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_qz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double qw = 4 [default = nan];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_qw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.Quaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.Quaternion)
  return false;
#undef DO_
}

void Quaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double qx = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->qx(), output);
  }

  // optional double qy = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->qy(), output);
  }

  // optional double qz = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->qz(), output);
  }

  // optional double qw = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->qw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.Quaternion)
}

::google::protobuf::uint8* Quaternion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double qx = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->qx(), target);
  }

  // optional double qy = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->qy(), target);
  }

  // optional double qz = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->qz(), target);
  }

  // optional double qw = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->qw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.Quaternion)
  return target;
}

size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.Quaternion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double qx = 1 [default = nan];
    if (has_qx()) {
      total_size += 1 + 8;
    }

    // optional double qy = 2 [default = nan];
    if (has_qy()) {
      total_size += 1 + 8;
    }

    // optional double qz = 3 [default = nan];
    if (has_qz()) {
      total_size += 1 + 8;
    }

    // optional double qw = 4 [default = nan];
    if (has_qw()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  const Quaternion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quaternion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.Quaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.Quaternion)
    MergeFrom(*source);
  }
}

void Quaternion::MergeFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      qx_ = from.qx_;
    }
    if (cached_has_bits & 0x00000002u) {
      qy_ = from.qy_;
    }
    if (cached_has_bits & 0x00000004u) {
      qz_ = from.qz_;
    }
    if (cached_has_bits & 0x00000008u) {
      qw_ = from.qw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Quaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quaternion::IsInitialized() const {
  return true;
}

void Quaternion::Swap(Quaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quaternion::InternalSwap(Quaternion* other) {
  using std::swap;
  swap(qx_, other->qx_);
  swap(qy_, other->qy_);
  swap(qz_, other->qz_);
  swap(qw_, other->qw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImuAccelMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImuAccelMessage::kAccelXFieldNumber;
const int ImuAccelMessage::kAccelYFieldNumber;
const int ImuAccelMessage::kAccelZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImuAccelMessage::ImuAccelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsImuAccelMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.ImuAccelMessage)
}
ImuAccelMessage::ImuAccelMessage(const ImuAccelMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accel_x_, &from.accel_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&accel_z_) -
    reinterpret_cast<char*>(&accel_x_)) + sizeof(accel_z_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.ImuAccelMessage)
}

void ImuAccelMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&accel_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accel_z_) -
      reinterpret_cast<char*>(&accel_x_)) + sizeof(accel_z_));
}

ImuAccelMessage::~ImuAccelMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.ImuAccelMessage)
  SharedDtor();
}

void ImuAccelMessage::SharedDtor() {
}

void ImuAccelMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImuAccelMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImuAccelMessage& ImuAccelMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsImuAccelMessage();
  return *internal_default_instance();
}

ImuAccelMessage* ImuAccelMessage::New(::google::protobuf::Arena* arena) const {
  ImuAccelMessage* n = new ImuAccelMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImuAccelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.ImuAccelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&accel_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accel_z_) -
        reinterpret_cast<char*>(&accel_x_)) + sizeof(accel_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImuAccelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.ImuAccelMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float accel_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_accel_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accel_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float accel_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_accel_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accel_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float accel_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_accel_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accel_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.ImuAccelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.ImuAccelMessage)
  return false;
#undef DO_
}

void ImuAccelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.ImuAccelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float accel_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->accel_x(), output);
  }

  // required float accel_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->accel_y(), output);
  }

  // required float accel_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->accel_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.ImuAccelMessage)
}

::google::protobuf::uint8* ImuAccelMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.ImuAccelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float accel_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->accel_x(), target);
  }

  // required float accel_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->accel_y(), target);
  }

  // required float accel_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->accel_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.ImuAccelMessage)
  return target;
}

size_t ImuAccelMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.ImuAccelMessage)
  size_t total_size = 0;

  if (has_accel_x()) {
    // required float accel_x = 1;
    total_size += 1 + 4;
  }

  if (has_accel_y()) {
    // required float accel_y = 2;
    total_size += 1 + 4;
  }

  if (has_accel_z()) {
    // required float accel_z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ImuAccelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.ImuAccelMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float accel_x = 1;
    total_size += 1 + 4;

    // required float accel_y = 2;
    total_size += 1 + 4;

    // required float accel_z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImuAccelMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.ImuAccelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImuAccelMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImuAccelMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.ImuAccelMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.ImuAccelMessage)
    MergeFrom(*source);
  }
}

void ImuAccelMessage::MergeFrom(const ImuAccelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.ImuAccelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      accel_x_ = from.accel_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      accel_y_ = from.accel_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      accel_z_ = from.accel_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImuAccelMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.ImuAccelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImuAccelMessage::CopyFrom(const ImuAccelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.ImuAccelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImuAccelMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ImuAccelMessage::Swap(ImuAccelMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImuAccelMessage::InternalSwap(ImuAccelMessage* other) {
  using std::swap;
  swap(accel_x_, other->accel_x_);
  swap(accel_y_, other->accel_y_);
  swap(accel_z_, other->accel_z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImuAccelMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImuGyroMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImuGyroMessage::kGyroXFieldNumber;
const int ImuGyroMessage::kGyroYFieldNumber;
const int ImuGyroMessage::kGyroZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImuGyroMessage::ImuGyroMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsImuGyroMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.ImuGyroMessage)
}
ImuGyroMessage::ImuGyroMessage(const ImuGyroMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gyro_x_, &from.gyro_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&gyro_z_) -
    reinterpret_cast<char*>(&gyro_x_)) + sizeof(gyro_z_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.ImuGyroMessage)
}

void ImuGyroMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gyro_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gyro_z_) -
      reinterpret_cast<char*>(&gyro_x_)) + sizeof(gyro_z_));
}

ImuGyroMessage::~ImuGyroMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.ImuGyroMessage)
  SharedDtor();
}

void ImuGyroMessage::SharedDtor() {
}

void ImuGyroMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImuGyroMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImuGyroMessage& ImuGyroMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsImuGyroMessage();
  return *internal_default_instance();
}

ImuGyroMessage* ImuGyroMessage::New(::google::protobuf::Arena* arena) const {
  ImuGyroMessage* n = new ImuGyroMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImuGyroMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.ImuGyroMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&gyro_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gyro_z_) -
        reinterpret_cast<char*>(&gyro_x_)) + sizeof(gyro_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImuGyroMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.ImuGyroMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float gyro_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_gyro_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gyro_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float gyro_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_gyro_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gyro_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float gyro_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_gyro_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gyro_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.ImuGyroMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.ImuGyroMessage)
  return false;
#undef DO_
}

void ImuGyroMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.ImuGyroMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float gyro_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->gyro_x(), output);
  }

  // required float gyro_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->gyro_y(), output);
  }

  // required float gyro_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->gyro_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.ImuGyroMessage)
}

::google::protobuf::uint8* ImuGyroMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.ImuGyroMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float gyro_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->gyro_x(), target);
  }

  // required float gyro_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->gyro_y(), target);
  }

  // required float gyro_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->gyro_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.ImuGyroMessage)
  return target;
}

size_t ImuGyroMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.ImuGyroMessage)
  size_t total_size = 0;

  if (has_gyro_x()) {
    // required float gyro_x = 1;
    total_size += 1 + 4;
  }

  if (has_gyro_y()) {
    // required float gyro_y = 2;
    total_size += 1 + 4;
  }

  if (has_gyro_z()) {
    // required float gyro_z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ImuGyroMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.ImuGyroMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float gyro_x = 1;
    total_size += 1 + 4;

    // required float gyro_y = 2;
    total_size += 1 + 4;

    // required float gyro_z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImuGyroMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.ImuGyroMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImuGyroMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImuGyroMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.ImuGyroMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.ImuGyroMessage)
    MergeFrom(*source);
  }
}

void ImuGyroMessage::MergeFrom(const ImuGyroMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.ImuGyroMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      gyro_x_ = from.gyro_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      gyro_y_ = from.gyro_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      gyro_z_ = from.gyro_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImuGyroMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.ImuGyroMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImuGyroMessage::CopyFrom(const ImuGyroMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.ImuGyroMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImuGyroMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ImuGyroMessage::Swap(ImuGyroMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImuGyroMessage::InternalSwap(ImuGyroMessage* other) {
  using std::swap;
  swap(gyro_x_, other->gyro_x_);
  swap(gyro_y_, other->gyro_y_);
  swap(gyro_z_, other->gyro_z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImuGyroMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImuEulerMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImuEulerMessage::kYawFieldNumber;
const int ImuEulerMessage::kPitchFieldNumber;
const int ImuEulerMessage::kRollFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImuEulerMessage::ImuEulerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsImuEulerMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.ImuEulerMessage)
}
ImuEulerMessage::ImuEulerMessage(const ImuEulerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&yaw_, &from.yaw_,
    static_cast<size_t>(reinterpret_cast<char*>(&roll_) -
    reinterpret_cast<char*>(&yaw_)) + sizeof(roll_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.ImuEulerMessage)
}

void ImuEulerMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roll_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(roll_));
}

ImuEulerMessage::~ImuEulerMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.ImuEulerMessage)
  SharedDtor();
}

void ImuEulerMessage::SharedDtor() {
}

void ImuEulerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImuEulerMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImuEulerMessage& ImuEulerMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsImuEulerMessage();
  return *internal_default_instance();
}

ImuEulerMessage* ImuEulerMessage::New(::google::protobuf::Arena* arena) const {
  ImuEulerMessage* n = new ImuEulerMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImuEulerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.ImuEulerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&yaw_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roll_) -
        reinterpret_cast<char*>(&yaw_)) + sizeof(roll_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImuEulerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.ImuEulerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float yaw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float pitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float roll = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_roll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.ImuEulerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.ImuEulerMessage)
  return false;
#undef DO_
}

void ImuEulerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.ImuEulerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->yaw(), output);
  }

  // required float pitch = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pitch(), output);
  }

  // required float roll = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->roll(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.ImuEulerMessage)
}

::google::protobuf::uint8* ImuEulerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.ImuEulerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->yaw(), target);
  }

  // required float pitch = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pitch(), target);
  }

  // required float roll = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->roll(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.ImuEulerMessage)
  return target;
}

size_t ImuEulerMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.ImuEulerMessage)
  size_t total_size = 0;

  if (has_yaw()) {
    // required float yaw = 1;
    total_size += 1 + 4;
  }

  if (has_pitch()) {
    // required float pitch = 2;
    total_size += 1 + 4;
  }

  if (has_roll()) {
    // required float roll = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ImuEulerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.ImuEulerMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float yaw = 1;
    total_size += 1 + 4;

    // required float pitch = 2;
    total_size += 1 + 4;

    // required float roll = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImuEulerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.ImuEulerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImuEulerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImuEulerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.ImuEulerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.ImuEulerMessage)
    MergeFrom(*source);
  }
}

void ImuEulerMessage::MergeFrom(const ImuEulerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.ImuEulerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      yaw_ = from.yaw_;
    }
    if (cached_has_bits & 0x00000002u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000004u) {
      roll_ = from.roll_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImuEulerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.ImuEulerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImuEulerMessage::CopyFrom(const ImuEulerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.ImuEulerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImuEulerMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ImuEulerMessage::Swap(ImuEulerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImuEulerMessage::InternalSwap(ImuEulerMessage* other) {
  using std::swap;
  swap(yaw_, other->yaw_);
  swap(pitch_, other->pitch_);
  swap(roll_, other->roll_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImuEulerMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreStateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreStateReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreStateReq::RobotCoreStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreStateReq)
}
RobotCoreStateReq::RobotCoreStateReq(const RobotCoreStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreStateReq)
}

void RobotCoreStateReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RobotCoreStateReq::~RobotCoreStateReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreStateReq)
  SharedDtor();
}

void RobotCoreStateReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotCoreStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreStateReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreStateReq& RobotCoreStateReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateReq();
  return *internal_default_instance();
}

RobotCoreStateReq* RobotCoreStateReq::New(::google::protobuf::Arena* arena) const {
  RobotCoreStateReq* n = new RobotCoreStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotCoreStateReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreStateReq)
  return false;
#undef DO_
}

void RobotCoreStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotCoreStateReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreStateReq)
}

::google::protobuf::uint8* RobotCoreStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotCoreStateReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreStateReq)
  return target;
}

size_t RobotCoreStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreStateReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreStateReq)
    MergeFrom(*source);
  }
}

void RobotCoreStateReq::MergeFrom(const RobotCoreStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void RobotCoreStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreStateReq::CopyFrom(const RobotCoreStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreStateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RobotCoreStateReq::Swap(RobotCoreStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreStateReq::InternalSwap(RobotCoreStateReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreStateReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreState_SystemStateMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreState_SystemStateMessage::kVehicleStateFieldNumber;
const int RobotCoreState_SystemStateMessage::kControlModeFieldNumber;
const int RobotCoreState_SystemStateMessage::kBatteryVoltageFieldNumber;
const int RobotCoreState_SystemStateMessage::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreState_SystemStateMessage::RobotCoreState_SystemStateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_SystemStateMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreState.SystemStateMessage)
}
RobotCoreState_SystemStateMessage::RobotCoreState_SystemStateMessage(const RobotCoreState_SystemStateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehicle_state_, &from.vehicle_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&vehicle_state_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreState.SystemStateMessage)
}

void RobotCoreState_SystemStateMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&vehicle_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&vehicle_state_)) + sizeof(error_code_));
}

RobotCoreState_SystemStateMessage::~RobotCoreState_SystemStateMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreState.SystemStateMessage)
  SharedDtor();
}

void RobotCoreState_SystemStateMessage::SharedDtor() {
}

void RobotCoreState_SystemStateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreState_SystemStateMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreState_SystemStateMessage& RobotCoreState_SystemStateMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_SystemStateMessage();
  return *internal_default_instance();
}

RobotCoreState_SystemStateMessage* RobotCoreState_SystemStateMessage::New(::google::protobuf::Arena* arena) const {
  RobotCoreState_SystemStateMessage* n = new RobotCoreState_SystemStateMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreState_SystemStateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&vehicle_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&error_code_) -
        reinterpret_cast<char*>(&vehicle_state_)) + sizeof(error_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreState_SystemStateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.RobotCoreState.AgxVehicleState vehicle_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotCoreState_AgxVehicleState_IsValid(value)) {
            set_vehicle_state(static_cast< ::middle_layer_pb::RobotCoreState_AgxVehicleState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.AgxControlMode control_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotCoreState_AgxControlMode_IsValid(value)) {
            set_control_mode(static_cast< ::middle_layer_pb::RobotCoreState_AgxControlMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float battery_voltage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_battery_voltage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &battery_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 error_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreState.SystemStateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreState.SystemStateMessage)
  return false;
#undef DO_
}

void RobotCoreState_SystemStateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.RobotCoreState.AgxVehicleState vehicle_state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->vehicle_state(), output);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxControlMode control_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->control_mode(), output);
  }

  // optional float battery_voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->battery_voltage(), output);
  }

  // optional int32 error_code = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreState.SystemStateMessage)
}

::google::protobuf::uint8* RobotCoreState_SystemStateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.RobotCoreState.AgxVehicleState vehicle_state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->vehicle_state(), target);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxControlMode control_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->control_mode(), target);
  }

  // optional float battery_voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->battery_voltage(), target);
  }

  // optional int32 error_code = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreState.SystemStateMessage)
  return target;
}

size_t RobotCoreState_SystemStateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .middle_layer_pb.RobotCoreState.AgxVehicleState vehicle_state = 1;
    if (has_vehicle_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vehicle_state());
    }

    // optional .middle_layer_pb.RobotCoreState.AgxControlMode control_mode = 2;
    if (has_control_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode());
    }

    // optional float battery_voltage = 3;
    if (has_battery_voltage()) {
      total_size += 1 + 4;
    }

    // optional int32 error_code = 4;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreState_SystemStateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreState_SystemStateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreState_SystemStateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreState.SystemStateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreState.SystemStateMessage)
    MergeFrom(*source);
  }
}

void RobotCoreState_SystemStateMessage::MergeFrom(const RobotCoreState_SystemStateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      vehicle_state_ = from.vehicle_state_;
    }
    if (cached_has_bits & 0x00000002u) {
      control_mode_ = from.control_mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      battery_voltage_ = from.battery_voltage_;
    }
    if (cached_has_bits & 0x00000008u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotCoreState_SystemStateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreState_SystemStateMessage::CopyFrom(const RobotCoreState_SystemStateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreState.SystemStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreState_SystemStateMessage::IsInitialized() const {
  return true;
}

void RobotCoreState_SystemStateMessage::Swap(RobotCoreState_SystemStateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreState_SystemStateMessage::InternalSwap(RobotCoreState_SystemStateMessage* other) {
  using std::swap;
  swap(vehicle_state_, other->vehicle_state_);
  swap(control_mode_, other->control_mode_);
  swap(battery_voltage_, other->battery_voltage_);
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreState_SystemStateMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreState_MotionStateMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreState_MotionStateMessage::kLinearVelocityFieldNumber;
const int RobotCoreState_MotionStateMessage::kAngularVelocityFieldNumber;
const int RobotCoreState_MotionStateMessage::kLateralVelocityFieldNumber;
const int RobotCoreState_MotionStateMessage::kSteeringAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreState_MotionStateMessage::RobotCoreState_MotionStateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_MotionStateMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreState.MotionStateMessage)
}
RobotCoreState_MotionStateMessage::RobotCoreState_MotionStateMessage(const RobotCoreState_MotionStateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&linear_velocity_, &from.linear_velocity_,
    static_cast<size_t>(reinterpret_cast<char*>(&steering_angle_) -
    reinterpret_cast<char*>(&linear_velocity_)) + sizeof(steering_angle_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreState.MotionStateMessage)
}

void RobotCoreState_MotionStateMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&linear_velocity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steering_angle_) -
      reinterpret_cast<char*>(&linear_velocity_)) + sizeof(steering_angle_));
}

RobotCoreState_MotionStateMessage::~RobotCoreState_MotionStateMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreState.MotionStateMessage)
  SharedDtor();
}

void RobotCoreState_MotionStateMessage::SharedDtor() {
}

void RobotCoreState_MotionStateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreState_MotionStateMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreState_MotionStateMessage& RobotCoreState_MotionStateMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_MotionStateMessage();
  return *internal_default_instance();
}

RobotCoreState_MotionStateMessage* RobotCoreState_MotionStateMessage::New(::google::protobuf::Arena* arena) const {
  RobotCoreState_MotionStateMessage* n = new RobotCoreState_MotionStateMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreState_MotionStateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&linear_velocity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steering_angle_) -
        reinterpret_cast<char*>(&linear_velocity_)) + sizeof(steering_angle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreState_MotionStateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float linear_velocity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_linear_velocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &linear_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angular_velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_angular_velocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angular_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float lateral_velocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_lateral_velocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lateral_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float steering_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_steering_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &steering_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreState.MotionStateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreState.MotionStateMessage)
  return false;
#undef DO_
}

void RobotCoreState_MotionStateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float linear_velocity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->linear_velocity(), output);
  }

  // optional float angular_velocity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angular_velocity(), output);
  }

  // optional float lateral_velocity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lateral_velocity(), output);
  }

  // optional float steering_angle = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->steering_angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreState.MotionStateMessage)
}

::google::protobuf::uint8* RobotCoreState_MotionStateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float linear_velocity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->linear_velocity(), target);
  }

  // optional float angular_velocity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angular_velocity(), target);
  }

  // optional float lateral_velocity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lateral_velocity(), target);
  }

  // optional float steering_angle = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->steering_angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreState.MotionStateMessage)
  return target;
}

size_t RobotCoreState_MotionStateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float linear_velocity = 1;
    if (has_linear_velocity()) {
      total_size += 1 + 4;
    }

    // optional float angular_velocity = 2;
    if (has_angular_velocity()) {
      total_size += 1 + 4;
    }

    // optional float lateral_velocity = 3;
    if (has_lateral_velocity()) {
      total_size += 1 + 4;
    }

    // optional float steering_angle = 4;
    if (has_steering_angle()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreState_MotionStateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreState_MotionStateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreState_MotionStateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreState.MotionStateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreState.MotionStateMessage)
    MergeFrom(*source);
  }
}

void RobotCoreState_MotionStateMessage::MergeFrom(const RobotCoreState_MotionStateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      linear_velocity_ = from.linear_velocity_;
    }
    if (cached_has_bits & 0x00000002u) {
      angular_velocity_ = from.angular_velocity_;
    }
    if (cached_has_bits & 0x00000004u) {
      lateral_velocity_ = from.lateral_velocity_;
    }
    if (cached_has_bits & 0x00000008u) {
      steering_angle_ = from.steering_angle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotCoreState_MotionStateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreState_MotionStateMessage::CopyFrom(const RobotCoreState_MotionStateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreState.MotionStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreState_MotionStateMessage::IsInitialized() const {
  return true;
}

void RobotCoreState_MotionStateMessage::Swap(RobotCoreState_MotionStateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreState_MotionStateMessage::InternalSwap(RobotCoreState_MotionStateMessage* other) {
  using std::swap;
  swap(linear_velocity_, other->linear_velocity_);
  swap(angular_velocity_, other->angular_velocity_);
  swap(lateral_velocity_, other->lateral_velocity_);
  swap(steering_angle_, other->steering_angle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreState_MotionStateMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreState_RcStateMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreState_RcStateMessage::kSwaFieldNumber;
const int RobotCoreState_RcStateMessage::kSwbFieldNumber;
const int RobotCoreState_RcStateMessage::kSwcFieldNumber;
const int RobotCoreState_RcStateMessage::kSwdFieldNumber;
const int RobotCoreState_RcStateMessage::kStickRightVFieldNumber;
const int RobotCoreState_RcStateMessage::kStickRightHFieldNumber;
const int RobotCoreState_RcStateMessage::kStickLeftVFieldNumber;
const int RobotCoreState_RcStateMessage::kStickLeftHFieldNumber;
const int RobotCoreState_RcStateMessage::kVarAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreState_RcStateMessage::RobotCoreState_RcStateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_RcStateMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreState.RcStateMessage)
}
RobotCoreState_RcStateMessage::RobotCoreState_RcStateMessage(const RobotCoreState_RcStateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&swa_, &from.swa_,
    static_cast<size_t>(reinterpret_cast<char*>(&var_a_) -
    reinterpret_cast<char*>(&swa_)) + sizeof(var_a_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreState.RcStateMessage)
}

void RobotCoreState_RcStateMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&swa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&var_a_) -
      reinterpret_cast<char*>(&swa_)) + sizeof(var_a_));
}

RobotCoreState_RcStateMessage::~RobotCoreState_RcStateMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreState.RcStateMessage)
  SharedDtor();
}

void RobotCoreState_RcStateMessage::SharedDtor() {
}

void RobotCoreState_RcStateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreState_RcStateMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreState_RcStateMessage& RobotCoreState_RcStateMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_RcStateMessage();
  return *internal_default_instance();
}

RobotCoreState_RcStateMessage* RobotCoreState_RcStateMessage::New(::google::protobuf::Arena* arena) const {
  RobotCoreState_RcStateMessage* n = new RobotCoreState_RcStateMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreState_RcStateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&swa_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stick_left_h_) -
        reinterpret_cast<char*>(&swa_)) + sizeof(stick_left_h_));
  }
  var_a_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreState_RcStateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swa = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value)) {
            set_swa(static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value)) {
            set_swb(static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value)) {
            set_swc(static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotCoreState_AgxRcSwitchState_IsValid(value)) {
            set_swd(static_cast< ::middle_layer_pb::RobotCoreState_AgxRcSwitchState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stick_right_v = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_stick_right_v();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stick_right_v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stick_right_h = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_stick_right_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stick_right_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stick_left_v = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_stick_left_v();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stick_left_v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stick_left_h = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_stick_left_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stick_left_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 var_a = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_var_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &var_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreState.RcStateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreState.RcStateMessage)
  return false;
#undef DO_
}

void RobotCoreState_RcStateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swa = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->swa(), output);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swb = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->swb(), output);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swc = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->swc(), output);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swd = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->swd(), output);
  }

  // optional int32 stick_right_v = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->stick_right_v(), output);
  }

  // optional int32 stick_right_h = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->stick_right_h(), output);
  }

  // optional int32 stick_left_v = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stick_left_v(), output);
  }

  // optional int32 stick_left_h = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->stick_left_h(), output);
  }

  // optional int32 var_a = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->var_a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreState.RcStateMessage)
}

::google::protobuf::uint8* RobotCoreState_RcStateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swa = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->swa(), target);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swb = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->swb(), target);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swc = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->swc(), target);
  }

  // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swd = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->swd(), target);
  }

  // optional int32 stick_right_v = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->stick_right_v(), target);
  }

  // optional int32 stick_right_h = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->stick_right_h(), target);
  }

  // optional int32 stick_left_v = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stick_left_v(), target);
  }

  // optional int32 stick_left_h = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->stick_left_h(), target);
  }

  // optional int32 var_a = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->var_a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreState.RcStateMessage)
  return target;
}

size_t RobotCoreState_RcStateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swa = 1;
    if (has_swa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->swa());
    }

    // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swb = 2;
    if (has_swb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->swb());
    }

    // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swc = 3;
    if (has_swc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->swc());
    }

    // optional .middle_layer_pb.RobotCoreState.AgxRcSwitchState swd = 4;
    if (has_swd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->swd());
    }

    // optional int32 stick_right_v = 5;
    if (has_stick_right_v()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stick_right_v());
    }

    // optional int32 stick_right_h = 6;
    if (has_stick_right_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stick_right_h());
    }

    // optional int32 stick_left_v = 7;
    if (has_stick_left_v()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stick_left_v());
    }

    // optional int32 stick_left_h = 8;
    if (has_stick_left_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stick_left_h());
    }

  }
  // optional int32 var_a = 9;
  if (has_var_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->var_a());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreState_RcStateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreState_RcStateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreState_RcStateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreState.RcStateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreState.RcStateMessage)
    MergeFrom(*source);
  }
}

void RobotCoreState_RcStateMessage::MergeFrom(const RobotCoreState_RcStateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      swa_ = from.swa_;
    }
    if (cached_has_bits & 0x00000002u) {
      swb_ = from.swb_;
    }
    if (cached_has_bits & 0x00000004u) {
      swc_ = from.swc_;
    }
    if (cached_has_bits & 0x00000008u) {
      swd_ = from.swd_;
    }
    if (cached_has_bits & 0x00000010u) {
      stick_right_v_ = from.stick_right_v_;
    }
    if (cached_has_bits & 0x00000020u) {
      stick_right_h_ = from.stick_right_h_;
    }
    if (cached_has_bits & 0x00000040u) {
      stick_left_v_ = from.stick_left_v_;
    }
    if (cached_has_bits & 0x00000080u) {
      stick_left_h_ = from.stick_left_h_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_var_a(from.var_a());
  }
}

void RobotCoreState_RcStateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreState_RcStateMessage::CopyFrom(const RobotCoreState_RcStateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreState.RcStateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreState_RcStateMessage::IsInitialized() const {
  return true;
}

void RobotCoreState_RcStateMessage::Swap(RobotCoreState_RcStateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreState_RcStateMessage::InternalSwap(RobotCoreState_RcStateMessage* other) {
  using std::swap;
  swap(swa_, other->swa_);
  swap(swb_, other->swb_);
  swap(swc_, other->swc_);
  swap(swd_, other->swd_);
  swap(stick_right_v_, other->stick_right_v_);
  swap(stick_right_h_, other->stick_right_h_);
  swap(stick_left_v_, other->stick_left_v_);
  swap(stick_left_h_, other->stick_left_h_);
  swap(var_a_, other->var_a_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreState_RcStateMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreState_BmsBasicMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreState_BmsBasicMessage::kBatterySocFieldNumber;
const int RobotCoreState_BmsBasicMessage::kBatterySohFieldNumber;
const int RobotCoreState_BmsBasicMessage::kVoltageFieldNumber;
const int RobotCoreState_BmsBasicMessage::kCurrentFieldNumber;
const int RobotCoreState_BmsBasicMessage::kTemperatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreState_BmsBasicMessage::RobotCoreState_BmsBasicMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_BmsBasicMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreState.BmsBasicMessage)
}
RobotCoreState_BmsBasicMessage::RobotCoreState_BmsBasicMessage(const RobotCoreState_BmsBasicMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battery_soc_, &from.battery_soc_,
    static_cast<size_t>(reinterpret_cast<char*>(&temperature_) -
    reinterpret_cast<char*>(&battery_soc_)) + sizeof(temperature_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreState.BmsBasicMessage)
}

void RobotCoreState_BmsBasicMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&battery_soc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temperature_) -
      reinterpret_cast<char*>(&battery_soc_)) + sizeof(temperature_));
}

RobotCoreState_BmsBasicMessage::~RobotCoreState_BmsBasicMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  SharedDtor();
}

void RobotCoreState_BmsBasicMessage::SharedDtor() {
}

void RobotCoreState_BmsBasicMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreState_BmsBasicMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreState_BmsBasicMessage& RobotCoreState_BmsBasicMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_BmsBasicMessage();
  return *internal_default_instance();
}

RobotCoreState_BmsBasicMessage* RobotCoreState_BmsBasicMessage::New(::google::protobuf::Arena* arena) const {
  RobotCoreState_BmsBasicMessage* n = new RobotCoreState_BmsBasicMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreState_BmsBasicMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&battery_soc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&temperature_) -
        reinterpret_cast<char*>(&battery_soc_)) + sizeof(temperature_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreState_BmsBasicMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 battery_soc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_battery_soc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battery_soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 battery_soh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_battery_soh();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battery_soh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float voltage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_voltage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float current = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_current();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float temperature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_temperature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  return false;
#undef DO_
}

void RobotCoreState_BmsBasicMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 battery_soc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->battery_soc(), output);
  }

  // optional uint32 battery_soh = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->battery_soh(), output);
  }

  // optional float voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->voltage(), output);
  }

  // optional float current = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->current(), output);
  }

  // optional float temperature = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->temperature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreState.BmsBasicMessage)
}

::google::protobuf::uint8* RobotCoreState_BmsBasicMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 battery_soc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->battery_soc(), target);
  }

  // optional uint32 battery_soh = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->battery_soh(), target);
  }

  // optional float voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->voltage(), target);
  }

  // optional float current = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->current(), target);
  }

  // optional float temperature = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->temperature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  return target;
}

size_t RobotCoreState_BmsBasicMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 battery_soc = 1;
    if (has_battery_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battery_soc());
    }

    // optional uint32 battery_soh = 2;
    if (has_battery_soh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battery_soh());
    }

    // optional float voltage = 3;
    if (has_voltage()) {
      total_size += 1 + 4;
    }

    // optional float current = 4;
    if (has_current()) {
      total_size += 1 + 4;
    }

    // optional float temperature = 5;
    if (has_temperature()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreState_BmsBasicMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreState_BmsBasicMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreState_BmsBasicMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreState.BmsBasicMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreState.BmsBasicMessage)
    MergeFrom(*source);
  }
}

void RobotCoreState_BmsBasicMessage::MergeFrom(const RobotCoreState_BmsBasicMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      battery_soc_ = from.battery_soc_;
    }
    if (cached_has_bits & 0x00000002u) {
      battery_soh_ = from.battery_soh_;
    }
    if (cached_has_bits & 0x00000004u) {
      voltage_ = from.voltage_;
    }
    if (cached_has_bits & 0x00000008u) {
      current_ = from.current_;
    }
    if (cached_has_bits & 0x00000010u) {
      temperature_ = from.temperature_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotCoreState_BmsBasicMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreState_BmsBasicMessage::CopyFrom(const RobotCoreState_BmsBasicMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreState.BmsBasicMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreState_BmsBasicMessage::IsInitialized() const {
  return true;
}

void RobotCoreState_BmsBasicMessage::Swap(RobotCoreState_BmsBasicMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreState_BmsBasicMessage::InternalSwap(RobotCoreState_BmsBasicMessage* other) {
  using std::swap;
  swap(battery_soc_, other->battery_soc_);
  swap(battery_soh_, other->battery_soh_);
  swap(voltage_, other->voltage_);
  swap(current_, other->current_);
  swap(temperature_, other->temperature_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreState_BmsBasicMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreState_OdometryMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreState_OdometryMessage::kLeftWheelFieldNumber;
const int RobotCoreState_OdometryMessage::kRightWheelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreState_OdometryMessage::RobotCoreState_OdometryMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_OdometryMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreState.OdometryMessage)
}
RobotCoreState_OdometryMessage::RobotCoreState_OdometryMessage(const RobotCoreState_OdometryMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_wheel_, &from.left_wheel_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_wheel_) -
    reinterpret_cast<char*>(&left_wheel_)) + sizeof(right_wheel_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreState.OdometryMessage)
}

void RobotCoreState_OdometryMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&left_wheel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_wheel_) -
      reinterpret_cast<char*>(&left_wheel_)) + sizeof(right_wheel_));
}

RobotCoreState_OdometryMessage::~RobotCoreState_OdometryMessage() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreState.OdometryMessage)
  SharedDtor();
}

void RobotCoreState_OdometryMessage::SharedDtor() {
}

void RobotCoreState_OdometryMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreState_OdometryMessage::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreState_OdometryMessage& RobotCoreState_OdometryMessage::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState_OdometryMessage();
  return *internal_default_instance();
}

RobotCoreState_OdometryMessage* RobotCoreState_OdometryMessage::New(::google::protobuf::Arena* arena) const {
  RobotCoreState_OdometryMessage* n = new RobotCoreState_OdometryMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreState_OdometryMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&left_wheel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&right_wheel_) -
        reinterpret_cast<char*>(&left_wheel_)) + sizeof(right_wheel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreState_OdometryMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float left_wheel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_left_wheel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &left_wheel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float right_wheel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_right_wheel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &right_wheel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreState.OdometryMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreState.OdometryMessage)
  return false;
#undef DO_
}

void RobotCoreState_OdometryMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float left_wheel = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->left_wheel(), output);
  }

  // optional float right_wheel = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->right_wheel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreState.OdometryMessage)
}

::google::protobuf::uint8* RobotCoreState_OdometryMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float left_wheel = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->left_wheel(), target);
  }

  // optional float right_wheel = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->right_wheel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreState.OdometryMessage)
  return target;
}

size_t RobotCoreState_OdometryMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float left_wheel = 1;
    if (has_left_wheel()) {
      total_size += 1 + 4;
    }

    // optional float right_wheel = 2;
    if (has_right_wheel()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreState_OdometryMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreState_OdometryMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreState_OdometryMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreState.OdometryMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreState.OdometryMessage)
    MergeFrom(*source);
  }
}

void RobotCoreState_OdometryMessage::MergeFrom(const RobotCoreState_OdometryMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      left_wheel_ = from.left_wheel_;
    }
    if (cached_has_bits & 0x00000002u) {
      right_wheel_ = from.right_wheel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotCoreState_OdometryMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreState_OdometryMessage::CopyFrom(const RobotCoreState_OdometryMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreState.OdometryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreState_OdometryMessage::IsInitialized() const {
  return true;
}

void RobotCoreState_OdometryMessage::Swap(RobotCoreState_OdometryMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreState_OdometryMessage::InternalSwap(RobotCoreState_OdometryMessage* other) {
  using std::swap;
  swap(left_wheel_, other->left_wheel_);
  swap(right_wheel_, other->right_wheel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreState_OdometryMessage::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreState::InitAsDefaultInstance() {
  ::middle_layer_pb::_RobotCoreState_default_instance_._instance.get_mutable()->system_state_ = const_cast< ::middle_layer_pb::RobotCoreState_SystemStateMessage*>(
      ::middle_layer_pb::RobotCoreState_SystemStateMessage::internal_default_instance());
  ::middle_layer_pb::_RobotCoreState_default_instance_._instance.get_mutable()->motion_state_ = const_cast< ::middle_layer_pb::RobotCoreState_MotionStateMessage*>(
      ::middle_layer_pb::RobotCoreState_MotionStateMessage::internal_default_instance());
  ::middle_layer_pb::_RobotCoreState_default_instance_._instance.get_mutable()->rc_state_ = const_cast< ::middle_layer_pb::RobotCoreState_RcStateMessage*>(
      ::middle_layer_pb::RobotCoreState_RcStateMessage::internal_default_instance());
  ::middle_layer_pb::_RobotCoreState_default_instance_._instance.get_mutable()->bms_state_ = const_cast< ::middle_layer_pb::RobotCoreState_BmsBasicMessage*>(
      ::middle_layer_pb::RobotCoreState_BmsBasicMessage::internal_default_instance());
  ::middle_layer_pb::_RobotCoreState_default_instance_._instance.get_mutable()->odom_state_ = const_cast< ::middle_layer_pb::RobotCoreState_OdometryMessage*>(
      ::middle_layer_pb::RobotCoreState_OdometryMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreState::kIdFieldNumber;
const int RobotCoreState::kTimestampFieldNumber;
const int RobotCoreState::kSystemStateFieldNumber;
const int RobotCoreState::kMotionStateFieldNumber;
const int RobotCoreState::kRcStateFieldNumber;
const int RobotCoreState::kBmsStateFieldNumber;
const int RobotCoreState::kOdomStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreState::RobotCoreState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreState)
}
RobotCoreState::RobotCoreState(const RobotCoreState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_system_state()) {
    system_state_ = new ::middle_layer_pb::RobotCoreState_SystemStateMessage(*from.system_state_);
  } else {
    system_state_ = NULL;
  }
  if (from.has_motion_state()) {
    motion_state_ = new ::middle_layer_pb::RobotCoreState_MotionStateMessage(*from.motion_state_);
  } else {
    motion_state_ = NULL;
  }
  if (from.has_rc_state()) {
    rc_state_ = new ::middle_layer_pb::RobotCoreState_RcStateMessage(*from.rc_state_);
  } else {
    rc_state_ = NULL;
  }
  if (from.has_bms_state()) {
    bms_state_ = new ::middle_layer_pb::RobotCoreState_BmsBasicMessage(*from.bms_state_);
  } else {
    bms_state_ = NULL;
  }
  if (from.has_odom_state()) {
    odom_state_ = new ::middle_layer_pb::RobotCoreState_OdometryMessage(*from.odom_state_);
  } else {
    odom_state_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreState)
}

void RobotCoreState::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&system_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&system_state_)) + sizeof(timestamp_));
}

RobotCoreState::~RobotCoreState() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreState)
  SharedDtor();
}

void RobotCoreState::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete system_state_;
  if (this != internal_default_instance()) delete motion_state_;
  if (this != internal_default_instance()) delete rc_state_;
  if (this != internal_default_instance()) delete bms_state_;
  if (this != internal_default_instance()) delete odom_state_;
}

void RobotCoreState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreState::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreState& RobotCoreState::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreState();
  return *internal_default_instance();
}

RobotCoreState* RobotCoreState::New(::google::protobuf::Arena* arena) const {
  RobotCoreState* n = new RobotCoreState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreState::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(system_state_ != NULL);
      system_state_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(motion_state_ != NULL);
      motion_state_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(rc_state_ != NULL);
      rc_state_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bms_state_ != NULL);
      bms_state_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(odom_state_ != NULL);
      odom_state_->Clear();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotCoreState.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.SystemStateMessage system_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.MotionStateMessage motion_state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motion_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.RcStateMessage rc_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rc_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.BmsBasicMessage bms_state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bms_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotCoreState.OdometryMessage odom_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odom_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreState)
  return false;
#undef DO_
}

void RobotCoreState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotCoreState.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional .middle_layer_pb.RobotCoreState.SystemStateMessage system_state = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->system_state_, output);
  }

  // optional .middle_layer_pb.RobotCoreState.MotionStateMessage motion_state = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->motion_state_, output);
  }

  // optional .middle_layer_pb.RobotCoreState.RcStateMessage rc_state = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rc_state_, output);
  }

  // optional .middle_layer_pb.RobotCoreState.BmsBasicMessage bms_state = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->bms_state_, output);
  }

  // optional .middle_layer_pb.RobotCoreState.OdometryMessage odom_state = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->odom_state_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreState)
}

::google::protobuf::uint8* RobotCoreState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotCoreState.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional .middle_layer_pb.RobotCoreState.SystemStateMessage system_state = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->system_state_, deterministic, target);
  }

  // optional .middle_layer_pb.RobotCoreState.MotionStateMessage motion_state = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->motion_state_, deterministic, target);
  }

  // optional .middle_layer_pb.RobotCoreState.RcStateMessage rc_state = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->rc_state_, deterministic, target);
  }

  // optional .middle_layer_pb.RobotCoreState.BmsBasicMessage bms_state = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->bms_state_, deterministic, target);
  }

  // optional .middle_layer_pb.RobotCoreState.OdometryMessage odom_state = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->odom_state_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreState)
  return target;
}

size_t RobotCoreState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RobotCoreState)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t RobotCoreState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000041) ^ 0x00000041) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 62u) {
    // optional .middle_layer_pb.RobotCoreState.SystemStateMessage system_state = 3;
    if (has_system_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->system_state_);
    }

    // optional .middle_layer_pb.RobotCoreState.MotionStateMessage motion_state = 4;
    if (has_motion_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->motion_state_);
    }

    // optional .middle_layer_pb.RobotCoreState.RcStateMessage rc_state = 5;
    if (has_rc_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->rc_state_);
    }

    // optional .middle_layer_pb.RobotCoreState.BmsBasicMessage bms_state = 6;
    if (has_bms_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->bms_state_);
    }

    // optional .middle_layer_pb.RobotCoreState.OdometryMessage odom_state = 7;
    if (has_odom_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->odom_state_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreState)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreState)
    MergeFrom(*source);
  }
}

void RobotCoreState::MergeFrom(const RobotCoreState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_system_state()->::middle_layer_pb::RobotCoreState_SystemStateMessage::MergeFrom(from.system_state());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_motion_state()->::middle_layer_pb::RobotCoreState_MotionStateMessage::MergeFrom(from.motion_state());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_rc_state()->::middle_layer_pb::RobotCoreState_RcStateMessage::MergeFrom(from.rc_state());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_bms_state()->::middle_layer_pb::RobotCoreState_BmsBasicMessage::MergeFrom(from.bms_state());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_odom_state()->::middle_layer_pb::RobotCoreState_OdometryMessage::MergeFrom(from.odom_state());
    }
    if (cached_has_bits & 0x00000040u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotCoreState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreState::CopyFrom(const RobotCoreState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000041) != 0x00000041) return false;
  return true;
}

void RobotCoreState::Swap(RobotCoreState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreState::InternalSwap(RobotCoreState* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(system_state_, other->system_state_);
  swap(motion_state_, other->motion_state_);
  swap(rc_state_, other->rc_state_);
  swap(bms_state_, other->bms_state_);
  swap(odom_state_, other->odom_state_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreState::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreStateRes::InitAsDefaultInstance() {
  ::middle_layer_pb::_RobotCoreStateRes_default_instance_._instance.get_mutable()->state_ = const_cast< ::middle_layer_pb::RobotCoreState*>(
      ::middle_layer_pb::RobotCoreState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreStateRes::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreStateRes::RobotCoreStateRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreStateRes)
}
RobotCoreStateRes::RobotCoreStateRes(const RobotCoreStateRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::middle_layer_pb::RobotCoreState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreStateRes)
}

void RobotCoreStateRes::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
}

RobotCoreStateRes::~RobotCoreStateRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreStateRes)
  SharedDtor();
}

void RobotCoreStateRes::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void RobotCoreStateRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreStateRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreStateRes& RobotCoreStateRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateRes();
  return *internal_default_instance();
}

RobotCoreStateRes* RobotCoreStateRes::New(::google::protobuf::Arena* arena) const {
  RobotCoreStateRes* n = new RobotCoreStateRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreStateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreStateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(state_ != NULL);
    state_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreStateRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreStateRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.RobotCoreState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreStateRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreStateRes)
  return false;
#undef DO_
}

void RobotCoreStateRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreStateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.RobotCoreState state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->state_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreStateRes)
}

::google::protobuf::uint8* RobotCoreStateRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreStateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.RobotCoreState state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->state_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreStateRes)
  return target;
}

size_t RobotCoreStateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreStateRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .middle_layer_pb.RobotCoreState state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreStateRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreStateRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreStateRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreStateRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreStateRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreStateRes)
    MergeFrom(*source);
  }
}

void RobotCoreStateRes::MergeFrom(const RobotCoreStateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreStateRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::middle_layer_pb::RobotCoreState::MergeFrom(from.state());
  }
}

void RobotCoreStateRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreStateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreStateRes::CopyFrom(const RobotCoreStateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreStateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreStateRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void RobotCoreStateRes::Swap(RobotCoreStateRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreStateRes::InternalSwap(RobotCoreStateRes* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreStateRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotCoreStateNotify::InitAsDefaultInstance() {
  ::middle_layer_pb::_RobotCoreStateNotify_default_instance_._instance.get_mutable()->state_ = const_cast< ::middle_layer_pb::RobotCoreState*>(
      ::middle_layer_pb::RobotCoreState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotCoreStateNotify::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotCoreStateNotify::RobotCoreStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotCoreStateNotify)
}
RobotCoreStateNotify::RobotCoreStateNotify(const RobotCoreStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::middle_layer_pb::RobotCoreState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotCoreStateNotify)
}

void RobotCoreStateNotify::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
}

RobotCoreStateNotify::~RobotCoreStateNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotCoreStateNotify)
  SharedDtor();
}

void RobotCoreStateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void RobotCoreStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotCoreStateNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotCoreStateNotify& RobotCoreStateNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotCoreStateNotify();
  return *internal_default_instance();
}

RobotCoreStateNotify* RobotCoreStateNotify::New(::google::protobuf::Arena* arena) const {
  RobotCoreStateNotify* n = new RobotCoreStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotCoreStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotCoreStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(state_ != NULL);
    state_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotCoreStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotCoreStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.RobotCoreState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotCoreStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotCoreStateNotify)
  return false;
#undef DO_
}

void RobotCoreStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotCoreStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.RobotCoreState state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->state_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotCoreStateNotify)
}

::google::protobuf::uint8* RobotCoreStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotCoreStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.RobotCoreState state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->state_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotCoreStateNotify)
  return target;
}

size_t RobotCoreStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotCoreStateNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .middle_layer_pb.RobotCoreState state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotCoreStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotCoreStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotCoreStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotCoreStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotCoreStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotCoreStateNotify)
    MergeFrom(*source);
  }
}

void RobotCoreStateNotify::MergeFrom(const RobotCoreStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotCoreStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::middle_layer_pb::RobotCoreState::MergeFrom(from.state());
  }
}

void RobotCoreStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotCoreStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotCoreStateNotify::CopyFrom(const RobotCoreStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotCoreStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotCoreStateNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void RobotCoreStateNotify::Swap(RobotCoreStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotCoreStateNotify::InternalSwap(RobotCoreStateNotify* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotCoreStateNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppLoginReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppLoginReq::AppLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsAppLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.AppLoginReq)
}
AppLoginReq::AppLoginReq(const AppLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.AppLoginReq)
}

void AppLoginReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AppLoginReq::~AppLoginReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.AppLoginReq)
  SharedDtor();
}

void AppLoginReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppLoginReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppLoginReq& AppLoginReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsAppLoginReq();
  return *internal_default_instance();
}

AppLoginReq* AppLoginReq::New(::google::protobuf::Arena* arena) const {
  AppLoginReq* n = new AppLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.AppLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.AppLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.AppLoginReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.AppLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.AppLoginReq)
  return false;
#undef DO_
}

void AppLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.AppLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.AppLoginReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.AppLoginReq)
}

::google::protobuf::uint8* AppLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.AppLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.AppLoginReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.AppLoginReq)
  return target;
}

size_t AppLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.AppLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.AppLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AppLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.AppLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.AppLoginReq)
    MergeFrom(*source);
  }
}

void AppLoginReq::MergeFrom(const AppLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.AppLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void AppLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.AppLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppLoginReq::CopyFrom(const AppLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.AppLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AppLoginReq::Swap(AppLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppLoginReq::InternalSwap(AppLoginReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppLoginReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppLoginRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppLoginRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppLoginRes::AppLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsAppLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.AppLoginRes)
}
AppLoginRes::AppLoginRes(const AppLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.AppLoginRes)
}

void AppLoginRes::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
}

AppLoginRes::~AppLoginRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.AppLoginRes)
  SharedDtor();
}

void AppLoginRes::SharedDtor() {
}

void AppLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppLoginRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppLoginRes& AppLoginRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsAppLoginRes();
  return *internal_default_instance();
}

AppLoginRes* AppLoginRes::New(::google::protobuf::Arena* arena) const {
  AppLoginRes* n = new AppLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.AppLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.AppLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.AppLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.AppLoginRes)
  return false;
#undef DO_
}

void AppLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.AppLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.AppLoginRes)
}

::google::protobuf::uint8* AppLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.AppLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.AppLoginRes)
  return target;
}

size_t AppLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.AppLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.AppLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const AppLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.AppLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.AppLoginRes)
    MergeFrom(*source);
  }
}

void AppLoginRes::MergeFrom(const AppLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.AppLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    set_code(from.code());
  }
}

void AppLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.AppLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppLoginRes::CopyFrom(const AppLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.AppLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppLoginRes::IsInitialized() const {
  return true;
}

void AppLoginRes::Swap(AppLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppLoginRes::InternalSwap(AppLoginRes* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppLoginRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotLoginReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotLoginReq::RobotLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotLoginReq)
}
RobotLoginReq::RobotLoginReq(const RobotLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotLoginReq)
}

void RobotLoginReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RobotLoginReq::~RobotLoginReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotLoginReq)
  SharedDtor();
}

void RobotLoginReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotLoginReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotLoginReq& RobotLoginReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotLoginReq();
  return *internal_default_instance();
}

RobotLoginReq* RobotLoginReq::New(::google::protobuf::Arena* arena) const {
  RobotLoginReq* n = new RobotLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotLoginReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotLoginReq)
  return false;
#undef DO_
}

void RobotLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotLoginReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotLoginReq)
}

::google::protobuf::uint8* RobotLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotLoginReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotLoginReq)
  return target;
}

size_t RobotLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotLoginReq)
    MergeFrom(*source);
  }
}

void RobotLoginReq::MergeFrom(const RobotLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void RobotLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotLoginReq::CopyFrom(const RobotLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RobotLoginReq::Swap(RobotLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotLoginReq::InternalSwap(RobotLoginReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotLoginReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotLoginRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotLoginRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotLoginRes::RobotLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotLoginRes)
}
RobotLoginRes::RobotLoginRes(const RobotLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotLoginRes)
}

void RobotLoginRes::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
}

RobotLoginRes::~RobotLoginRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotLoginRes)
  SharedDtor();
}

void RobotLoginRes::SharedDtor() {
}

void RobotLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotLoginRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotLoginRes& RobotLoginRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotLoginRes();
  return *internal_default_instance();
}

RobotLoginRes* RobotLoginRes::New(::google::protobuf::Arena* arena) const {
  RobotLoginRes* n = new RobotLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotLoginRes)
  return false;
#undef DO_
}

void RobotLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotLoginRes)
}

::google::protobuf::uint8* RobotLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotLoginRes)
  return target;
}

size_t RobotLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotLoginRes)
    MergeFrom(*source);
  }
}

void RobotLoginRes::MergeFrom(const RobotLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    set_code(from.code());
  }
}

void RobotLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotLoginRes::CopyFrom(const RobotLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotLoginRes::IsInitialized() const {
  return true;
}

void RobotLoginRes::Swap(RobotLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotLoginRes::InternalSwap(RobotLoginRes* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotLoginRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloudLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudLoginReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudLoginReq::CloudLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCloudLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CloudLoginReq)
}
CloudLoginReq::CloudLoginReq(const CloudLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CloudLoginReq)
}

void CloudLoginReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CloudLoginReq::~CloudLoginReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CloudLoginReq)
  SharedDtor();
}

void CloudLoginReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CloudLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloudLoginReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloudLoginReq& CloudLoginReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCloudLoginReq();
  return *internal_default_instance();
}

CloudLoginReq* CloudLoginReq::New(::google::protobuf::Arena* arena) const {
  CloudLoginReq* n = new CloudLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloudLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CloudLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloudLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CloudLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CloudLoginReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CloudLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CloudLoginReq)
  return false;
#undef DO_
}

void CloudLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CloudLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CloudLoginReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CloudLoginReq)
}

::google::protobuf::uint8* CloudLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CloudLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CloudLoginReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CloudLoginReq)
  return target;
}

size_t CloudLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CloudLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloudLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CloudLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CloudLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CloudLoginReq)
    MergeFrom(*source);
  }
}

void CloudLoginReq::MergeFrom(const CloudLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CloudLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void CloudLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CloudLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudLoginReq::CopyFrom(const CloudLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CloudLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CloudLoginReq::Swap(CloudLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudLoginReq::InternalSwap(CloudLoginReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloudLoginReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloudLoginRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudLoginRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudLoginRes::CloudLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCloudLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CloudLoginRes)
}
CloudLoginRes::CloudLoginRes(const CloudLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CloudLoginRes)
}

void CloudLoginRes::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
}

CloudLoginRes::~CloudLoginRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CloudLoginRes)
  SharedDtor();
}

void CloudLoginRes::SharedDtor() {
}

void CloudLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloudLoginRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloudLoginRes& CloudLoginRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCloudLoginRes();
  return *internal_default_instance();
}

CloudLoginRes* CloudLoginRes::New(::google::protobuf::Arena* arena) const {
  CloudLoginRes* n = new CloudLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloudLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CloudLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloudLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CloudLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CloudLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CloudLoginRes)
  return false;
#undef DO_
}

void CloudLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CloudLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CloudLoginRes)
}

::google::protobuf::uint8* CloudLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CloudLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CloudLoginRes)
  return target;
}

size_t CloudLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CloudLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloudLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CloudLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CloudLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CloudLoginRes)
    MergeFrom(*source);
  }
}

void CloudLoginRes::MergeFrom(const CloudLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CloudLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    set_code(from.code());
  }
}

void CloudLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CloudLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudLoginRes::CopyFrom(const CloudLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CloudLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudLoginRes::IsInitialized() const {
  return true;
}

void CloudLoginRes::Swap(CloudLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudLoginRes::InternalSwap(CloudLoginRes* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloudLoginRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LaserResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaserResult::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaserResult::LaserResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsLaserResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.LaserResult)
}
LaserResult::LaserResult(const LaserResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.LaserResult)
}

void LaserResult::SharedCtor() {
  _cached_size_ = 0;
  height_ = 0;
}

LaserResult::~LaserResult() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.LaserResult)
  SharedDtor();
}

void LaserResult::SharedDtor() {
}

void LaserResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaserResult::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaserResult& LaserResult::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsLaserResult();
  return *internal_default_instance();
}

LaserResult* LaserResult::New(::google::protobuf::Arena* arena) const {
  LaserResult* n = new LaserResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaserResult::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.LaserResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  height_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LaserResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.LaserResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.LaserResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.LaserResult)
  return false;
#undef DO_
}

void LaserResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.LaserResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double height = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.LaserResult)
}

::google::protobuf::uint8* LaserResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.LaserResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double height = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.LaserResult)
  return target;
}

size_t LaserResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.LaserResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required double height = 1;
  if (has_height()) {
    total_size += 1 + 8;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaserResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.LaserResult)
  GOOGLE_DCHECK_NE(&from, this);
  const LaserResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaserResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.LaserResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.LaserResult)
    MergeFrom(*source);
  }
}

void LaserResult::MergeFrom(const LaserResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.LaserResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_height()) {
    set_height(from.height());
  }
}

void LaserResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.LaserResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaserResult::CopyFrom(const LaserResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.LaserResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaserResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LaserResult::Swap(LaserResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaserResult::InternalSwap(LaserResult* other) {
  using std::swap;
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaserResult::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtkResult::InitAsDefaultInstance() {
  ::middle_layer_pb::_RtkResult_default_instance_._instance.get_mutable()->utm_result_ = const_cast< ::middle_layer_pb::PointENU*>(
      ::middle_layer_pb::PointENU::internal_default_instance());
  ::middle_layer_pb::_RtkResult_default_instance_._instance.get_mutable()->gnss_result_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtkResult::kUtmResultFieldNumber;
const int RtkResult::kGnssResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtkResult::RtkResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RtkResult)
}
RtkResult::RtkResult(const RtkResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_utm_result()) {
    utm_result_ = new ::middle_layer_pb::PointENU(*from.utm_result_);
  } else {
    utm_result_ = NULL;
  }
  if (from.has_gnss_result()) {
    gnss_result_ = new ::middle_layer_pb::PointLLH(*from.gnss_result_);
  } else {
    gnss_result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RtkResult)
}

void RtkResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&utm_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_result_) -
      reinterpret_cast<char*>(&utm_result_)) + sizeof(gnss_result_));
}

RtkResult::~RtkResult() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RtkResult)
  SharedDtor();
}

void RtkResult::SharedDtor() {
  if (this != internal_default_instance()) delete utm_result_;
  if (this != internal_default_instance()) delete gnss_result_;
}

void RtkResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtkResult::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtkResult& RtkResult::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkResult();
  return *internal_default_instance();
}

RtkResult* RtkResult::New(::google::protobuf::Arena* arena) const {
  RtkResult* n = new RtkResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RtkResult::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RtkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(utm_result_ != NULL);
      utm_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(gnss_result_ != NULL);
      gnss_result_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtkResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RtkResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.PointENU utm_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_utm_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PointLLH gnss_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RtkResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RtkResult)
  return false;
#undef DO_
}

void RtkResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RtkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.PointENU utm_result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->utm_result_, output);
  }

  // optional .middle_layer_pb.PointLLH gnss_result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->gnss_result_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RtkResult)
}

::google::protobuf::uint8* RtkResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RtkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.PointENU utm_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->utm_result_, deterministic, target);
  }

  // optional .middle_layer_pb.PointLLH gnss_result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->gnss_result_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RtkResult)
  return target;
}

size_t RtkResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RtkResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .middle_layer_pb.PointENU utm_result = 1;
    if (has_utm_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->utm_result_);
    }

    // optional .middle_layer_pb.PointLLH gnss_result = 2;
    if (has_gnss_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->gnss_result_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtkResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RtkResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RtkResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtkResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RtkResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RtkResult)
    MergeFrom(*source);
  }
}

void RtkResult::MergeFrom(const RtkResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RtkResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_utm_result()->::middle_layer_pb::PointENU::MergeFrom(from.utm_result());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_gnss_result()->::middle_layer_pb::PointLLH::MergeFrom(from.gnss_result());
    }
  }
}

void RtkResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RtkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtkResult::CopyFrom(const RtkResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RtkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtkResult::IsInitialized() const {
  return true;
}

void RtkResult::Swap(RtkResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtkResult::InternalSwap(RtkResult* other) {
  using std::swap;
  swap(utm_result_, other->utm_result_);
  swap(gnss_result_, other->gnss_result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RtkResult::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtkDataSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtkDataSource::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtkDataSource::RtkDataSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkDataSource();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RtkDataSource)
}
RtkDataSource::RtkDataSource(const RtkDataSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RtkDataSource)
}

void RtkDataSource::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RtkDataSource::~RtkDataSource() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RtkDataSource)
  SharedDtor();
}

void RtkDataSource::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RtkDataSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtkDataSource::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtkDataSource& RtkDataSource::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkDataSource();
  return *internal_default_instance();
}

RtkDataSource* RtkDataSource::New(::google::protobuf::Arena* arena) const {
  RtkDataSource* n = new RtkDataSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RtkDataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RtkDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*data_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtkDataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RtkDataSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RtkDataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RtkDataSource)
  return false;
#undef DO_
}

void RtkDataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RtkDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RtkDataSource)
}

::google::protobuf::uint8* RtkDataSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RtkDataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RtkDataSource)
  return target;
}

size_t RtkDataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RtkDataSource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtkDataSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RtkDataSource)
  GOOGLE_DCHECK_NE(&from, this);
  const RtkDataSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtkDataSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RtkDataSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RtkDataSource)
    MergeFrom(*source);
  }
}

void RtkDataSource::MergeFrom(const RtkDataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RtkDataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void RtkDataSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RtkDataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtkDataSource::CopyFrom(const RtkDataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RtkDataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtkDataSource::IsInitialized() const {
  return true;
}

void RtkDataSource::Swap(RtkDataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtkDataSource::InternalSwap(RtkDataSource* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RtkDataSource::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SensorInfoNotify::InitAsDefaultInstance() {
  ::middle_layer_pb::_SensorInfoNotify_default_instance_._instance.get_mutable()->imu_accel_ = const_cast< ::middle_layer_pb::ImuAccelMessage*>(
      ::middle_layer_pb::ImuAccelMessage::internal_default_instance());
  ::middle_layer_pb::_SensorInfoNotify_default_instance_._instance.get_mutable()->imu_gyro_ = const_cast< ::middle_layer_pb::ImuGyroMessage*>(
      ::middle_layer_pb::ImuGyroMessage::internal_default_instance());
  ::middle_layer_pb::_SensorInfoNotify_default_instance_._instance.get_mutable()->imu_euler_ = const_cast< ::middle_layer_pb::ImuEulerMessage*>(
      ::middle_layer_pb::ImuEulerMessage::internal_default_instance());
  ::middle_layer_pb::_SensorInfoNotify_default_instance_._instance.get_mutable()->gnss_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
  ::middle_layer_pb::_SensorInfoNotify_default_instance_._instance.get_mutable()->rtk_ = const_cast< ::middle_layer_pb::RtkDataSource*>(
      ::middle_layer_pb::RtkDataSource::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorInfoNotify::kIdFieldNumber;
const int SensorInfoNotify::kTimestampFieldNumber;
const int SensorInfoNotify::kImuAccelFieldNumber;
const int SensorInfoNotify::kImuGyroFieldNumber;
const int SensorInfoNotify::kImuEulerFieldNumber;
const int SensorInfoNotify::kGnssFieldNumber;
const int SensorInfoNotify::kRtkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorInfoNotify::SensorInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsSensorInfoNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.SensorInfoNotify)
}
SensorInfoNotify::SensorInfoNotify(const SensorInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_imu_accel()) {
    imu_accel_ = new ::middle_layer_pb::ImuAccelMessage(*from.imu_accel_);
  } else {
    imu_accel_ = NULL;
  }
  if (from.has_imu_gyro()) {
    imu_gyro_ = new ::middle_layer_pb::ImuGyroMessage(*from.imu_gyro_);
  } else {
    imu_gyro_ = NULL;
  }
  if (from.has_imu_euler()) {
    imu_euler_ = new ::middle_layer_pb::ImuEulerMessage(*from.imu_euler_);
  } else {
    imu_euler_ = NULL;
  }
  if (from.has_gnss()) {
    gnss_ = new ::middle_layer_pb::PointLLH(*from.gnss_);
  } else {
    gnss_ = NULL;
  }
  if (from.has_rtk()) {
    rtk_ = new ::middle_layer_pb::RtkDataSource(*from.rtk_);
  } else {
    rtk_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.SensorInfoNotify)
}

void SensorInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imu_accel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&imu_accel_)) + sizeof(timestamp_));
}

SensorInfoNotify::~SensorInfoNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.SensorInfoNotify)
  SharedDtor();
}

void SensorInfoNotify::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete imu_accel_;
  if (this != internal_default_instance()) delete imu_gyro_;
  if (this != internal_default_instance()) delete imu_euler_;
  if (this != internal_default_instance()) delete gnss_;
  if (this != internal_default_instance()) delete rtk_;
}

void SensorInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorInfoNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorInfoNotify& SensorInfoNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsSensorInfoNotify();
  return *internal_default_instance();
}

SensorInfoNotify* SensorInfoNotify::New(::google::protobuf::Arena* arena) const {
  SensorInfoNotify* n = new SensorInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SensorInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.SensorInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(imu_accel_ != NULL);
      imu_accel_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(imu_gyro_ != NULL);
      imu_gyro_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(imu_euler_ != NULL);
      imu_euler_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(gnss_ != NULL);
      gnss_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(rtk_ != NULL);
      rtk_->Clear();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SensorInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.SensorInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.SensorInfoNotify.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ImuAccelMessage imu_accel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imu_accel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ImuGyroMessage imu_gyro = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imu_gyro()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ImuEulerMessage imu_euler = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imu_euler()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PointLLH gnss = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RtkDataSource rtk = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rtk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.SensorInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.SensorInfoNotify)
  return false;
#undef DO_
}

void SensorInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.SensorInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.SensorInfoNotify.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional .middle_layer_pb.ImuAccelMessage imu_accel = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->imu_accel_, output);
  }

  // optional .middle_layer_pb.ImuGyroMessage imu_gyro = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->imu_gyro_, output);
  }

  // optional .middle_layer_pb.ImuEulerMessage imu_euler = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->imu_euler_, output);
  }

  // optional .middle_layer_pb.PointLLH gnss = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->gnss_, output);
  }

  // optional .middle_layer_pb.RtkDataSource rtk = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->rtk_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.SensorInfoNotify)
}

::google::protobuf::uint8* SensorInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.SensorInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.SensorInfoNotify.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional .middle_layer_pb.ImuAccelMessage imu_accel = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->imu_accel_, deterministic, target);
  }

  // optional .middle_layer_pb.ImuGyroMessage imu_gyro = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->imu_gyro_, deterministic, target);
  }

  // optional .middle_layer_pb.ImuEulerMessage imu_euler = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->imu_euler_, deterministic, target);
  }

  // optional .middle_layer_pb.PointLLH gnss = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->gnss_, deterministic, target);
  }

  // optional .middle_layer_pb.RtkDataSource rtk = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->rtk_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.SensorInfoNotify)
  return target;
}

size_t SensorInfoNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.SensorInfoNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t SensorInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.SensorInfoNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000041) ^ 0x00000041) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 62u) {
    // optional .middle_layer_pb.ImuAccelMessage imu_accel = 3;
    if (has_imu_accel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->imu_accel_);
    }

    // optional .middle_layer_pb.ImuGyroMessage imu_gyro = 4;
    if (has_imu_gyro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->imu_gyro_);
    }

    // optional .middle_layer_pb.ImuEulerMessage imu_euler = 5;
    if (has_imu_euler()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->imu_euler_);
    }

    // optional .middle_layer_pb.PointLLH gnss = 6;
    if (has_gnss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->gnss_);
    }

    // optional .middle_layer_pb.RtkDataSource rtk = 7;
    if (has_rtk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->rtk_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.SensorInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.SensorInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.SensorInfoNotify)
    MergeFrom(*source);
  }
}

void SensorInfoNotify::MergeFrom(const SensorInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.SensorInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_imu_accel()->::middle_layer_pb::ImuAccelMessage::MergeFrom(from.imu_accel());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_imu_gyro()->::middle_layer_pb::ImuGyroMessage::MergeFrom(from.imu_gyro());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_imu_euler()->::middle_layer_pb::ImuEulerMessage::MergeFrom(from.imu_euler());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_gnss()->::middle_layer_pb::PointLLH::MergeFrom(from.gnss());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_rtk()->::middle_layer_pb::RtkDataSource::MergeFrom(from.rtk());
    }
    if (cached_has_bits & 0x00000040u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SensorInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.SensorInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorInfoNotify::CopyFrom(const SensorInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.SensorInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorInfoNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000041) != 0x00000041) return false;
  if (has_imu_accel()) {
    if (!this->imu_accel_->IsInitialized()) return false;
  }
  if (has_imu_gyro()) {
    if (!this->imu_gyro_->IsInitialized()) return false;
  }
  if (has_imu_euler()) {
    if (!this->imu_euler_->IsInitialized()) return false;
  }
  return true;
}

void SensorInfoNotify::Swap(SensorInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorInfoNotify::InternalSwap(SensorInfoNotify* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(imu_accel_, other->imu_accel_);
  swap(imu_gyro_, other->imu_gyro_);
  swap(imu_euler_, other->imu_euler_);
  swap(gnss_, other->gnss_);
  swap(rtk_, other->rtk_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SensorInfoNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeasureResultNotify_Point::InitAsDefaultInstance() {
  ::middle_layer_pb::_MeasureResultNotify_Point_default_instance_._instance.get_mutable()->stake_dto_ = const_cast< ::middle_layer_pb::StakeDto*>(
      ::middle_layer_pb::StakeDto::internal_default_instance());
  ::middle_layer_pb::_MeasureResultNotify_Point_default_instance_._instance.get_mutable()->rtk_res_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
  ::middle_layer_pb::_MeasureResultNotify_Point_default_instance_._instance.get_mutable()->pl_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasureResultNotify_Point::kStakeDtoFieldNumber;
const int MeasureResultNotify_Point::kRtkResFieldNumber;
const int MeasureResultNotify_Point::kPlFieldNumber;
const int MeasureResultNotify_Point::kTaskCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasureResultNotify_Point::MeasureResultNotify_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotify_Point();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.MeasureResultNotify.Point)
}
MeasureResultNotify_Point::MeasureResultNotify_Point(const MeasureResultNotify_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_stake_dto()) {
    stake_dto_ = new ::middle_layer_pb::StakeDto(*from.stake_dto_);
  } else {
    stake_dto_ = NULL;
  }
  if (from.has_rtk_res()) {
    rtk_res_ = new ::middle_layer_pb::PointLLH(*from.rtk_res_);
  } else {
    rtk_res_ = NULL;
  }
  if (from.has_pl()) {
    pl_ = new ::middle_layer_pb::PointLLH(*from.pl_);
  } else {
    pl_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.MeasureResultNotify.Point)
}

void MeasureResultNotify_Point::SharedCtor() {
  _cached_size_ = 0;
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stake_dto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pl_) -
      reinterpret_cast<char*>(&stake_dto_)) + sizeof(pl_));
}

MeasureResultNotify_Point::~MeasureResultNotify_Point() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.MeasureResultNotify.Point)
  SharedDtor();
}

void MeasureResultNotify_Point::SharedDtor() {
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stake_dto_;
  if (this != internal_default_instance()) delete rtk_res_;
  if (this != internal_default_instance()) delete pl_;
}

void MeasureResultNotify_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeasureResultNotify_Point::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeasureResultNotify_Point& MeasureResultNotify_Point::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotify_Point();
  return *internal_default_instance();
}

MeasureResultNotify_Point* MeasureResultNotify_Point::New(::google::protobuf::Arena* arena) const {
  MeasureResultNotify_Point* n = new MeasureResultNotify_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeasureResultNotify_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.MeasureResultNotify.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stake_dto_ != NULL);
      stake_dto_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rtk_res_ != NULL);
      rtk_res_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pl_ != NULL);
      pl_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MeasureResultNotify_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.MeasureResultNotify.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.StakeDto stake_dto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stake_dto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH rtk_res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rtk_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PointLLH pl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.MeasureResultNotify.Point.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.MeasureResultNotify.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.MeasureResultNotify.Point)
  return false;
#undef DO_
}

void MeasureResultNotify_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.MeasureResultNotify.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.StakeDto stake_dto = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stake_dto_, output);
  }

  // required .middle_layer_pb.PointLLH rtk_res = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rtk_res_, output);
  }

  // optional .middle_layer_pb.PointLLH pl = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pl_, output);
  }

  // required string task_code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.MeasureResultNotify.Point.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->task_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.MeasureResultNotify.Point)
}

::google::protobuf::uint8* MeasureResultNotify_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.MeasureResultNotify.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.StakeDto stake_dto = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->stake_dto_, deterministic, target);
  }

  // required .middle_layer_pb.PointLLH rtk_res = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->rtk_res_, deterministic, target);
  }

  // optional .middle_layer_pb.PointLLH pl = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->pl_, deterministic, target);
  }

  // required string task_code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.MeasureResultNotify.Point.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->task_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.MeasureResultNotify.Point)
  return target;
}

size_t MeasureResultNotify_Point::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.MeasureResultNotify.Point)
  size_t total_size = 0;

  if (has_task_code()) {
    // required string task_code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_stake_dto()) {
    // required .middle_layer_pb.StakeDto stake_dto = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);
  }

  if (has_rtk_res()) {
    // required .middle_layer_pb.PointLLH rtk_res = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rtk_res_);
  }

  return total_size;
}
size_t MeasureResultNotify_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.MeasureResultNotify.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string task_code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.StakeDto stake_dto = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);

    // required .middle_layer_pb.PointLLH rtk_res = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rtk_res_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .middle_layer_pb.PointLLH pl = 3;
  if (has_pl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pl_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeasureResultNotify_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.MeasureResultNotify.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasureResultNotify_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeasureResultNotify_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.MeasureResultNotify.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.MeasureResultNotify.Point)
    MergeFrom(*source);
  }
}

void MeasureResultNotify_Point::MergeFrom(const MeasureResultNotify_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.MeasureResultNotify.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stake_dto()->::middle_layer_pb::StakeDto::MergeFrom(from.stake_dto());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rtk_res()->::middle_layer_pb::PointLLH::MergeFrom(from.rtk_res());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pl()->::middle_layer_pb::PointLLH::MergeFrom(from.pl());
    }
  }
}

void MeasureResultNotify_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.MeasureResultNotify.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasureResultNotify_Point::CopyFrom(const MeasureResultNotify_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.MeasureResultNotify.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasureResultNotify_Point::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_stake_dto()) {
    if (!this->stake_dto_->IsInitialized()) return false;
  }
  return true;
}

void MeasureResultNotify_Point::Swap(MeasureResultNotify_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasureResultNotify_Point::InternalSwap(MeasureResultNotify_Point* other) {
  using std::swap;
  task_code_.Swap(&other->task_code_);
  swap(stake_dto_, other->stake_dto_);
  swap(rtk_res_, other->rtk_res_);
  swap(pl_, other->pl_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeasureResultNotify_Point::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeasureResultNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasureResultNotify::kIdFieldNumber;
const int MeasureResultNotify::kTimestampFieldNumber;
const int MeasureResultNotify::kPosListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasureResultNotify::MeasureResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.MeasureResultNotify)
}
MeasureResultNotify::MeasureResultNotify(const MeasureResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pos_list_(from.pos_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.MeasureResultNotify)
}

void MeasureResultNotify::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

MeasureResultNotify::~MeasureResultNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.MeasureResultNotify)
  SharedDtor();
}

void MeasureResultNotify::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeasureResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeasureResultNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeasureResultNotify& MeasureResultNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsMeasureResultNotify();
  return *internal_default_instance();
}

MeasureResultNotify* MeasureResultNotify::New(::google::protobuf::Arena* arena) const {
  MeasureResultNotify* n = new MeasureResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeasureResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.MeasureResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pos_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MeasureResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.MeasureResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.MeasureResultNotify.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.MeasureResultNotify.Point pos_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pos_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.MeasureResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.MeasureResultNotify)
  return false;
#undef DO_
}

void MeasureResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.MeasureResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.MeasureResultNotify.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // repeated .middle_layer_pb.MeasureResultNotify.Point pos_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pos_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.MeasureResultNotify)
}

::google::protobuf::uint8* MeasureResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.MeasureResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.MeasureResultNotify.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // repeated .middle_layer_pb.MeasureResultNotify.Point pos_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pos_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.MeasureResultNotify)
  return target;
}

size_t MeasureResultNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.MeasureResultNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t MeasureResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.MeasureResultNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.MeasureResultNotify.Point pos_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pos_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pos_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeasureResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.MeasureResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasureResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeasureResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.MeasureResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.MeasureResultNotify)
    MergeFrom(*source);
  }
}

void MeasureResultNotify::MergeFrom(const MeasureResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.MeasureResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pos_list_.MergeFrom(from.pos_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MeasureResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.MeasureResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasureResultNotify::CopyFrom(const MeasureResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.MeasureResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasureResultNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pos_list())) return false;
  return true;
}

void MeasureResultNotify::Swap(MeasureResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasureResultNotify::InternalSwap(MeasureResultNotify* other) {
  using std::swap;
  pos_list_.InternalSwap(&other->pos_list_);
  id_.Swap(&other->id_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeasureResultNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskState::InitAsDefaultInstance() {
  ::middle_layer_pb::_TaskState_default_instance_._instance.get_mutable()->stake_dto_ = const_cast< ::middle_layer_pb::StakeDto*>(
      ::middle_layer_pb::StakeDto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskState::kStateFieldNumber;
const int TaskState::kTaskCodeFieldNumber;
const int TaskState::kStakeDtoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskState::TaskState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsTaskState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.TaskState)
}
TaskState::TaskState(const TaskState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_stake_dto()) {
    stake_dto_ = new ::middle_layer_pb::StakeDto(*from.stake_dto_);
  } else {
    stake_dto_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.TaskState)
}

void TaskState::SharedCtor() {
  _cached_size_ = 0;
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stake_dto_ = NULL;
  state_ = 255;
}

TaskState::~TaskState() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.TaskState)
  SharedDtor();
}

void TaskState::SharedDtor() {
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stake_dto_;
}

void TaskState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskState::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskState& TaskState::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsTaskState();
  return *internal_default_instance();
}

TaskState* TaskState::New(::google::protobuf::Arena* arena) const {
  TaskState* n = new TaskState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskState::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.TaskState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stake_dto_ != NULL);
      stake_dto_->Clear();
    }
    state_ = 255;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.TaskState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.TaskState.enState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::TaskState_enState_IsValid(value)) {
            set_state(static_cast< ::middle_layer_pb::TaskState_enState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.TaskState.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.StakeDto stake_dto = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stake_dto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.TaskState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.TaskState)
  return false;
#undef DO_
}

void TaskState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.TaskState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.TaskState.enState state = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // optional string task_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.TaskState.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // optional .middle_layer_pb.StakeDto stake_dto = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stake_dto_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.TaskState)
}

::google::protobuf::uint8* TaskState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.TaskState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.TaskState.enState state = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // optional string task_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.TaskState.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // optional .middle_layer_pb.StakeDto stake_dto = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->stake_dto_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.TaskState)
  return target;
}

size_t TaskState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.TaskState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .middle_layer_pb.TaskState.enState state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string task_code = 2;
    if (has_task_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->task_code());
    }

    // optional .middle_layer_pb.StakeDto stake_dto = 3;
    if (has_stake_dto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->stake_dto_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.TaskState)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.TaskState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.TaskState)
    MergeFrom(*source);
  }
}

void TaskState::MergeFrom(const TaskState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.TaskState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stake_dto()->::middle_layer_pb::StakeDto::MergeFrom(from.stake_dto());
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.TaskState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskState::CopyFrom(const TaskState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.TaskState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_stake_dto()) {
    if (!this->stake_dto_->IsInitialized()) return false;
  }
  return true;
}

void TaskState::Swap(TaskState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskState::InternalSwap(TaskState* other) {
  using std::swap;
  task_code_.Swap(&other->task_code_);
  swap(stake_dto_, other->stake_dto_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskState::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskStateNotify::InitAsDefaultInstance() {
  ::middle_layer_pb::_TaskStateNotify_default_instance_._instance.get_mutable()->state_ = const_cast< ::middle_layer_pb::TaskState*>(
      ::middle_layer_pb::TaskState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskStateNotify::kIdFieldNumber;
const int TaskStateNotify::kTimestampFieldNumber;
const int TaskStateNotify::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskStateNotify::TaskStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsTaskStateNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.TaskStateNotify)
}
TaskStateNotify::TaskStateNotify(const TaskStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_state()) {
    state_ = new ::middle_layer_pb::TaskState(*from.state_);
  } else {
    state_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.TaskStateNotify)
}

void TaskStateNotify::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&state_)) + sizeof(timestamp_));
}

TaskStateNotify::~TaskStateNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.TaskStateNotify)
  SharedDtor();
}

void TaskStateNotify::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_;
}

void TaskStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskStateNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskStateNotify& TaskStateNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsTaskStateNotify();
  return *internal_default_instance();
}

TaskStateNotify* TaskStateNotify::New(::google::protobuf::Arena* arena) const {
  TaskStateNotify* n = new TaskStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.TaskStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(state_ != NULL);
      state_->Clear();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.TaskStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.TaskStateNotify.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.TaskState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.TaskStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.TaskStateNotify)
  return false;
#undef DO_
}

void TaskStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.TaskStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.TaskStateNotify.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // required .middle_layer_pb.TaskState state = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->state_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.TaskStateNotify)
}

::google::protobuf::uint8* TaskStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.TaskStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.TaskStateNotify.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // required .middle_layer_pb.TaskState state = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->state_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.TaskStateNotify)
  return target;
}

size_t TaskStateNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.TaskStateNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_state()) {
    // required .middle_layer_pb.TaskState state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t TaskStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.TaskStateNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.TaskState state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);

    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.TaskStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.TaskStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.TaskStateNotify)
    MergeFrom(*source);
  }
}

void TaskStateNotify::MergeFrom(const TaskStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.TaskStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_state()->::middle_layer_pb::TaskState::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.TaskStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskStateNotify::CopyFrom(const TaskStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.TaskStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskStateNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void TaskStateNotify::Swap(TaskStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskStateNotify::InternalSwap(TaskStateNotify* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(state_, other->state_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskStateNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetTrackNotify_Point::InitAsDefaultInstance() {
  ::middle_layer_pb::_TargetTrackNotify_Point_default_instance_._instance.get_mutable()->pt_x_y_ = const_cast< ::middle_layer_pb::Point2D*>(
      ::middle_layer_pb::Point2D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetTrackNotify_Point::kPtXYFieldNumber;
const int TargetTrackNotify_Point::kPtHFieldNumber;
const int TargetTrackNotify_Point::kPtCFieldNumber;
const int TargetTrackNotify_Point::kPtSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetTrackNotify_Point::TargetTrackNotify_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotify_Point();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.TargetTrackNotify.Point)
}
TargetTrackNotify_Point::TargetTrackNotify_Point(const TargetTrackNotify_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pt_x_y()) {
    pt_x_y_ = new ::middle_layer_pb::Point2D(*from.pt_x_y_);
  } else {
    pt_x_y_ = NULL;
  }
  ::memcpy(&pt_h_, &from.pt_h_,
    static_cast<size_t>(reinterpret_cast<char*>(&pt_s_) -
    reinterpret_cast<char*>(&pt_h_)) + sizeof(pt_s_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.TargetTrackNotify.Point)
}

void TargetTrackNotify_Point::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pt_x_y_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pt_s_) -
      reinterpret_cast<char*>(&pt_x_y_)) + sizeof(pt_s_));
}

TargetTrackNotify_Point::~TargetTrackNotify_Point() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.TargetTrackNotify.Point)
  SharedDtor();
}

void TargetTrackNotify_Point::SharedDtor() {
  if (this != internal_default_instance()) delete pt_x_y_;
}

void TargetTrackNotify_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TargetTrackNotify_Point::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetTrackNotify_Point& TargetTrackNotify_Point::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotify_Point();
  return *internal_default_instance();
}

TargetTrackNotify_Point* TargetTrackNotify_Point::New(::google::protobuf::Arena* arena) const {
  TargetTrackNotify_Point* n = new TargetTrackNotify_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TargetTrackNotify_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.TargetTrackNotify.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pt_x_y_ != NULL);
    pt_x_y_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&pt_h_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pt_s_) -
        reinterpret_cast<char*>(&pt_h_)) + sizeof(pt_s_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TargetTrackNotify_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.TargetTrackNotify.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.Point2D pt_x_y = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt_x_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double pt_h = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_pt_h();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pt_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double pt_c = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_pt_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pt_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double pt_s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_pt_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pt_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.TargetTrackNotify.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.TargetTrackNotify.Point)
  return false;
#undef DO_
}

void TargetTrackNotify_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.TargetTrackNotify.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.Point2D pt_x_y = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pt_x_y_, output);
  }

  // required double pt_h = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->pt_h(), output);
  }

  // required double pt_c = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->pt_c(), output);
  }

  // required double pt_s = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->pt_s(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.TargetTrackNotify.Point)
}

::google::protobuf::uint8* TargetTrackNotify_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.TargetTrackNotify.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.Point2D pt_x_y = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pt_x_y_, deterministic, target);
  }

  // required double pt_h = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->pt_h(), target);
  }

  // required double pt_c = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->pt_c(), target);
  }

  // required double pt_s = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->pt_s(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.TargetTrackNotify.Point)
  return target;
}

size_t TargetTrackNotify_Point::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.TargetTrackNotify.Point)
  size_t total_size = 0;

  if (has_pt_x_y()) {
    // required .middle_layer_pb.Point2D pt_x_y = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_x_y_);
  }

  if (has_pt_h()) {
    // required double pt_h = 2;
    total_size += 1 + 8;
  }

  if (has_pt_c()) {
    // required double pt_c = 3;
    total_size += 1 + 8;
  }

  if (has_pt_s()) {
    // required double pt_s = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t TargetTrackNotify_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.TargetTrackNotify.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .middle_layer_pb.Point2D pt_x_y = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_x_y_);

    // required double pt_h = 2;
    total_size += 1 + 8;

    // required double pt_c = 3;
    total_size += 1 + 8;

    // required double pt_s = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TargetTrackNotify_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.TargetTrackNotify.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetTrackNotify_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetTrackNotify_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.TargetTrackNotify.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.TargetTrackNotify.Point)
    MergeFrom(*source);
  }
}

void TargetTrackNotify_Point::MergeFrom(const TargetTrackNotify_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.TargetTrackNotify.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pt_x_y()->::middle_layer_pb::Point2D::MergeFrom(from.pt_x_y());
    }
    if (cached_has_bits & 0x00000002u) {
      pt_h_ = from.pt_h_;
    }
    if (cached_has_bits & 0x00000004u) {
      pt_c_ = from.pt_c_;
    }
    if (cached_has_bits & 0x00000008u) {
      pt_s_ = from.pt_s_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TargetTrackNotify_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.TargetTrackNotify.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetTrackNotify_Point::CopyFrom(const TargetTrackNotify_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.TargetTrackNotify.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetTrackNotify_Point::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void TargetTrackNotify_Point::Swap(TargetTrackNotify_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetTrackNotify_Point::InternalSwap(TargetTrackNotify_Point* other) {
  using std::swap;
  swap(pt_x_y_, other->pt_x_y_);
  swap(pt_h_, other->pt_h_);
  swap(pt_c_, other->pt_c_);
  swap(pt_s_, other->pt_s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TargetTrackNotify_Point::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetTrackNotify::InitAsDefaultInstance() {
  ::middle_layer_pb::_TargetTrackNotify_default_instance_._instance.get_mutable()->curr_pos_ = const_cast< ::middle_layer_pb::TargetTrackNotify_Point*>(
      ::middle_layer_pb::TargetTrackNotify_Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetTrackNotify::kIdFieldNumber;
const int TargetTrackNotify::kTimestampFieldNumber;
const int TargetTrackNotify::kCurrPosFieldNumber;
const int TargetTrackNotify::kPosListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetTrackNotify::TargetTrackNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.TargetTrackNotify)
}
TargetTrackNotify::TargetTrackNotify(const TargetTrackNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pos_list_(from.pos_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_curr_pos()) {
    curr_pos_ = new ::middle_layer_pb::TargetTrackNotify_Point(*from.curr_pos_);
  } else {
    curr_pos_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.TargetTrackNotify)
}

void TargetTrackNotify::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&curr_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&curr_pos_)) + sizeof(timestamp_));
}

TargetTrackNotify::~TargetTrackNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.TargetTrackNotify)
  SharedDtor();
}

void TargetTrackNotify::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete curr_pos_;
}

void TargetTrackNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TargetTrackNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetTrackNotify& TargetTrackNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsTargetTrackNotify();
  return *internal_default_instance();
}

TargetTrackNotify* TargetTrackNotify::New(::google::protobuf::Arena* arena) const {
  TargetTrackNotify* n = new TargetTrackNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TargetTrackNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.TargetTrackNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pos_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(curr_pos_ != NULL);
      curr_pos_->Clear();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TargetTrackNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.TargetTrackNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.TargetTrackNotify.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.TargetTrackNotify.Point curr_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curr_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.TargetTrackNotify.Point pos_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pos_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.TargetTrackNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.TargetTrackNotify)
  return false;
#undef DO_
}

void TargetTrackNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.TargetTrackNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.TargetTrackNotify.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional .middle_layer_pb.TargetTrackNotify.Point curr_pos = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->curr_pos_, output);
  }

  // repeated .middle_layer_pb.TargetTrackNotify.Point pos_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pos_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.TargetTrackNotify)
}

::google::protobuf::uint8* TargetTrackNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.TargetTrackNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.TargetTrackNotify.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional .middle_layer_pb.TargetTrackNotify.Point curr_pos = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->curr_pos_, deterministic, target);
  }

  // repeated .middle_layer_pb.TargetTrackNotify.Point pos_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->pos_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.TargetTrackNotify)
  return target;
}

size_t TargetTrackNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.TargetTrackNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t TargetTrackNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.TargetTrackNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.TargetTrackNotify.Point pos_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pos_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pos_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.TargetTrackNotify.Point curr_pos = 3;
  if (has_curr_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->curr_pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TargetTrackNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.TargetTrackNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetTrackNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetTrackNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.TargetTrackNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.TargetTrackNotify)
    MergeFrom(*source);
  }
}

void TargetTrackNotify::MergeFrom(const TargetTrackNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.TargetTrackNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pos_list_.MergeFrom(from.pos_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_curr_pos()->::middle_layer_pb::TargetTrackNotify_Point::MergeFrom(from.curr_pos());
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TargetTrackNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.TargetTrackNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetTrackNotify::CopyFrom(const TargetTrackNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.TargetTrackNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetTrackNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pos_list())) return false;
  if (has_curr_pos()) {
    if (!this->curr_pos_->IsInitialized()) return false;
  }
  return true;
}

void TargetTrackNotify::Swap(TargetTrackNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetTrackNotify::InternalSwap(TargetTrackNotify* other) {
  using std::swap;
  pos_list_.InternalSwap(&other->pos_list_);
  id_.Swap(&other->id_);
  swap(curr_pos_, other->curr_pos_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TargetTrackNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtkOperationCmdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtkOperationCmdReq::kIdFieldNumber;
const int RtkOperationCmdReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtkOperationCmdReq::RtkOperationCmdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOperationCmdReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RtkOperationCmdReq)
}
RtkOperationCmdReq::RtkOperationCmdReq(const RtkOperationCmdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RtkOperationCmdReq)
}

void RtkOperationCmdReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 255;
}

RtkOperationCmdReq::~RtkOperationCmdReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RtkOperationCmdReq)
  SharedDtor();
}

void RtkOperationCmdReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RtkOperationCmdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtkOperationCmdReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtkOperationCmdReq& RtkOperationCmdReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOperationCmdReq();
  return *internal_default_instance();
}

RtkOperationCmdReq* RtkOperationCmdReq::New(::google::protobuf::Arena* arena) const {
  RtkOperationCmdReq* n = new RtkOperationCmdReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RtkOperationCmdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RtkOperationCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    type_ = 255;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtkOperationCmdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RtkOperationCmdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RtkOperationCmdReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RtkOperationCmdReq_enOperationType_IsValid(value)) {
            set_type(static_cast< ::middle_layer_pb::RtkOperationCmdReq_enOperationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RtkOperationCmdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RtkOperationCmdReq)
  return false;
#undef DO_
}

void RtkOperationCmdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RtkOperationCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RtkOperationCmdReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RtkOperationCmdReq)
}

::google::protobuf::uint8* RtkOperationCmdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RtkOperationCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RtkOperationCmdReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RtkOperationCmdReq)
  return target;
}

size_t RtkOperationCmdReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RtkOperationCmdReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_type()) {
    // required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t RtkOperationCmdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RtkOperationCmdReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.RtkOperationCmdReq.enOperationType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtkOperationCmdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RtkOperationCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RtkOperationCmdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtkOperationCmdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RtkOperationCmdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RtkOperationCmdReq)
    MergeFrom(*source);
  }
}

void RtkOperationCmdReq::MergeFrom(const RtkOperationCmdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RtkOperationCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtkOperationCmdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RtkOperationCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtkOperationCmdReq::CopyFrom(const RtkOperationCmdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RtkOperationCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtkOperationCmdReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RtkOperationCmdReq::Swap(RtkOperationCmdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtkOperationCmdReq::InternalSwap(RtkOperationCmdReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RtkOperationCmdReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtkOperationCmdRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtkOperationCmdRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtkOperationCmdRes::RtkOperationCmdRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOperationCmdRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RtkOperationCmdRes)
}
RtkOperationCmdRes::RtkOperationCmdRes(const RtkOperationCmdRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RtkOperationCmdRes)
}

void RtkOperationCmdRes::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
}

RtkOperationCmdRes::~RtkOperationCmdRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RtkOperationCmdRes)
  SharedDtor();
}

void RtkOperationCmdRes::SharedDtor() {
}

void RtkOperationCmdRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtkOperationCmdRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtkOperationCmdRes& RtkOperationCmdRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOperationCmdRes();
  return *internal_default_instance();
}

RtkOperationCmdRes* RtkOperationCmdRes::New(::google::protobuf::Arena* arena) const {
  RtkOperationCmdRes* n = new RtkOperationCmdRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RtkOperationCmdRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RtkOperationCmdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtkOperationCmdRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RtkOperationCmdRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RtkOperationCmdRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RtkOperationCmdRes)
  return false;
#undef DO_
}

void RtkOperationCmdRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RtkOperationCmdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RtkOperationCmdRes)
}

::google::protobuf::uint8* RtkOperationCmdRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RtkOperationCmdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RtkOperationCmdRes)
  return target;
}

size_t RtkOperationCmdRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RtkOperationCmdRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .middle_layer_pb.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtkOperationCmdRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RtkOperationCmdRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RtkOperationCmdRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtkOperationCmdRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RtkOperationCmdRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RtkOperationCmdRes)
    MergeFrom(*source);
  }
}

void RtkOperationCmdRes::MergeFrom(const RtkOperationCmdRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RtkOperationCmdRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    set_code(from.code());
  }
}

void RtkOperationCmdRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RtkOperationCmdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtkOperationCmdRes::CopyFrom(const RtkOperationCmdRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RtkOperationCmdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtkOperationCmdRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RtkOperationCmdRes::Swap(RtkOperationCmdRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtkOperationCmdRes::InternalSwap(RtkOperationCmdRes* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RtkOperationCmdRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtkOffsetInfo::InitAsDefaultInstance() {
  ::middle_layer_pb::_RtkOffsetInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtkOffsetInfo::kPosFieldNumber;
const int RtkOffsetInfo::kNameFieldNumber;
const int RtkOffsetInfo::kLevelFieldNumber;
const int RtkOffsetInfo::kOffsetXFieldNumber;
const int RtkOffsetInfo::kOffsetYFieldNumber;
const int RtkOffsetInfo::kOffsetZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtkOffsetInfo::RtkOffsetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOffsetInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RtkOffsetInfo)
}
RtkOffsetInfo::RtkOffsetInfo(const RtkOffsetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_level()) {
    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  if (from.has_pos()) {
    pos_ = new ::middle_layer_pb::PointLLH(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&offset_x_, &from.offset_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_z_) -
    reinterpret_cast<char*>(&offset_x_)) + sizeof(offset_z_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RtkOffsetInfo)
}

void RtkOffsetInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_z_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(offset_z_));
}

RtkOffsetInfo::~RtkOffsetInfo() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RtkOffsetInfo)
  SharedDtor();
}

void RtkOffsetInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pos_;
}

void RtkOffsetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtkOffsetInfo::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtkOffsetInfo& RtkOffsetInfo::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRtkOffsetInfo();
  return *internal_default_instance();
}

RtkOffsetInfo* RtkOffsetInfo::New(::google::protobuf::Arena* arena) const {
  RtkOffsetInfo* n = new RtkOffsetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RtkOffsetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RtkOffsetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!level_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*level_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&offset_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_z_) -
        reinterpret_cast<char*>(&offset_x_)) + sizeof(offset_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtkOffsetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RtkOffsetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.PointLLH pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RtkOffsetInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_level()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->level().data(), static_cast<int>(this->level().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RtkOffsetInfo.level");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_offset_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_offset_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_offset_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RtkOffsetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RtkOffsetInfo)
  return false;
#undef DO_
}

void RtkOffsetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RtkOffsetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.PointLLH pos = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RtkOffsetInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string level = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RtkOffsetInfo.level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->level(), output);
  }

  // required double offset_x = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->offset_x(), output);
  }

  // required double offset_y = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->offset_y(), output);
  }

  // required double offset_z = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->offset_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RtkOffsetInfo)
}

::google::protobuf::uint8* RtkOffsetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RtkOffsetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.PointLLH pos = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pos_, deterministic, target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RtkOffsetInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string level = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RtkOffsetInfo.level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->level(), target);
  }

  // required double offset_x = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->offset_x(), target);
  }

  // required double offset_y = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->offset_y(), target);
  }

  // required double offset_z = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->offset_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RtkOffsetInfo)
  return target;
}

size_t RtkOffsetInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RtkOffsetInfo)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_level()) {
    // required string level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->level());
  }

  if (has_pos()) {
    // required .middle_layer_pb.PointLLH pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  if (has_offset_x()) {
    // required double offset_x = 4;
    total_size += 1 + 8;
  }

  if (has_offset_y()) {
    // required double offset_y = 5;
    total_size += 1 + 8;
  }

  if (has_offset_z()) {
    // required double offset_z = 6;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t RtkOffsetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RtkOffsetInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->level());

    // required .middle_layer_pb.PointLLH pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);

    // required double offset_x = 4;
    total_size += 1 + 8;

    // required double offset_y = 5;
    total_size += 1 + 8;

    // required double offset_z = 6;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtkOffsetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RtkOffsetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RtkOffsetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtkOffsetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RtkOffsetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RtkOffsetInfo)
    MergeFrom(*source);
  }
}

void RtkOffsetInfo::MergeFrom(const RtkOffsetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RtkOffsetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_level();
      level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_pos()->::middle_layer_pb::PointLLH::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000008u) {
      offset_x_ = from.offset_x_;
    }
    if (cached_has_bits & 0x00000010u) {
      offset_y_ = from.offset_y_;
    }
    if (cached_has_bits & 0x00000020u) {
      offset_z_ = from.offset_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtkOffsetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RtkOffsetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtkOffsetInfo::CopyFrom(const RtkOffsetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RtkOffsetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtkOffsetInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void RtkOffsetInfo::Swap(RtkOffsetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtkOffsetInfo::InternalSwap(RtkOffsetInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  level_.Swap(&other->level_);
  swap(pos_, other->pos_);
  swap(offset_x_, other->offset_x_);
  swap(offset_y_, other->offset_y_);
  swap(offset_z_, other->offset_z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RtkOffsetInfo::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkMessageIssued::InitAsDefaultInstance() {
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->device_task_ = const_cast< ::middle_layer_pb::DeviceTask*>(
      ::middle_layer_pb::DeviceTask::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->rtk_offset_info_ = const_cast< ::middle_layer_pb::RtkOffsetInfo*>(
      ::middle_layer_pb::RtkOffsetInfo::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->put_side_line_param_ = const_cast< ::middle_layer_pb::PutSideLineParam*>(
      ::middle_layer_pb::PutSideLineParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->draw_side_line_param_ = const_cast< ::middle_layer_pb::DrawSideLineParam*>(
      ::middle_layer_pb::DrawSideLineParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->put_mid_line_param_ = const_cast< ::middle_layer_pb::PutMidLineParam*>(
      ::middle_layer_pb::PutMidLineParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->draw_mid_line_param_ = const_cast< ::middle_layer_pb::DrawMidLineParam*>(
      ::middle_layer_pb::DrawMidLineParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->draw_standard_square_param_ = const_cast< ::middle_layer_pb::DrawStandardSquareParam*>(
      ::middle_layer_pb::DrawStandardSquareParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->put_levelling_param_ = const_cast< ::middle_layer_pb::PutLevellingParam*>(
      ::middle_layer_pb::PutLevellingParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->put_lane_line_param_ = const_cast< ::middle_layer_pb::PutLaneLineParam*>(
      ::middle_layer_pb::PutLaneLineParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->draw_stakes_help_param_ = const_cast< ::middle_layer_pb::DrawStakesHelpParam*>(
      ::middle_layer_pb::DrawStakesHelpParam::internal_default_instance());
  ::middle_layer_pb::_WorkMessageIssued_default_instance_._instance.get_mutable()->put_cross_section_param_ = const_cast< ::middle_layer_pb::PutCrossSectionParam*>(
      ::middle_layer_pb::PutCrossSectionParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkMessageIssued::kIdFieldNumber;
const int WorkMessageIssued::kDeviceTaskFieldNumber;
const int WorkMessageIssued::kWorkTypeFieldNumber;
const int WorkMessageIssued::kRtkOffsetInfoFieldNumber;
const int WorkMessageIssued::kStakeDtoListFieldNumber;
const int WorkMessageIssued::kPutSideLineParamFieldNumber;
const int WorkMessageIssued::kDrawSideLineParamFieldNumber;
const int WorkMessageIssued::kPutMidLineParamFieldNumber;
const int WorkMessageIssued::kDrawMidLineParamFieldNumber;
const int WorkMessageIssued::kDrawStandardSquareParamFieldNumber;
const int WorkMessageIssued::kPutLevellingParamFieldNumber;
const int WorkMessageIssued::kPutLaneLineParamFieldNumber;
const int WorkMessageIssued::kDrawStakesHelpParamFieldNumber;
const int WorkMessageIssued::kPutCrossSectionParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkMessageIssued::WorkMessageIssued()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkMessageIssued();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.WorkMessageIssued)
}
WorkMessageIssued::WorkMessageIssued(const WorkMessageIssued& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_device_task()) {
    device_task_ = new ::middle_layer_pb::DeviceTask(*from.device_task_);
  } else {
    device_task_ = NULL;
  }
  if (from.has_rtk_offset_info()) {
    rtk_offset_info_ = new ::middle_layer_pb::RtkOffsetInfo(*from.rtk_offset_info_);
  } else {
    rtk_offset_info_ = NULL;
  }
  if (from.has_put_side_line_param()) {
    put_side_line_param_ = new ::middle_layer_pb::PutSideLineParam(*from.put_side_line_param_);
  } else {
    put_side_line_param_ = NULL;
  }
  if (from.has_draw_side_line_param()) {
    draw_side_line_param_ = new ::middle_layer_pb::DrawSideLineParam(*from.draw_side_line_param_);
  } else {
    draw_side_line_param_ = NULL;
  }
  if (from.has_put_mid_line_param()) {
    put_mid_line_param_ = new ::middle_layer_pb::PutMidLineParam(*from.put_mid_line_param_);
  } else {
    put_mid_line_param_ = NULL;
  }
  if (from.has_draw_mid_line_param()) {
    draw_mid_line_param_ = new ::middle_layer_pb::DrawMidLineParam(*from.draw_mid_line_param_);
  } else {
    draw_mid_line_param_ = NULL;
  }
  if (from.has_draw_standard_square_param()) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam(*from.draw_standard_square_param_);
  } else {
    draw_standard_square_param_ = NULL;
  }
  if (from.has_put_levelling_param()) {
    put_levelling_param_ = new ::middle_layer_pb::PutLevellingParam(*from.put_levelling_param_);
  } else {
    put_levelling_param_ = NULL;
  }
  if (from.has_put_lane_line_param()) {
    put_lane_line_param_ = new ::middle_layer_pb::PutLaneLineParam(*from.put_lane_line_param_);
  } else {
    put_lane_line_param_ = NULL;
  }
  if (from.has_draw_stakes_help_param()) {
    draw_stakes_help_param_ = new ::middle_layer_pb::DrawStakesHelpParam(*from.draw_stakes_help_param_);
  } else {
    draw_stakes_help_param_ = NULL;
  }
  if (from.has_put_cross_section_param()) {
    put_cross_section_param_ = new ::middle_layer_pb::PutCrossSectionParam(*from.put_cross_section_param_);
  } else {
    put_cross_section_param_ = NULL;
  }
  work_type_ = from.work_type_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.WorkMessageIssued)
}

void WorkMessageIssued::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&put_cross_section_param_) -
      reinterpret_cast<char*>(&device_task_)) + sizeof(put_cross_section_param_));
  work_type_ = 1;
}

WorkMessageIssued::~WorkMessageIssued() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.WorkMessageIssued)
  SharedDtor();
}

void WorkMessageIssued::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_task_;
  if (this != internal_default_instance()) delete rtk_offset_info_;
  if (this != internal_default_instance()) delete put_side_line_param_;
  if (this != internal_default_instance()) delete draw_side_line_param_;
  if (this != internal_default_instance()) delete put_mid_line_param_;
  if (this != internal_default_instance()) delete draw_mid_line_param_;
  if (this != internal_default_instance()) delete draw_standard_square_param_;
  if (this != internal_default_instance()) delete put_levelling_param_;
  if (this != internal_default_instance()) delete put_lane_line_param_;
  if (this != internal_default_instance()) delete draw_stakes_help_param_;
  if (this != internal_default_instance()) delete put_cross_section_param_;
}

void WorkMessageIssued::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkMessageIssued::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkMessageIssued& WorkMessageIssued::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkMessageIssued();
  return *internal_default_instance();
}

WorkMessageIssued* WorkMessageIssued::New(::google::protobuf::Arena* arena) const {
  WorkMessageIssued* n = new WorkMessageIssued;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkMessageIssued::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.WorkMessageIssued)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(device_task_ != NULL);
      device_task_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rtk_offset_info_ != NULL);
      rtk_offset_info_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(put_side_line_param_ != NULL);
      put_side_line_param_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(draw_side_line_param_ != NULL);
      draw_side_line_param_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(put_mid_line_param_ != NULL);
      put_mid_line_param_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(draw_mid_line_param_ != NULL);
      draw_mid_line_param_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(draw_standard_square_param_ != NULL);
      draw_standard_square_param_->Clear();
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(put_levelling_param_ != NULL);
      put_levelling_param_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(put_lane_line_param_ != NULL);
      put_lane_line_param_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(draw_stakes_help_param_ != NULL);
      draw_stakes_help_param_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(put_cross_section_param_ != NULL);
      put_cross_section_param_->Clear();
    }
    work_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorkMessageIssued::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.WorkMessageIssued)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.WorkMessageIssued.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DeviceTask device_task = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.WorkType work_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::WorkType_IsValid(value)) {
            set_work_type(static_cast< ::middle_layer_pb::WorkType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rtk_offset_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PutSideLineParam put_side_line_param = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_side_line_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.DrawSideLineParam draw_side_line_param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_side_line_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PutMidLineParam put_mid_line_param = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_mid_line_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.DrawMidLineParam draw_mid_line_param = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_mid_line_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_standard_square_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PutLevellingParam put_levelling_param = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_levelling_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PutLaneLineParam put_lane_line_param = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_lane_line_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_stakes_help_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_cross_section_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.WorkMessageIssued)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.WorkMessageIssued)
  return false;
#undef DO_
}

void WorkMessageIssued::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.WorkMessageIssued)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WorkMessageIssued.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .middle_layer_pb.DeviceTask device_task = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->device_task_, output);
  }

  // required .middle_layer_pb.WorkType work_type = 3;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->work_type(), output);
  }

  // required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->rtk_offset_info_, output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->stake_dto_list(static_cast<int>(i)), output);
  }

  // optional .middle_layer_pb.PutSideLineParam put_side_line_param = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->put_side_line_param_, output);
  }

  // optional .middle_layer_pb.DrawSideLineParam draw_side_line_param = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->draw_side_line_param_, output);
  }

  // optional .middle_layer_pb.PutMidLineParam put_mid_line_param = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->put_mid_line_param_, output);
  }

  // optional .middle_layer_pb.DrawMidLineParam draw_mid_line_param = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->draw_mid_line_param_, output);
  }

  // optional .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->draw_standard_square_param_, output);
  }

  // optional .middle_layer_pb.PutLevellingParam put_levelling_param = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->put_levelling_param_, output);
  }

  // optional .middle_layer_pb.PutLaneLineParam put_lane_line_param = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->put_lane_line_param_, output);
  }

  // optional .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->draw_stakes_help_param_, output);
  }

  // optional .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->put_cross_section_param_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.WorkMessageIssued)
}

::google::protobuf::uint8* WorkMessageIssued::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.WorkMessageIssued)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WorkMessageIssued.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .middle_layer_pb.DeviceTask device_task = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->device_task_, deterministic, target);
  }

  // required .middle_layer_pb.WorkType work_type = 3;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->work_type(), target);
  }

  // required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->rtk_offset_info_, deterministic, target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  // optional .middle_layer_pb.PutSideLineParam put_side_line_param = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->put_side_line_param_, deterministic, target);
  }

  // optional .middle_layer_pb.DrawSideLineParam draw_side_line_param = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->draw_side_line_param_, deterministic, target);
  }

  // optional .middle_layer_pb.PutMidLineParam put_mid_line_param = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->put_mid_line_param_, deterministic, target);
  }

  // optional .middle_layer_pb.DrawMidLineParam draw_mid_line_param = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->draw_mid_line_param_, deterministic, target);
  }

  // optional .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->draw_standard_square_param_, deterministic, target);
  }

  // optional .middle_layer_pb.PutLevellingParam put_levelling_param = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->put_levelling_param_, deterministic, target);
  }

  // optional .middle_layer_pb.PutLaneLineParam put_lane_line_param = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->put_lane_line_param_, deterministic, target);
  }

  // optional .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->draw_stakes_help_param_, deterministic, target);
  }

  // optional .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->put_cross_section_param_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.WorkMessageIssued)
  return target;
}

size_t WorkMessageIssued::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.WorkMessageIssued)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_device_task()) {
    // required .middle_layer_pb.DeviceTask device_task = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_task_);
  }

  if (has_rtk_offset_info()) {
    // required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rtk_offset_info_);
  }

  if (has_work_type()) {
    // required .middle_layer_pb.WorkType work_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->work_type());
  }

  return total_size;
}
size_t WorkMessageIssued::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.WorkMessageIssued)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001007) ^ 0x00001007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.DeviceTask device_task = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_task_);

    // required .middle_layer_pb.RtkOffsetInfo rtk_offset_info = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rtk_offset_info_);

    // required .middle_layer_pb.WorkType work_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->work_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 248u) {
    // optional .middle_layer_pb.PutSideLineParam put_side_line_param = 6;
    if (has_put_side_line_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->put_side_line_param_);
    }

    // optional .middle_layer_pb.DrawSideLineParam draw_side_line_param = 7;
    if (has_draw_side_line_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->draw_side_line_param_);
    }

    // optional .middle_layer_pb.PutMidLineParam put_mid_line_param = 8;
    if (has_put_mid_line_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->put_mid_line_param_);
    }

    // optional .middle_layer_pb.DrawMidLineParam draw_mid_line_param = 9;
    if (has_draw_mid_line_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->draw_mid_line_param_);
    }

    // optional .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 10;
    if (has_draw_standard_square_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->draw_standard_square_param_);
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .middle_layer_pb.PutLevellingParam put_levelling_param = 11;
    if (has_put_levelling_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->put_levelling_param_);
    }

    // optional .middle_layer_pb.PutLaneLineParam put_lane_line_param = 12;
    if (has_put_lane_line_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->put_lane_line_param_);
    }

    // optional .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 13;
    if (has_draw_stakes_help_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->draw_stakes_help_param_);
    }

    // optional .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 14;
    if (has_put_cross_section_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->put_cross_section_param_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkMessageIssued::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.WorkMessageIssued)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkMessageIssued* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkMessageIssued>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.WorkMessageIssued)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.WorkMessageIssued)
    MergeFrom(*source);
  }
}

void WorkMessageIssued::MergeFrom(const WorkMessageIssued& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.WorkMessageIssued)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_device_task()->::middle_layer_pb::DeviceTask::MergeFrom(from.device_task());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rtk_offset_info()->::middle_layer_pb::RtkOffsetInfo::MergeFrom(from.rtk_offset_info());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_put_side_line_param()->::middle_layer_pb::PutSideLineParam::MergeFrom(from.put_side_line_param());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_draw_side_line_param()->::middle_layer_pb::DrawSideLineParam::MergeFrom(from.draw_side_line_param());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_put_mid_line_param()->::middle_layer_pb::PutMidLineParam::MergeFrom(from.put_mid_line_param());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_draw_mid_line_param()->::middle_layer_pb::DrawMidLineParam::MergeFrom(from.draw_mid_line_param());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_draw_standard_square_param()->::middle_layer_pb::DrawStandardSquareParam::MergeFrom(from.draw_standard_square_param());
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_put_levelling_param()->::middle_layer_pb::PutLevellingParam::MergeFrom(from.put_levelling_param());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_put_lane_line_param()->::middle_layer_pb::PutLaneLineParam::MergeFrom(from.put_lane_line_param());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_draw_stakes_help_param()->::middle_layer_pb::DrawStakesHelpParam::MergeFrom(from.draw_stakes_help_param());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_put_cross_section_param()->::middle_layer_pb::PutCrossSectionParam::MergeFrom(from.put_cross_section_param());
    }
    if (cached_has_bits & 0x00001000u) {
      work_type_ = from.work_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorkMessageIssued::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.WorkMessageIssued)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkMessageIssued::CopyFrom(const WorkMessageIssued& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.WorkMessageIssued)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkMessageIssued::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001007) != 0x00001007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  if (has_device_task()) {
    if (!this->device_task_->IsInitialized()) return false;
  }
  if (has_rtk_offset_info()) {
    if (!this->rtk_offset_info_->IsInitialized()) return false;
  }
  if (has_put_side_line_param()) {
    if (!this->put_side_line_param_->IsInitialized()) return false;
  }
  if (has_draw_side_line_param()) {
    if (!this->draw_side_line_param_->IsInitialized()) return false;
  }
  if (has_put_mid_line_param()) {
    if (!this->put_mid_line_param_->IsInitialized()) return false;
  }
  if (has_draw_mid_line_param()) {
    if (!this->draw_mid_line_param_->IsInitialized()) return false;
  }
  if (has_draw_standard_square_param()) {
    if (!this->draw_standard_square_param_->IsInitialized()) return false;
  }
  if (has_put_levelling_param()) {
    if (!this->put_levelling_param_->IsInitialized()) return false;
  }
  if (has_put_lane_line_param()) {
    if (!this->put_lane_line_param_->IsInitialized()) return false;
  }
  if (has_draw_stakes_help_param()) {
    if (!this->draw_stakes_help_param_->IsInitialized()) return false;
  }
  if (has_put_cross_section_param()) {
    if (!this->put_cross_section_param_->IsInitialized()) return false;
  }
  return true;
}

void WorkMessageIssued::Swap(WorkMessageIssued* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkMessageIssued::InternalSwap(WorkMessageIssued* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  swap(device_task_, other->device_task_);
  swap(rtk_offset_info_, other->rtk_offset_info_);
  swap(put_side_line_param_, other->put_side_line_param_);
  swap(draw_side_line_param_, other->draw_side_line_param_);
  swap(put_mid_line_param_, other->put_mid_line_param_);
  swap(draw_mid_line_param_, other->draw_mid_line_param_);
  swap(draw_standard_square_param_, other->draw_standard_square_param_);
  swap(put_levelling_param_, other->put_levelling_param_);
  swap(put_lane_line_param_, other->put_lane_line_param_);
  swap(draw_stakes_help_param_, other->draw_stakes_help_param_);
  swap(put_cross_section_param_, other->put_cross_section_param_);
  swap(work_type_, other->work_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkMessageIssued::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkMessageIssuedRes::InitAsDefaultInstance() {
  ::middle_layer_pb::_WorkMessageIssuedRes_default_instance_._instance.get_mutable()->device_task_ = const_cast< ::middle_layer_pb::DeviceTask*>(
      ::middle_layer_pb::DeviceTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkMessageIssuedRes::kCodeFieldNumber;
const int WorkMessageIssuedRes::kDeviceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkMessageIssuedRes::WorkMessageIssuedRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkMessageIssuedRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.WorkMessageIssuedRes)
}
WorkMessageIssuedRes::WorkMessageIssuedRes(const WorkMessageIssuedRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_task()) {
    device_task_ = new ::middle_layer_pb::DeviceTask(*from.device_task_);
  } else {
    device_task_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.WorkMessageIssuedRes)
}

void WorkMessageIssuedRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&device_task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&device_task_)) + sizeof(code_));
}

WorkMessageIssuedRes::~WorkMessageIssuedRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.WorkMessageIssuedRes)
  SharedDtor();
}

void WorkMessageIssuedRes::SharedDtor() {
  if (this != internal_default_instance()) delete device_task_;
}

void WorkMessageIssuedRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkMessageIssuedRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkMessageIssuedRes& WorkMessageIssuedRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkMessageIssuedRes();
  return *internal_default_instance();
}

WorkMessageIssuedRes* WorkMessageIssuedRes::New(::google::protobuf::Arena* arena) const {
  WorkMessageIssuedRes* n = new WorkMessageIssuedRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkMessageIssuedRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.WorkMessageIssuedRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(device_task_ != NULL);
    device_task_->Clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorkMessageIssuedRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.WorkMessageIssuedRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.DeviceTask device_task = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.WorkMessageIssuedRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.WorkMessageIssuedRes)
  return false;
#undef DO_
}

void WorkMessageIssuedRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.WorkMessageIssuedRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional .middle_layer_pb.DeviceTask device_task = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->device_task_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.WorkMessageIssuedRes)
}

::google::protobuf::uint8* WorkMessageIssuedRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.WorkMessageIssuedRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional .middle_layer_pb.DeviceTask device_task = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->device_task_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.WorkMessageIssuedRes)
  return target;
}

size_t WorkMessageIssuedRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.WorkMessageIssuedRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .middle_layer_pb.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  // optional .middle_layer_pb.DeviceTask device_task = 2;
  if (has_device_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkMessageIssuedRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.WorkMessageIssuedRes)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkMessageIssuedRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkMessageIssuedRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.WorkMessageIssuedRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.WorkMessageIssuedRes)
    MergeFrom(*source);
  }
}

void WorkMessageIssuedRes::MergeFrom(const WorkMessageIssuedRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.WorkMessageIssuedRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_device_task()->::middle_layer_pb::DeviceTask::MergeFrom(from.device_task());
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorkMessageIssuedRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.WorkMessageIssuedRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkMessageIssuedRes::CopyFrom(const WorkMessageIssuedRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.WorkMessageIssuedRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkMessageIssuedRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_device_task()) {
    if (!this->device_task_->IsInitialized()) return false;
  }
  return true;
}

void WorkMessageIssuedRes::Swap(WorkMessageIssuedRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkMessageIssuedRes::InternalSwap(WorkMessageIssuedRes* other) {
  using std::swap;
  swap(device_task_, other->device_task_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkMessageIssuedRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceTask::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceTask::kTaskCodeFieldNumber;
const int DeviceTask::kStartStakeFieldNumber;
const int DeviceTask::kEndStakeFieldNumber;
const int DeviceTask::kStartTimeFieldNumber;
const int DeviceTask::kEndTimeFieldNumber;
const int DeviceTask::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceTask::DeviceTask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsDeviceTask();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.DeviceTask)
}
DeviceTask::DeviceTask(const DeviceTask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  start_stake_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_start_stake()) {
    start_stake_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_stake_);
  }
  end_stake_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_end_stake()) {
    end_stake_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_stake_);
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.DeviceTask)
}

void DeviceTask::SharedCtor() {
  _cached_size_ = 0;
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_stake_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_stake_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(status_));
}

DeviceTask::~DeviceTask() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.DeviceTask)
  SharedDtor();
}

void DeviceTask::SharedDtor() {
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_stake_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_stake_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceTask::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceTask& DeviceTask::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsDeviceTask();
  return *internal_default_instance();
}

DeviceTask* DeviceTask::New(::google::protobuf::Arena* arena) const {
  DeviceTask* n = new DeviceTask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceTask::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.DeviceTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!start_stake_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*start_stake_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!end_stake_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*end_stake_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&start_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&start_time_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeviceTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.DeviceTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string task_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.DeviceTask.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string start_stake = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_stake()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->start_stake().data(), static_cast<int>(this->start_stake().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.DeviceTask.start_stake");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string end_stake = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_stake()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->end_stake().data(), static_cast<int>(this->end_stake().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.DeviceTask.end_stake");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 start_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 end_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.DeviceTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.DeviceTask)
  return false;
#undef DO_
}

void DeviceTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.DeviceTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string task_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.DeviceTask.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->task_code(), output);
  }

  // required string start_stake = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_stake().data(), static_cast<int>(this->start_stake().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.DeviceTask.start_stake");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->start_stake(), output);
  }

  // required string end_stake = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end_stake().data(), static_cast<int>(this->end_stake().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.DeviceTask.end_stake");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->end_stake(), output);
  }

  // required int64 start_time = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->start_time(), output);
  }

  // required int64 end_time = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->end_time(), output);
  }

  // required int32 status = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.DeviceTask)
}

::google::protobuf::uint8* DeviceTask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.DeviceTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string task_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.DeviceTask.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->task_code(), target);
  }

  // required string start_stake = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_stake().data(), static_cast<int>(this->start_stake().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.DeviceTask.start_stake");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->start_stake(), target);
  }

  // required string end_stake = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end_stake().data(), static_cast<int>(this->end_stake().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.DeviceTask.end_stake");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->end_stake(), target);
  }

  // required int64 start_time = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->start_time(), target);
  }

  // required int64 end_time = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->end_time(), target);
  }

  // required int32 status = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.DeviceTask)
  return target;
}

size_t DeviceTask::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.DeviceTask)
  size_t total_size = 0;

  if (has_task_code()) {
    // required string task_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_start_stake()) {
    // required string start_stake = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_stake());
  }

  if (has_end_stake()) {
    // required string end_stake = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_stake());
  }

  if (has_start_time()) {
    // required int64 start_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());
  }

  if (has_end_time()) {
    // required int64 end_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_time());
  }

  if (has_status()) {
    // required int32 status = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  return total_size;
}
size_t DeviceTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.DeviceTask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string task_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required string start_stake = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_stake());

    // required string end_stake = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_stake());

    // required int64 start_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());

    // required int64 end_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_time());

    // required int32 status = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceTask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.DeviceTask)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceTask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceTask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.DeviceTask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.DeviceTask)
    MergeFrom(*source);
  }
}

void DeviceTask::MergeFrom(const DeviceTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.DeviceTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_start_stake();
      start_stake_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_stake_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_end_stake();
      end_stake_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_stake_);
    }
    if (cached_has_bits & 0x00000008u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeviceTask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.DeviceTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceTask::CopyFrom(const DeviceTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.DeviceTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void DeviceTask::Swap(DeviceTask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceTask::InternalSwap(DeviceTask* other) {
  using std::swap;
  task_code_.Swap(&other->task_code_);
  start_stake_.Swap(&other->start_stake_);
  end_stake_.Swap(&other->end_stake_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceTask::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StakeDto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StakeDto::kStakeFieldNumber;
const int StakeDto::kXFieldNumber;
const int StakeDto::kYFieldNumber;
const int StakeDto::kZFieldNumber;
const int StakeDto::kGroundFieldNumber;
const int StakeDto::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StakeDto::StakeDto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.StakeDto)
}
StakeDto::StakeDto(const StakeDto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stake_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stake()) {
    stake_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stake_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.StakeDto)
}

void StakeDto::SharedCtor() {
  _cached_size_ = 0;
  stake_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&x_)) + sizeof(angle_));
}

StakeDto::~StakeDto() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.StakeDto)
  SharedDtor();
}

void StakeDto::SharedDtor() {
  stake_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StakeDto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StakeDto::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StakeDto& StakeDto::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDto();
  return *internal_default_instance();
}

StakeDto* StakeDto::New(::google::protobuf::Arena* arena) const {
  StakeDto* n = new StakeDto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StakeDto::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.StakeDto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!stake_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*stake_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&angle_) -
        reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StakeDto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.StakeDto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string stake = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stake()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stake().data(), static_cast<int>(this->stake().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.StakeDto.stake");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double ground = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_ground();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ground_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double angle = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.StakeDto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.StakeDto)
  return false;
#undef DO_
}

void StakeDto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.StakeDto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string stake = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stake().data(), static_cast<int>(this->stake().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.StakeDto.stake");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stake(), output);
  }

  // required double x = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->x(), output);
  }

  // required double y = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->y(), output);
  }

  // required double Z = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->z(), output);
  }

  // required double ground = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->ground(), output);
  }

  // required double angle = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.StakeDto)
}

::google::protobuf::uint8* StakeDto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.StakeDto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string stake = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stake().data(), static_cast<int>(this->stake().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.StakeDto.stake");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stake(), target);
  }

  // required double x = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->x(), target);
  }

  // required double y = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->y(), target);
  }

  // required double Z = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->z(), target);
  }

  // required double ground = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->ground(), target);
  }

  // required double angle = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.StakeDto)
  return target;
}

size_t StakeDto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.StakeDto)
  size_t total_size = 0;

  if (has_stake()) {
    // required string stake = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stake());
  }

  if (has_x()) {
    // required double x = 4;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 5;
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double Z = 6;
    total_size += 1 + 8;
  }

  if (has_ground()) {
    // required double ground = 8;
    total_size += 1 + 8;
  }

  if (has_angle()) {
    // required double angle = 9;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t StakeDto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.StakeDto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string stake = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stake());

    // required double x = 4;
    total_size += 1 + 8;

    // required double y = 5;
    total_size += 1 + 8;

    // required double Z = 6;
    total_size += 1 + 8;

    // required double ground = 8;
    total_size += 1 + 8;

    // required double angle = 9;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StakeDto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.StakeDto)
  GOOGLE_DCHECK_NE(&from, this);
  const StakeDto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StakeDto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.StakeDto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.StakeDto)
    MergeFrom(*source);
  }
}

void StakeDto::MergeFrom(const StakeDto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.StakeDto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_stake();
      stake_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stake_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000010u) {
      ground_ = from.ground_;
    }
    if (cached_has_bits & 0x00000020u) {
      angle_ = from.angle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StakeDto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.StakeDto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StakeDto::CopyFrom(const StakeDto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.StakeDto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StakeDto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void StakeDto::Swap(StakeDto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StakeDto::InternalSwap(StakeDto* other) {
  using std::swap;
  stake_.Swap(&other->stake_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(ground_, other->ground_);
  swap(angle_, other->angle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StakeDto::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StakeDtoList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StakeDtoList::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StakeDtoList::StakeDtoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.StakeDtoList)
}
StakeDtoList::StakeDtoList(const StakeDtoList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.StakeDtoList)
}

void StakeDtoList::SharedCtor() {
  _cached_size_ = 0;
}

StakeDtoList::~StakeDtoList() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.StakeDtoList)
  SharedDtor();
}

void StakeDtoList::SharedDtor() {
}

void StakeDtoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StakeDtoList::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StakeDtoList& StakeDtoList::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoList();
  return *internal_default_instance();
}

StakeDtoList* StakeDtoList::New(::google::protobuf::Arena* arena) const {
  StakeDtoList* n = new StakeDtoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StakeDtoList::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.StakeDtoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StakeDtoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.StakeDtoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .middle_layer_pb.StakeDto stake_dto_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.StakeDtoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.StakeDtoList)
  return false;
#undef DO_
}

void StakeDtoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.StakeDtoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.StakeDtoList)
}

::google::protobuf::uint8* StakeDtoList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.StakeDtoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.StakeDtoList)
  return target;
}

size_t StakeDtoList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.StakeDtoList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StakeDtoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.StakeDtoList)
  GOOGLE_DCHECK_NE(&from, this);
  const StakeDtoList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StakeDtoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.StakeDtoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.StakeDtoList)
    MergeFrom(*source);
  }
}

void StakeDtoList::MergeFrom(const StakeDtoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.StakeDtoList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
}

void StakeDtoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.StakeDtoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StakeDtoList::CopyFrom(const StakeDtoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.StakeDtoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StakeDtoList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  return true;
}

void StakeDtoList::Swap(StakeDtoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StakeDtoList::InternalSwap(StakeDtoList* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StakeDtoList::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StakeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StakeInfo::kStakeFieldNumber;
const int StakeInfo::kStopLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StakeInfo::StakeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.StakeInfo)
}
StakeInfo::StakeInfo(const StakeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_(from.stake_),
      stop_line_(from.stop_line_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.StakeInfo)
}

void StakeInfo::SharedCtor() {
  _cached_size_ = 0;
}

StakeInfo::~StakeInfo() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.StakeInfo)
  SharedDtor();
}

void StakeInfo::SharedDtor() {
}

void StakeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StakeInfo::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StakeInfo& StakeInfo::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeInfo();
  return *internal_default_instance();
}

StakeInfo* StakeInfo::New(::google::protobuf::Arena* arena) const {
  StakeInfo* n = new StakeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StakeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.StakeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_.Clear();
  stop_line_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StakeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.StakeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .middle_layer_pb.StakeDto stake = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string stop_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stop_line()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stop_line(this->stop_line_size() - 1).data(),
            static_cast<int>(this->stop_line(this->stop_line_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.StakeInfo.stop_line");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.StakeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.StakeInfo)
  return false;
#undef DO_
}

void StakeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.StakeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .middle_layer_pb.StakeDto stake = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stake(static_cast<int>(i)), output);
  }

  // repeated string stop_line = 2;
  for (int i = 0, n = this->stop_line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stop_line(i).data(), static_cast<int>(this->stop_line(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.StakeInfo.stop_line");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stop_line(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.StakeInfo)
}

::google::protobuf::uint8* StakeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.StakeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .middle_layer_pb.StakeDto stake = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stake(static_cast<int>(i)), deterministic, target);
  }

  // repeated string stop_line = 2;
  for (int i = 0, n = this->stop_line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stop_line(i).data(), static_cast<int>(this->stop_line(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.StakeInfo.stop_line");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stop_line(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.StakeInfo)
  return target;
}

size_t StakeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.StakeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .middle_layer_pb.StakeDto stake = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake(static_cast<int>(i)));
    }
  }

  // repeated string stop_line = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stop_line_size());
  for (int i = 0, n = this->stop_line_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stop_line(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StakeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.StakeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StakeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StakeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.StakeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.StakeInfo)
    MergeFrom(*source);
  }
}

void StakeInfo::MergeFrom(const StakeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.StakeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_.MergeFrom(from.stake_);
  stop_line_.MergeFrom(from.stop_line_);
}

void StakeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.StakeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StakeInfo::CopyFrom(const StakeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.StakeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StakeInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->stake())) return false;
  return true;
}

void StakeInfo::Swap(StakeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StakeInfo::InternalSwap(StakeInfo* other) {
  using std::swap;
  stake_.InternalSwap(&other->stake_);
  stop_line_.InternalSwap(&other->stop_line_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StakeInfo::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StakeDtoListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StakeDtoListReq::kSectionIndexFieldNumber;
const int StakeDtoListReq::kWorkTypeFieldNumber;
const int StakeDtoListReq::kStakeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StakeDtoListReq::StakeDtoListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.StakeDtoListReq)
}
StakeDtoListReq::StakeDtoListReq(const StakeDtoListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_info_(from.stake_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&section_index_, &from.section_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&work_type_) -
    reinterpret_cast<char*>(&section_index_)) + sizeof(work_type_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.StakeDtoListReq)
}

void StakeDtoListReq::SharedCtor() {
  _cached_size_ = 0;
  section_index_ = 0;
  work_type_ = 1;
}

StakeDtoListReq::~StakeDtoListReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.StakeDtoListReq)
  SharedDtor();
}

void StakeDtoListReq::SharedDtor() {
}

void StakeDtoListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StakeDtoListReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StakeDtoListReq& StakeDtoListReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListReq();
  return *internal_default_instance();
}

StakeDtoListReq* StakeDtoListReq::New(::google::protobuf::Arena* arena) const {
  StakeDtoListReq* n = new StakeDtoListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StakeDtoListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.StakeDtoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    section_index_ = 0;
    work_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StakeDtoListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.StakeDtoListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 section_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_section_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.WorkType work_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::WorkType_IsValid(value)) {
            set_work_type(static_cast< ::middle_layer_pb::WorkType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeInfo stake_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.StakeDtoListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.StakeDtoListReq)
  return false;
#undef DO_
}

void StakeDtoListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.StakeDtoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 section_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->section_index(), output);
  }

  // required .middle_layer_pb.WorkType work_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->work_type(), output);
  }

  // repeated .middle_layer_pb.StakeInfo stake_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_info(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.StakeDtoListReq)
}

::google::protobuf::uint8* StakeDtoListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.StakeDtoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 section_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->section_index(), target);
  }

  // required .middle_layer_pb.WorkType work_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->work_type(), target);
  }

  // repeated .middle_layer_pb.StakeInfo stake_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.StakeDtoListReq)
  return target;
}

size_t StakeDtoListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.StakeDtoListReq)
  size_t total_size = 0;

  if (has_section_index()) {
    // required int32 section_index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_index());
  }

  if (has_work_type()) {
    // required .middle_layer_pb.WorkType work_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->work_type());
  }

  return total_size;
}
size_t StakeDtoListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.StakeDtoListReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 section_index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_index());

    // required .middle_layer_pb.WorkType work_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->work_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeInfo stake_info = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StakeDtoListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.StakeDtoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StakeDtoListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StakeDtoListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.StakeDtoListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.StakeDtoListReq)
    MergeFrom(*source);
  }
}

void StakeDtoListReq::MergeFrom(const StakeDtoListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.StakeDtoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_info_.MergeFrom(from.stake_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      section_index_ = from.section_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      work_type_ = from.work_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StakeDtoListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.StakeDtoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StakeDtoListReq::CopyFrom(const StakeDtoListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.StakeDtoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StakeDtoListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_info())) return false;
  return true;
}

void StakeDtoListReq::Swap(StakeDtoListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StakeDtoListReq::InternalSwap(StakeDtoListReq* other) {
  using std::swap;
  stake_info_.InternalSwap(&other->stake_info_);
  swap(section_index_, other->section_index_);
  swap(work_type_, other->work_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StakeDtoListReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StakeDtoListRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StakeDtoListRes::kCodeFieldNumber;
const int StakeDtoListRes::kSectionIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StakeDtoListRes::StakeDtoListRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.StakeDtoListRes)
}
StakeDtoListRes::StakeDtoListRes(const StakeDtoListRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&section_index_) -
    reinterpret_cast<char*>(&code_)) + sizeof(section_index_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.StakeDtoListRes)
}

void StakeDtoListRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&section_index_) -
      reinterpret_cast<char*>(&code_)) + sizeof(section_index_));
}

StakeDtoListRes::~StakeDtoListRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.StakeDtoListRes)
  SharedDtor();
}

void StakeDtoListRes::SharedDtor() {
}

void StakeDtoListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StakeDtoListRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StakeDtoListRes& StakeDtoListRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsStakeDtoListRes();
  return *internal_default_instance();
}

StakeDtoListRes* StakeDtoListRes::New(::google::protobuf::Arena* arena) const {
  StakeDtoListRes* n = new StakeDtoListRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StakeDtoListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.StakeDtoListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&section_index_) -
        reinterpret_cast<char*>(&code_)) + sizeof(section_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StakeDtoListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.StakeDtoListRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 section_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_section_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.StakeDtoListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.StakeDtoListRes)
  return false;
#undef DO_
}

void StakeDtoListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.StakeDtoListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // required int32 section_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->section_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.StakeDtoListRes)
}

::google::protobuf::uint8* StakeDtoListRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.StakeDtoListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // required int32 section_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->section_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.StakeDtoListRes)
  return target;
}

size_t StakeDtoListRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.StakeDtoListRes)
  size_t total_size = 0;

  if (has_code()) {
    // required .middle_layer_pb.ErrorCode code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  if (has_section_index()) {
    // required int32 section_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_index());
  }

  return total_size;
}
size_t StakeDtoListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.StakeDtoListRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .middle_layer_pb.ErrorCode code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());

    // required int32 section_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StakeDtoListRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.StakeDtoListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const StakeDtoListRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StakeDtoListRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.StakeDtoListRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.StakeDtoListRes)
    MergeFrom(*source);
  }
}

void StakeDtoListRes::MergeFrom(const StakeDtoListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.StakeDtoListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000002u) {
      section_index_ = from.section_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StakeDtoListRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.StakeDtoListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StakeDtoListRes::CopyFrom(const StakeDtoListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.StakeDtoListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StakeDtoListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void StakeDtoListRes::Swap(StakeDtoListRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StakeDtoListRes::InternalSwap(StakeDtoListRes* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(section_index_, other->section_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StakeDtoListRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutSideLineParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutSideLineParam::kLcSpacingFieldNumber;
const int PutSideLineParam::kMeasuringSpacingFieldNumber;
const int PutSideLineParam::kSideFieldNumber;
const int PutSideLineParam::kSafetyOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutSideLineParam::PutSideLineParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPutSideLineParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PutSideLineParam)
}
PutSideLineParam::PutSideLineParam(const PutSideLineParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&safety_offset_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PutSideLineParam)
}

void PutSideLineParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safety_offset_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
}

PutSideLineParam::~PutSideLineParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PutSideLineParam)
  SharedDtor();
}

void PutSideLineParam::SharedDtor() {
}

void PutSideLineParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutSideLineParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutSideLineParam& PutSideLineParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPutSideLineParam();
  return *internal_default_instance();
}

PutSideLineParam* PutSideLineParam::New(::google::protobuf::Arena* arena) const {
  PutSideLineParam* n = new PutSideLineParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutSideLineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PutSideLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&safety_offset_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutSideLineParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PutSideLineParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 safety_offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_safety_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PutSideLineParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PutSideLineParam)
  return false;
#undef DO_
}

void PutSideLineParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PutSideLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required int32 safety_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->safety_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PutSideLineParam)
}

::google::protobuf::uint8* PutSideLineParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PutSideLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required int32 safety_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->safety_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PutSideLineParam)
  return target;
}

size_t PutSideLineParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.PutSideLineParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_safety_offset()) {
    // required int32 safety_offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());
  }

  return total_size;
}
size_t PutSideLineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PutSideLineParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 safety_offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutSideLineParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PutSideLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PutSideLineParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutSideLineParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PutSideLineParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PutSideLineParam)
    MergeFrom(*source);
  }
}

void PutSideLineParam::MergeFrom(const PutSideLineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PutSideLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000008u) {
      safety_offset_ = from.safety_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PutSideLineParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PutSideLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutSideLineParam::CopyFrom(const PutSideLineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PutSideLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutSideLineParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PutSideLineParam::Swap(PutSideLineParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutSideLineParam::InternalSwap(PutSideLineParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(side_, other->side_);
  swap(safety_offset_, other->safety_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutSideLineParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutMidLineParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutMidLineParam::kLcSpacingFieldNumber;
const int PutMidLineParam::kMeasuringSpacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutMidLineParam::PutMidLineParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPutMidLineParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PutMidLineParam)
}
PutMidLineParam::PutMidLineParam(const PutMidLineParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lcspacing_, &from.lcspacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&measuringspacing_) -
    reinterpret_cast<char*>(&lcspacing_)) + sizeof(measuringspacing_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PutMidLineParam)
}

void PutMidLineParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lcspacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&measuringspacing_) -
      reinterpret_cast<char*>(&lcspacing_)) + sizeof(measuringspacing_));
}

PutMidLineParam::~PutMidLineParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PutMidLineParam)
  SharedDtor();
}

void PutMidLineParam::SharedDtor() {
}

void PutMidLineParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutMidLineParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutMidLineParam& PutMidLineParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPutMidLineParam();
  return *internal_default_instance();
}

PutMidLineParam* PutMidLineParam::New(::google::protobuf::Arena* arena) const {
  PutMidLineParam* n = new PutMidLineParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutMidLineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PutMidLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&lcspacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&measuringspacing_) -
        reinterpret_cast<char*>(&lcspacing_)) + sizeof(measuringspacing_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutMidLineParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PutMidLineParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lcSpacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lcspacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lcspacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuringSpacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuringspacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuringspacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PutMidLineParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PutMidLineParam)
  return false;
#undef DO_
}

void PutMidLineParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PutMidLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lcSpacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lcspacing(), output);
  }

  // required int32 measuringSpacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuringspacing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PutMidLineParam)
}

::google::protobuf::uint8* PutMidLineParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PutMidLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lcSpacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lcspacing(), target);
  }

  // required int32 measuringSpacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuringspacing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PutMidLineParam)
  return target;
}

size_t PutMidLineParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.PutMidLineParam)
  size_t total_size = 0;

  if (has_lcspacing()) {
    // required int32 lcSpacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lcspacing());
  }

  if (has_measuringspacing()) {
    // required int32 measuringSpacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuringspacing());
  }

  return total_size;
}
size_t PutMidLineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PutMidLineParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 lcSpacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lcspacing());

    // required int32 measuringSpacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuringspacing());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutMidLineParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PutMidLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PutMidLineParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutMidLineParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PutMidLineParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PutMidLineParam)
    MergeFrom(*source);
  }
}

void PutMidLineParam::MergeFrom(const PutMidLineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PutMidLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lcspacing_ = from.lcspacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuringspacing_ = from.measuringspacing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PutMidLineParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PutMidLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutMidLineParam::CopyFrom(const PutMidLineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PutMidLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutMidLineParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PutMidLineParam::Swap(PutMidLineParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutMidLineParam::InternalSwap(PutMidLineParam* other) {
  using std::swap;
  swap(lcspacing_, other->lcspacing_);
  swap(measuringspacing_, other->measuringspacing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutMidLineParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutLevellingParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutLevellingParam::kLcSpacingFieldNumber;
const int PutLevellingParam::kMeasuringSpacingFieldNumber;
const int PutLevellingParam::kSideFieldNumber;
const int PutLevellingParam::kLevellingNumFieldNumber;
const int PutLevellingParam::kPressCoefficientFieldNumber;
const int PutLevellingParam::kPointDensityFieldNumber;
const int PutLevellingParam::kLayerThicknessFieldNumber;
const int PutLevellingParam::kTotalThicknessFieldNumber;
const int PutLevellingParam::kSafetyOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutLevellingParam::PutLevellingParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPutLevellingParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PutLevellingParam)
}
PutLevellingParam::PutLevellingParam(const PutLevellingParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&safety_offset_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PutLevellingParam)
}

void PutLevellingParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safety_offset_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
}

PutLevellingParam::~PutLevellingParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PutLevellingParam)
  SharedDtor();
}

void PutLevellingParam::SharedDtor() {
}

void PutLevellingParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutLevellingParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutLevellingParam& PutLevellingParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPutLevellingParam();
  return *internal_default_instance();
}

PutLevellingParam* PutLevellingParam::New(::google::protobuf::Arena* arena) const {
  PutLevellingParam* n = new PutLevellingParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutLevellingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PutLevellingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_thickness_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(total_thickness_));
  }
  safety_offset_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutLevellingParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PutLevellingParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 levelling_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_levelling_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelling_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double press_coefficient = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_press_coefficient();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &press_coefficient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double point_density = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_point_density();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &point_density_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Layer_thickness = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_layer_thickness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &layer_thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double total_thickness = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_total_thickness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 safety_offset = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_safety_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PutLevellingParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PutLevellingParam)
  return false;
#undef DO_
}

void PutLevellingParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PutLevellingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required int32 levelling_num = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->levelling_num(), output);
  }

  // required double press_coefficient = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->press_coefficient(), output);
  }

  // required double point_density = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->point_density(), output);
  }

  // required double Layer_thickness = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->layer_thickness(), output);
  }

  // required double total_thickness = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->total_thickness(), output);
  }

  // required int32 safety_offset = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->safety_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PutLevellingParam)
}

::google::protobuf::uint8* PutLevellingParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PutLevellingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required int32 levelling_num = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->levelling_num(), target);
  }

  // required double press_coefficient = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->press_coefficient(), target);
  }

  // required double point_density = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->point_density(), target);
  }

  // required double Layer_thickness = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->layer_thickness(), target);
  }

  // required double total_thickness = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->total_thickness(), target);
  }

  // required int32 safety_offset = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->safety_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PutLevellingParam)
  return target;
}

size_t PutLevellingParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.PutLevellingParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_levelling_num()) {
    // required int32 levelling_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelling_num());
  }

  if (has_press_coefficient()) {
    // required double press_coefficient = 5;
    total_size += 1 + 8;
  }

  if (has_point_density()) {
    // required double point_density = 6;
    total_size += 1 + 8;
  }

  if (has_layer_thickness()) {
    // required double Layer_thickness = 7;
    total_size += 1 + 8;
  }

  if (has_total_thickness()) {
    // required double total_thickness = 8;
    total_size += 1 + 8;
  }

  if (has_safety_offset()) {
    // required int32 safety_offset = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());
  }

  return total_size;
}
size_t PutLevellingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PutLevellingParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 levelling_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelling_num());

    // required double press_coefficient = 5;
    total_size += 1 + 8;

    // required double point_density = 6;
    total_size += 1 + 8;

    // required double Layer_thickness = 7;
    total_size += 1 + 8;

    // required double total_thickness = 8;
    total_size += 1 + 8;

    // required int32 safety_offset = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutLevellingParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PutLevellingParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PutLevellingParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutLevellingParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PutLevellingParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PutLevellingParam)
    MergeFrom(*source);
  }
}

void PutLevellingParam::MergeFrom(const PutLevellingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PutLevellingParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000008u) {
      levelling_num_ = from.levelling_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      press_coefficient_ = from.press_coefficient_;
    }
    if (cached_has_bits & 0x00000020u) {
      point_density_ = from.point_density_;
    }
    if (cached_has_bits & 0x00000040u) {
      layer_thickness_ = from.layer_thickness_;
    }
    if (cached_has_bits & 0x00000080u) {
      total_thickness_ = from.total_thickness_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_safety_offset(from.safety_offset());
  }
}

void PutLevellingParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PutLevellingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutLevellingParam::CopyFrom(const PutLevellingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PutLevellingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutLevellingParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void PutLevellingParam::Swap(PutLevellingParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutLevellingParam::InternalSwap(PutLevellingParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(side_, other->side_);
  swap(levelling_num_, other->levelling_num_);
  swap(press_coefficient_, other->press_coefficient_);
  swap(point_density_, other->point_density_);
  swap(layer_thickness_, other->layer_thickness_);
  swap(total_thickness_, other->total_thickness_);
  swap(safety_offset_, other->safety_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutLevellingParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutLaneLineParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutLaneLineParam::kLcSpacingFieldNumber;
const int PutLaneLineParam::kMeasuringSpacingFieldNumber;
const int PutLaneLineParam::kSideFieldNumber;
const int PutLaneLineParam::kLaneNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutLaneLineParam::PutLaneLineParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPutLaneLineParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PutLaneLineParam)
}
PutLaneLineParam::PutLaneLineParam(const PutLaneLineParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_num_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(lane_num_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PutLaneLineParam)
}

void PutLaneLineParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_num_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(lane_num_));
}

PutLaneLineParam::~PutLaneLineParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PutLaneLineParam)
  SharedDtor();
}

void PutLaneLineParam::SharedDtor() {
}

void PutLaneLineParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutLaneLineParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutLaneLineParam& PutLaneLineParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPutLaneLineParam();
  return *internal_default_instance();
}

PutLaneLineParam* PutLaneLineParam::New(::google::protobuf::Arena* arena) const {
  PutLaneLineParam* n = new PutLaneLineParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutLaneLineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PutLaneLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lane_num_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(lane_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutLaneLineParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PutLaneLineParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lane_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lane_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lane_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PutLaneLineParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PutLaneLineParam)
  return false;
#undef DO_
}

void PutLaneLineParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PutLaneLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required int32 lane_num = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lane_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PutLaneLineParam)
}

::google::protobuf::uint8* PutLaneLineParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PutLaneLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required int32 lane_num = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lane_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PutLaneLineParam)
  return target;
}

size_t PutLaneLineParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.PutLaneLineParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_lane_num()) {
    // required int32 lane_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lane_num());
  }

  return total_size;
}
size_t PutLaneLineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PutLaneLineParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 lane_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lane_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutLaneLineParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PutLaneLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PutLaneLineParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutLaneLineParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PutLaneLineParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PutLaneLineParam)
    MergeFrom(*source);
  }
}

void PutLaneLineParam::MergeFrom(const PutLaneLineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PutLaneLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000008u) {
      lane_num_ = from.lane_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PutLaneLineParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PutLaneLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutLaneLineParam::CopyFrom(const PutLaneLineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PutLaneLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutLaneLineParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PutLaneLineParam::Swap(PutLaneLineParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutLaneLineParam::InternalSwap(PutLaneLineParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(side_, other->side_);
  swap(lane_num_, other->lane_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutLaneLineParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutCrossSectionParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutCrossSectionParam::kLcSpacingFieldNumber;
const int PutCrossSectionParam::kMeasuringSpacingFieldNumber;
const int PutCrossSectionParam::kSideFieldNumber;
const int PutCrossSectionParam::kPointDensityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutCrossSectionParam::PutCrossSectionParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPutCrossSectionParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PutCrossSectionParam)
}
PutCrossSectionParam::PutCrossSectionParam(const PutCrossSectionParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PutCrossSectionParam)
}

void PutCrossSectionParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(side_));
}

PutCrossSectionParam::~PutCrossSectionParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PutCrossSectionParam)
  SharedDtor();
}

void PutCrossSectionParam::SharedDtor() {
}

void PutCrossSectionParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutCrossSectionParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutCrossSectionParam& PutCrossSectionParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPutCrossSectionParam();
  return *internal_default_instance();
}

PutCrossSectionParam* PutCrossSectionParam::New(::google::protobuf::Arena* arena) const {
  PutCrossSectionParam* n = new PutCrossSectionParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutCrossSectionParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PutCrossSectionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&side_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(side_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PutCrossSectionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PutCrossSectionParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double point_density = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_point_density();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &point_density_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PutCrossSectionParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PutCrossSectionParam)
  return false;
#undef DO_
}

void PutCrossSectionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PutCrossSectionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required double point_density = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->point_density(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PutCrossSectionParam)
}

::google::protobuf::uint8* PutCrossSectionParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PutCrossSectionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required double point_density = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->point_density(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PutCrossSectionParam)
  return target;
}

size_t PutCrossSectionParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.PutCrossSectionParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_point_density()) {
    // required double point_density = 4;
    total_size += 1 + 8;
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  return total_size;
}
size_t PutCrossSectionParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PutCrossSectionParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required double point_density = 4;
    total_size += 1 + 8;

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutCrossSectionParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PutCrossSectionParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PutCrossSectionParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutCrossSectionParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PutCrossSectionParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PutCrossSectionParam)
    MergeFrom(*source);
  }
}

void PutCrossSectionParam::MergeFrom(const PutCrossSectionParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PutCrossSectionParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      point_density_ = from.point_density_;
    }
    if (cached_has_bits & 0x00000008u) {
      side_ = from.side_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PutCrossSectionParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PutCrossSectionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutCrossSectionParam::CopyFrom(const PutCrossSectionParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PutCrossSectionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutCrossSectionParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PutCrossSectionParam::Swap(PutCrossSectionParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutCrossSectionParam::InternalSwap(PutCrossSectionParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(point_density_, other->point_density_);
  swap(side_, other->side_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutCrossSectionParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DrawStandardSquareParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrawStandardSquareParam::kLcSpacingFieldNumber;
const int DrawStandardSquareParam::kMeasuringSpacingFieldNumber;
const int DrawStandardSquareParam::kSideFieldNumber;
const int DrawStandardSquareParam::kSquareLengthFieldNumber;
const int DrawStandardSquareParam::kSquareWidthFieldNumber;
const int DrawStandardSquareParam::kSquareRowFieldNumber;
const int DrawStandardSquareParam::kSquareColumnsFieldNumber;
const int DrawStandardSquareParam::kRequireEarthworkFieldNumber;
const int DrawStandardSquareParam::kFillDigHeightFieldNumber;
const int DrawStandardSquareParam::kSafetyOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrawStandardSquareParam::DrawStandardSquareParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.DrawStandardSquareParam)
}
DrawStandardSquareParam::DrawStandardSquareParam(const DrawStandardSquareParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&fill_dig_height_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(fill_dig_height_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.DrawStandardSquareParam)
}

void DrawStandardSquareParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fill_dig_height_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(fill_dig_height_));
}

DrawStandardSquareParam::~DrawStandardSquareParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.DrawStandardSquareParam)
  SharedDtor();
}

void DrawStandardSquareParam::SharedDtor() {
}

void DrawStandardSquareParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DrawStandardSquareParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DrawStandardSquareParam& DrawStandardSquareParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawStandardSquareParam();
  return *internal_default_instance();
}

DrawStandardSquareParam* DrawStandardSquareParam::New(::google::protobuf::Arena* arena) const {
  DrawStandardSquareParam* n = new DrawStandardSquareParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DrawStandardSquareParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.DrawStandardSquareParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&square_columns_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(square_columns_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&safety_offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fill_dig_height_) -
        reinterpret_cast<char*>(&safety_offset_)) + sizeof(fill_dig_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DrawStandardSquareParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.DrawStandardSquareParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double square_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_square_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &square_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double square_width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_square_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &square_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 square_row = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_square_row();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &square_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 square_columns = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_square_columns();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &square_columns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double require_earthwork = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_require_earthwork();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &require_earthwork_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double fill_dig_height = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_fill_dig_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fill_dig_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 safety_offset = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_safety_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.DrawStandardSquareParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.DrawStandardSquareParam)
  return false;
#undef DO_
}

void DrawStandardSquareParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.DrawStandardSquareParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required double square_length = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->square_length(), output);
  }

  // required double square_width = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->square_width(), output);
  }

  // required int32 square_row = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->square_row(), output);
  }

  // required int32 square_columns = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->square_columns(), output);
  }

  // required double require_earthwork = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->require_earthwork(), output);
  }

  // required double fill_dig_height = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->fill_dig_height(), output);
  }

  // required int32 safety_offset = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->safety_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.DrawStandardSquareParam)
}

::google::protobuf::uint8* DrawStandardSquareParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.DrawStandardSquareParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required double square_length = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->square_length(), target);
  }

  // required double square_width = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->square_width(), target);
  }

  // required int32 square_row = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->square_row(), target);
  }

  // required int32 square_columns = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->square_columns(), target);
  }

  // required double require_earthwork = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->require_earthwork(), target);
  }

  // required double fill_dig_height = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->fill_dig_height(), target);
  }

  // required int32 safety_offset = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->safety_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.DrawStandardSquareParam)
  return target;
}

size_t DrawStandardSquareParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.DrawStandardSquareParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_square_length()) {
    // required double square_length = 4;
    total_size += 1 + 8;
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_square_row()) {
    // required int32 square_row = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->square_row());
  }

  if (has_square_width()) {
    // required double square_width = 5;
    total_size += 1 + 8;
  }

  if (has_require_earthwork()) {
    // required double require_earthwork = 8;
    total_size += 1 + 8;
  }

  if (has_square_columns()) {
    // required int32 square_columns = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->square_columns());
  }

  if (has_safety_offset()) {
    // required int32 safety_offset = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());
  }

  if (has_fill_dig_height()) {
    // required double fill_dig_height = 9;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t DrawStandardSquareParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.DrawStandardSquareParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required double square_length = 4;
    total_size += 1 + 8;

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 square_row = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->square_row());

    // required double square_width = 5;
    total_size += 1 + 8;

    // required double require_earthwork = 8;
    total_size += 1 + 8;

    // required int32 square_columns = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->square_columns());

    // required int32 safety_offset = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());

    // required double fill_dig_height = 9;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DrawStandardSquareParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.DrawStandardSquareParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DrawStandardSquareParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DrawStandardSquareParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.DrawStandardSquareParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.DrawStandardSquareParam)
    MergeFrom(*source);
  }
}

void DrawStandardSquareParam::MergeFrom(const DrawStandardSquareParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.DrawStandardSquareParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      square_length_ = from.square_length_;
    }
    if (cached_has_bits & 0x00000008u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000010u) {
      square_row_ = from.square_row_;
    }
    if (cached_has_bits & 0x00000020u) {
      square_width_ = from.square_width_;
    }
    if (cached_has_bits & 0x00000040u) {
      require_earthwork_ = from.require_earthwork_;
    }
    if (cached_has_bits & 0x00000080u) {
      square_columns_ = from.square_columns_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      safety_offset_ = from.safety_offset_;
    }
    if (cached_has_bits & 0x00000200u) {
      fill_dig_height_ = from.fill_dig_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrawStandardSquareParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.DrawStandardSquareParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrawStandardSquareParam::CopyFrom(const DrawStandardSquareParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.DrawStandardSquareParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrawStandardSquareParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  return true;
}

void DrawStandardSquareParam::Swap(DrawStandardSquareParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrawStandardSquareParam::InternalSwap(DrawStandardSquareParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(square_length_, other->square_length_);
  swap(side_, other->side_);
  swap(square_row_, other->square_row_);
  swap(square_width_, other->square_width_);
  swap(require_earthwork_, other->require_earthwork_);
  swap(square_columns_, other->square_columns_);
  swap(safety_offset_, other->safety_offset_);
  swap(fill_dig_height_, other->fill_dig_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DrawStandardSquareParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DrawSideLineParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrawSideLineParam::kLcSpacingFieldNumber;
const int DrawSideLineParam::kMeasuringSpacingFieldNumber;
const int DrawSideLineParam::kSideFieldNumber;
const int DrawSideLineParam::kSafetyOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrawSideLineParam::DrawSideLineParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawSideLineParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.DrawSideLineParam)
}
DrawSideLineParam::DrawSideLineParam(const DrawSideLineParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&safety_offset_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.DrawSideLineParam)
}

void DrawSideLineParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safety_offset_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
}

DrawSideLineParam::~DrawSideLineParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.DrawSideLineParam)
  SharedDtor();
}

void DrawSideLineParam::SharedDtor() {
}

void DrawSideLineParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DrawSideLineParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DrawSideLineParam& DrawSideLineParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawSideLineParam();
  return *internal_default_instance();
}

DrawSideLineParam* DrawSideLineParam::New(::google::protobuf::Arena* arena) const {
  DrawSideLineParam* n = new DrawSideLineParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DrawSideLineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.DrawSideLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&safety_offset_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(safety_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DrawSideLineParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.DrawSideLineParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 safety_offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_safety_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.DrawSideLineParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.DrawSideLineParam)
  return false;
#undef DO_
}

void DrawSideLineParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.DrawSideLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required int32 safety_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->safety_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.DrawSideLineParam)
}

::google::protobuf::uint8* DrawSideLineParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.DrawSideLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required int32 safety_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->safety_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.DrawSideLineParam)
  return target;
}

size_t DrawSideLineParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.DrawSideLineParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_safety_offset()) {
    // required int32 safety_offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());
  }

  return total_size;
}
size_t DrawSideLineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.DrawSideLineParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 safety_offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DrawSideLineParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.DrawSideLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DrawSideLineParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DrawSideLineParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.DrawSideLineParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.DrawSideLineParam)
    MergeFrom(*source);
  }
}

void DrawSideLineParam::MergeFrom(const DrawSideLineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.DrawSideLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000008u) {
      safety_offset_ = from.safety_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrawSideLineParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.DrawSideLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrawSideLineParam::CopyFrom(const DrawSideLineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.DrawSideLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrawSideLineParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void DrawSideLineParam::Swap(DrawSideLineParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrawSideLineParam::InternalSwap(DrawSideLineParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(side_, other->side_);
  swap(safety_offset_, other->safety_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DrawSideLineParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DrawMidLineParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrawMidLineParam::kLcSpacingFieldNumber;
const int DrawMidLineParam::kMeasuringSpacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrawMidLineParam::DrawMidLineParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawMidLineParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.DrawMidLineParam)
}
DrawMidLineParam::DrawMidLineParam(const DrawMidLineParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lcspacing_, &from.lcspacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&measuringspacing_) -
    reinterpret_cast<char*>(&lcspacing_)) + sizeof(measuringspacing_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.DrawMidLineParam)
}

void DrawMidLineParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lcspacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&measuringspacing_) -
      reinterpret_cast<char*>(&lcspacing_)) + sizeof(measuringspacing_));
}

DrawMidLineParam::~DrawMidLineParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.DrawMidLineParam)
  SharedDtor();
}

void DrawMidLineParam::SharedDtor() {
}

void DrawMidLineParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DrawMidLineParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DrawMidLineParam& DrawMidLineParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawMidLineParam();
  return *internal_default_instance();
}

DrawMidLineParam* DrawMidLineParam::New(::google::protobuf::Arena* arena) const {
  DrawMidLineParam* n = new DrawMidLineParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DrawMidLineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.DrawMidLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&lcspacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&measuringspacing_) -
        reinterpret_cast<char*>(&lcspacing_)) + sizeof(measuringspacing_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DrawMidLineParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.DrawMidLineParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lcSpacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lcspacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lcspacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuringSpacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuringspacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuringspacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.DrawMidLineParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.DrawMidLineParam)
  return false;
#undef DO_
}

void DrawMidLineParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.DrawMidLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lcSpacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lcspacing(), output);
  }

  // required int32 measuringSpacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuringspacing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.DrawMidLineParam)
}

::google::protobuf::uint8* DrawMidLineParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.DrawMidLineParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lcSpacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lcspacing(), target);
  }

  // required int32 measuringSpacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuringspacing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.DrawMidLineParam)
  return target;
}

size_t DrawMidLineParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.DrawMidLineParam)
  size_t total_size = 0;

  if (has_lcspacing()) {
    // required int32 lcSpacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lcspacing());
  }

  if (has_measuringspacing()) {
    // required int32 measuringSpacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuringspacing());
  }

  return total_size;
}
size_t DrawMidLineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.DrawMidLineParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 lcSpacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lcspacing());

    // required int32 measuringSpacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuringspacing());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DrawMidLineParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.DrawMidLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DrawMidLineParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DrawMidLineParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.DrawMidLineParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.DrawMidLineParam)
    MergeFrom(*source);
  }
}

void DrawMidLineParam::MergeFrom(const DrawMidLineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.DrawMidLineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lcspacing_ = from.lcspacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuringspacing_ = from.measuringspacing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrawMidLineParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.DrawMidLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrawMidLineParam::CopyFrom(const DrawMidLineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.DrawMidLineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrawMidLineParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DrawMidLineParam::Swap(DrawMidLineParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrawMidLineParam::InternalSwap(DrawMidLineParam* other) {
  using std::swap;
  swap(lcspacing_, other->lcspacing_);
  swap(measuringspacing_, other->measuringspacing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DrawMidLineParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DrawStakesHelpParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrawStakesHelpParam::kLcSpacingFieldNumber;
const int DrawStakesHelpParam::kMeasuringSpacingFieldNumber;
const int DrawStakesHelpParam::kSideFieldNumber;
const int DrawStakesHelpParam::kLevellingNumFieldNumber;
const int DrawStakesHelpParam::kPressCoefficientFieldNumber;
const int DrawStakesHelpParam::kLayerThicknessFieldNumber;
const int DrawStakesHelpParam::kTotalThicknessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrawStakesHelpParam::DrawStakesHelpParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawStakesHelpParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.DrawStakesHelpParam)
}
DrawStakesHelpParam::DrawStakesHelpParam(const DrawStakesHelpParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lc_spacing_, &from.lc_spacing_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_thickness_) -
    reinterpret_cast<char*>(&lc_spacing_)) + sizeof(total_thickness_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.DrawStakesHelpParam)
}

void DrawStakesHelpParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lc_spacing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_thickness_) -
      reinterpret_cast<char*>(&lc_spacing_)) + sizeof(total_thickness_));
}

DrawStakesHelpParam::~DrawStakesHelpParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.DrawStakesHelpParam)
  SharedDtor();
}

void DrawStakesHelpParam::SharedDtor() {
}

void DrawStakesHelpParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DrawStakesHelpParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DrawStakesHelpParam& DrawStakesHelpParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsDrawStakesHelpParam();
  return *internal_default_instance();
}

DrawStakesHelpParam* DrawStakesHelpParam::New(::google::protobuf::Arena* arena) const {
  DrawStakesHelpParam* n = new DrawStakesHelpParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DrawStakesHelpParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.DrawStakesHelpParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&lc_spacing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_thickness_) -
        reinterpret_cast<char*>(&lc_spacing_)) + sizeof(total_thickness_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DrawStakesHelpParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.DrawStakesHelpParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lc_spacing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lc_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 measuring_spacing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_measuring_spacing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &measuring_spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 levelling_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_levelling_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelling_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double press_coefficient = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_press_coefficient();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &press_coefficient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Layer_thickness = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_layer_thickness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &layer_thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double total_thickness = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_total_thickness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.DrawStakesHelpParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.DrawStakesHelpParam)
  return false;
#undef DO_
}

void DrawStakesHelpParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.DrawStakesHelpParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lc_spacing(), output);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->measuring_spacing(), output);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->side(), output);
  }

  // required int32 levelling_num = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->levelling_num(), output);
  }

  // required double press_coefficient = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->press_coefficient(), output);
  }

  // required double Layer_thickness = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->layer_thickness(), output);
  }

  // required double total_thickness = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->total_thickness(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.DrawStakesHelpParam)
}

::google::protobuf::uint8* DrawStakesHelpParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.DrawStakesHelpParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lc_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lc_spacing(), target);
  }

  // required int32 measuring_spacing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->measuring_spacing(), target);
  }

  // required int32 side = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->side(), target);
  }

  // required int32 levelling_num = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->levelling_num(), target);
  }

  // required double press_coefficient = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->press_coefficient(), target);
  }

  // required double Layer_thickness = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->layer_thickness(), target);
  }

  // required double total_thickness = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->total_thickness(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.DrawStakesHelpParam)
  return target;
}

size_t DrawStakesHelpParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.DrawStakesHelpParam)
  size_t total_size = 0;

  if (has_lc_spacing()) {
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());
  }

  if (has_measuring_spacing()) {
    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());
  }

  if (has_side()) {
    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_levelling_num()) {
    // required int32 levelling_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelling_num());
  }

  if (has_press_coefficient()) {
    // required double press_coefficient = 5;
    total_size += 1 + 8;
  }

  if (has_layer_thickness()) {
    // required double Layer_thickness = 6;
    total_size += 1 + 8;
  }

  if (has_total_thickness()) {
    // required double total_thickness = 7;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t DrawStakesHelpParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.DrawStakesHelpParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required int32 lc_spacing = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_spacing());

    // required int32 measuring_spacing = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->measuring_spacing());

    // required int32 side = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 levelling_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelling_num());

    // required double press_coefficient = 5;
    total_size += 1 + 8;

    // required double Layer_thickness = 6;
    total_size += 1 + 8;

    // required double total_thickness = 7;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DrawStakesHelpParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.DrawStakesHelpParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DrawStakesHelpParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DrawStakesHelpParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.DrawStakesHelpParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.DrawStakesHelpParam)
    MergeFrom(*source);
  }
}

void DrawStakesHelpParam::MergeFrom(const DrawStakesHelpParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.DrawStakesHelpParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      lc_spacing_ = from.lc_spacing_;
    }
    if (cached_has_bits & 0x00000002u) {
      measuring_spacing_ = from.measuring_spacing_;
    }
    if (cached_has_bits & 0x00000004u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000008u) {
      levelling_num_ = from.levelling_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      press_coefficient_ = from.press_coefficient_;
    }
    if (cached_has_bits & 0x00000020u) {
      layer_thickness_ = from.layer_thickness_;
    }
    if (cached_has_bits & 0x00000040u) {
      total_thickness_ = from.total_thickness_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrawStakesHelpParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.DrawStakesHelpParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrawStakesHelpParam::CopyFrom(const DrawStakesHelpParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.DrawStakesHelpParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrawStakesHelpParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void DrawStakesHelpParam::Swap(DrawStakesHelpParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrawStakesHelpParam::InternalSwap(DrawStakesHelpParam* other) {
  using std::swap;
  swap(lc_spacing_, other->lc_spacing_);
  swap(measuring_spacing_, other->measuring_spacing_);
  swap(side_, other->side_);
  swap(levelling_num_, other->levelling_num_);
  swap(press_coefficient_, other->press_coefficient_);
  swap(layer_thickness_, other->layer_thickness_);
  swap(total_thickness_, other->total_thickness_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DrawStakesHelpParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkEndNotify::InitAsDefaultInstance() {
  ::middle_layer_pb::_WorkEndNotify_default_instance_._instance.get_mutable()->device_task_ = const_cast< ::middle_layer_pb::DeviceTask*>(
      ::middle_layer_pb::DeviceTask::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkEndNotify::kIdFieldNumber;
const int WorkEndNotify::kDeviceTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkEndNotify::WorkEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkEndNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.WorkEndNotify)
}
WorkEndNotify::WorkEndNotify(const WorkEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_device_task()) {
    device_task_ = new ::middle_layer_pb::DeviceTask(*from.device_task_);
  } else {
    device_task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.WorkEndNotify)
}

void WorkEndNotify::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_task_ = NULL;
}

WorkEndNotify::~WorkEndNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.WorkEndNotify)
  SharedDtor();
}

void WorkEndNotify::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_task_;
}

void WorkEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkEndNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkEndNotify& WorkEndNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsWorkEndNotify();
  return *internal_default_instance();
}

WorkEndNotify* WorkEndNotify::New(::google::protobuf::Arena* arena) const {
  WorkEndNotify* n = new WorkEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.WorkEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(device_task_ != NULL);
      device_task_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorkEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.WorkEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.WorkEndNotify.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DeviceTask device_task = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.WorkEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.WorkEndNotify)
  return false;
#undef DO_
}

void WorkEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.WorkEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WorkEndNotify.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .middle_layer_pb.DeviceTask device_task = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->device_task_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.WorkEndNotify)
}

::google::protobuf::uint8* WorkEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.WorkEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WorkEndNotify.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .middle_layer_pb.DeviceTask device_task = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->device_task_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.WorkEndNotify)
  return target;
}

size_t WorkEndNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.WorkEndNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_device_task()) {
    // required .middle_layer_pb.DeviceTask device_task = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_task_);
  }

  return total_size;
}
size_t WorkEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.WorkEndNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.DeviceTask device_task = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_task_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.WorkEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.WorkEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.WorkEndNotify)
    MergeFrom(*source);
  }
}

void WorkEndNotify::MergeFrom(const WorkEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.WorkEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_device_task()->::middle_layer_pb::DeviceTask::MergeFrom(from.device_task());
    }
  }
}

void WorkEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.WorkEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkEndNotify::CopyFrom(const WorkEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.WorkEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkEndNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_device_task()) {
    if (!this->device_task_->IsInitialized()) return false;
  }
  return true;
}

void WorkEndNotify::Swap(WorkEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkEndNotify::InternalSwap(WorkEndNotify* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(device_task_, other->device_task_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkEndNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationRobotReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationRobotReq::kIdFieldNumber;
const int OperationRobotReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationRobotReq::OperationRobotReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsOperationRobotReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.OperationRobotReq)
}
OperationRobotReq::OperationRobotReq(const OperationRobotReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.OperationRobotReq)
}

void OperationRobotReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 255;
}

OperationRobotReq::~OperationRobotReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.OperationRobotReq)
  SharedDtor();
}

void OperationRobotReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationRobotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationRobotReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationRobotReq& OperationRobotReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsOperationRobotReq();
  return *internal_default_instance();
}

OperationRobotReq* OperationRobotReq::New(::google::protobuf::Arena* arena) const {
  OperationRobotReq* n = new OperationRobotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationRobotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.OperationRobotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    type_ = 255;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OperationRobotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.OperationRobotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.OperationRobotReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.enOperationType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::enOperationType_IsValid(value)) {
            set_type(static_cast< ::middle_layer_pb::enOperationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.OperationRobotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.OperationRobotReq)
  return false;
#undef DO_
}

void OperationRobotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.OperationRobotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.OperationRobotReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .middle_layer_pb.enOperationType type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.OperationRobotReq)
}

::google::protobuf::uint8* OperationRobotReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.OperationRobotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.OperationRobotReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .middle_layer_pb.enOperationType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.OperationRobotReq)
  return target;
}

size_t OperationRobotReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.OperationRobotReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_type()) {
    // required .middle_layer_pb.enOperationType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t OperationRobotReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.OperationRobotReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.enOperationType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationRobotReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.OperationRobotReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationRobotReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationRobotReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.OperationRobotReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.OperationRobotReq)
    MergeFrom(*source);
  }
}

void OperationRobotReq::MergeFrom(const OperationRobotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.OperationRobotReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OperationRobotReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.OperationRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationRobotReq::CopyFrom(const OperationRobotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.OperationRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationRobotReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OperationRobotReq::Swap(OperationRobotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationRobotReq::InternalSwap(OperationRobotReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationRobotReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationRobotRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationRobotRes::kCodeFieldNumber;
const int OperationRobotRes::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationRobotRes::OperationRobotRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsOperationRobotRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.OperationRobotRes)
}
OperationRobotRes::OperationRobotRes(const OperationRobotRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&code_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.OperationRobotRes)
}

void OperationRobotRes::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
  type_ = 255;
}

OperationRobotRes::~OperationRobotRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.OperationRobotRes)
  SharedDtor();
}

void OperationRobotRes::SharedDtor() {
}

void OperationRobotRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationRobotRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationRobotRes& OperationRobotRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsOperationRobotRes();
  return *internal_default_instance();
}

OperationRobotRes* OperationRobotRes::New(::google::protobuf::Arena* arena) const {
  OperationRobotRes* n = new OperationRobotRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationRobotRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.OperationRobotRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    code_ = 0;
    type_ = 255;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OperationRobotRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.OperationRobotRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .middle_layer_pb.ErrorCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.enOperationType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::enOperationType_IsValid(value)) {
            set_type(static_cast< ::middle_layer_pb::enOperationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.OperationRobotRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.OperationRobotRes)
  return false;
#undef DO_
}

void OperationRobotRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.OperationRobotRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional .middle_layer_pb.enOperationType type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.OperationRobotRes)
}

::google::protobuf::uint8* OperationRobotRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.OperationRobotRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .middle_layer_pb.ErrorCode code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional .middle_layer_pb.enOperationType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.OperationRobotRes)
  return target;
}

size_t OperationRobotRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.OperationRobotRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .middle_layer_pb.ErrorCode code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }

    // optional .middle_layer_pb.enOperationType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationRobotRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.OperationRobotRes)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationRobotRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationRobotRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.OperationRobotRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.OperationRobotRes)
    MergeFrom(*source);
  }
}

void OperationRobotRes::MergeFrom(const OperationRobotRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.OperationRobotRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OperationRobotRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.OperationRobotRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationRobotRes::CopyFrom(const OperationRobotRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.OperationRobotRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationRobotRes::IsInitialized() const {
  return true;
}

void OperationRobotRes::Swap(OperationRobotRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationRobotRes::InternalSwap(OperationRobotRes* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationRobotRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSideStakeReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalSideStakeReq_default_instance_._instance.get_mutable()->stake_dto_ = const_cast< ::middle_layer_pb::StakeDto*>(
      ::middle_layer_pb::StakeDto::internal_default_instance());
  ::middle_layer_pb::_CalSideStakeReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSideStakeReq::kIdFieldNumber;
const int CalSideStakeReq::kTaskCodeFieldNumber;
const int CalSideStakeReq::kStakeDtoFieldNumber;
const int CalSideStakeReq::kPtFieldNumber;
const int CalSideStakeReq::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSideStakeReq::CalSideStakeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSideStakeReq)
}
CalSideStakeReq::CalSideStakeReq(const CalSideStakeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_stake_dto()) {
    stake_dto_ = new ::middle_layer_pb::StakeDto(*from.stake_dto_);
  } else {
    stake_dto_ = NULL;
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  side_ = from.side_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSideStakeReq)
}

void CalSideStakeReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stake_dto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&stake_dto_)) + sizeof(side_));
}

CalSideStakeReq::~CalSideStakeReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSideStakeReq)
  SharedDtor();
}

void CalSideStakeReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stake_dto_;
  if (this != internal_default_instance()) delete pt_;
}

void CalSideStakeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSideStakeReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSideStakeReq& CalSideStakeReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeReq();
  return *internal_default_instance();
}

CalSideStakeReq* CalSideStakeReq::New(::google::protobuf::Arena* arena) const {
  CalSideStakeReq* n = new CalSideStakeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSideStakeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSideStakeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(stake_dto_ != NULL);
      stake_dto_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  side_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSideStakeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSideStakeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSideStakeReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSideStakeReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.StakeDto stake_dto = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stake_dto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSideStakeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSideStakeReq)
  return false;
#undef DO_
}

void CalSideStakeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSideStakeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stake_dto_, output);
  }

  // required .middle_layer_pb.PointLLH pt = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pt_, output);
  }

  // required int32 side = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->side(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSideStakeReq)
}

::google::protobuf::uint8* CalSideStakeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSideStakeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->stake_dto_, deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->pt_, deterministic, target);
  }

  // required int32 side = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->side(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSideStakeReq)
  return target;
}

size_t CalSideStakeReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalSideStakeReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_stake_dto()) {
    // required .middle_layer_pb.StakeDto stake_dto = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  if (has_side()) {
    // required int32 side = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  return total_size;
}
size_t CalSideStakeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSideStakeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.StakeDto stake_dto = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);

    // required .middle_layer_pb.PointLLH pt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

    // required int32 side = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSideStakeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSideStakeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSideStakeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSideStakeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSideStakeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSideStakeReq)
    MergeFrom(*source);
  }
}

void CalSideStakeReq::MergeFrom(const CalSideStakeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSideStakeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_stake_dto()->::middle_layer_pb::StakeDto::MergeFrom(from.stake_dto());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
    if (cached_has_bits & 0x00000010u) {
      side_ = from.side_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSideStakeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSideStakeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSideStakeReq::CopyFrom(const CalSideStakeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSideStakeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSideStakeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_stake_dto()) {
    if (!this->stake_dto_->IsInitialized()) return false;
  }
  return true;
}

void CalSideStakeReq::Swap(CalSideStakeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSideStakeReq::InternalSwap(CalSideStakeReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(stake_dto_, other->stake_dto_);
  swap(pt_, other->pt_);
  swap(side_, other->side_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSideStakeReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSideStakeRes::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalSideStakeRes_default_instance_._instance.get_mutable()->stake_dto_ = const_cast< ::middle_layer_pb::StakeDto*>(
      ::middle_layer_pb::StakeDto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSideStakeRes::kIdFieldNumber;
const int CalSideStakeRes::kCodeFieldNumber;
const int CalSideStakeRes::kStakeDtoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSideStakeRes::CalSideStakeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSideStakeRes)
}
CalSideStakeRes::CalSideStakeRes(const CalSideStakeRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_stake_dto()) {
    stake_dto_ = new ::middle_layer_pb::StakeDto(*from.stake_dto_);
  } else {
    stake_dto_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSideStakeRes)
}

void CalSideStakeRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stake_dto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&stake_dto_)) + sizeof(code_));
}

CalSideStakeRes::~CalSideStakeRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSideStakeRes)
  SharedDtor();
}

void CalSideStakeRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stake_dto_;
}

void CalSideStakeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSideStakeRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSideStakeRes& CalSideStakeRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeRes();
  return *internal_default_instance();
}

CalSideStakeRes* CalSideStakeRes::New(::google::protobuf::Arena* arena) const {
  CalSideStakeRes* n = new CalSideStakeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSideStakeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSideStakeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stake_dto_ != NULL);
      stake_dto_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSideStakeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSideStakeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSideStakeRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.StakeDto stake_dto = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stake_dto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSideStakeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSideStakeRes)
  return false;
#undef DO_
}

void CalSideStakeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSideStakeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stake_dto_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSideStakeRes)
}

::google::protobuf::uint8* CalSideStakeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSideStakeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->stake_dto_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSideStakeRes)
  return target;
}

size_t CalSideStakeRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalSideStakeRes)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_stake_dto()) {
    // required .middle_layer_pb.StakeDto stake_dto = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);
  }

  return total_size;
}
size_t CalSideStakeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSideStakeRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.StakeDto stake_dto = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSideStakeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSideStakeRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSideStakeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSideStakeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSideStakeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSideStakeRes)
    MergeFrom(*source);
  }
}

void CalSideStakeRes::MergeFrom(const CalSideStakeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSideStakeRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stake_dto()->::middle_layer_pb::StakeDto::MergeFrom(from.stake_dto());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSideStakeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSideStakeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSideStakeRes::CopyFrom(const CalSideStakeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSideStakeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSideStakeRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_stake_dto()) {
    if (!this->stake_dto_->IsInitialized()) return false;
  }
  return true;
}

void CalSideStakeRes::Swap(CalSideStakeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSideStakeRes::InternalSwap(CalSideStakeRes* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(stake_dto_, other->stake_dto_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSideStakeRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSideStakeListReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalSideStakeListReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSideStakeListReq::kIdFieldNumber;
const int CalSideStakeListReq::kTaskCodeFieldNumber;
const int CalSideStakeListReq::kStakeDtoListFieldNumber;
const int CalSideStakeListReq::kPtFieldNumber;
const int CalSideStakeListReq::kSideFieldNumber;
const int CalSideStakeListReq::kSafetyOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSideStakeListReq::CalSideStakeListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSideStakeListReq)
}
CalSideStakeListReq::CalSideStakeListReq(const CalSideStakeListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  ::memcpy(&side_, &from.side_,
    static_cast<size_t>(reinterpret_cast<char*>(&safety_offset_) -
    reinterpret_cast<char*>(&side_)) + sizeof(safety_offset_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSideStakeListReq)
}

void CalSideStakeListReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safety_offset_) -
      reinterpret_cast<char*>(&pt_)) + sizeof(safety_offset_));
}

CalSideStakeListReq::~CalSideStakeListReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSideStakeListReq)
  SharedDtor();
}

void CalSideStakeListReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pt_;
}

void CalSideStakeListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSideStakeListReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSideStakeListReq& CalSideStakeListReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeListReq();
  return *internal_default_instance();
}

CalSideStakeListReq* CalSideStakeListReq::New(::google::protobuf::Arena* arena) const {
  CalSideStakeListReq* n = new CalSideStakeListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSideStakeListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSideStakeListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&side_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&safety_offset_) -
        reinterpret_cast<char*>(&side_)) + sizeof(safety_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSideStakeListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSideStakeListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSideStakeListReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSideStakeListReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 safety_offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_safety_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSideStakeListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSideStakeListReq)
  return false;
#undef DO_
}

void CalSideStakeListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSideStakeListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeListReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeListReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_list(static_cast<int>(i)), output);
  }

  // required .middle_layer_pb.PointLLH pt = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pt_, output);
  }

  // required int32 side = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->side(), output);
  }

  // required int32 safety_offset = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->safety_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSideStakeListReq)
}

::google::protobuf::uint8* CalSideStakeListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSideStakeListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeListReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeListReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->pt_, deterministic, target);
  }

  // required int32 side = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->side(), target);
  }

  // required int32 safety_offset = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->safety_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSideStakeListReq)
  return target;
}

size_t CalSideStakeListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalSideStakeListReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  if (has_side()) {
    // required int32 side = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  if (has_safety_offset()) {
    // required int32 safety_offset = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());
  }

  return total_size;
}
size_t CalSideStakeListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSideStakeListReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.PointLLH pt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

    // required int32 side = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

    // required int32 safety_offset = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safety_offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSideStakeListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSideStakeListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSideStakeListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSideStakeListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSideStakeListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSideStakeListReq)
    MergeFrom(*source);
  }
}

void CalSideStakeListReq::MergeFrom(const CalSideStakeListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSideStakeListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
    if (cached_has_bits & 0x00000008u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000010u) {
      safety_offset_ = from.safety_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSideStakeListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSideStakeListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSideStakeListReq::CopyFrom(const CalSideStakeListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSideStakeListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSideStakeListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  return true;
}

void CalSideStakeListReq::Swap(CalSideStakeListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSideStakeListReq::InternalSwap(CalSideStakeListReq* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(pt_, other->pt_);
  swap(side_, other->side_);
  swap(safety_offset_, other->safety_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSideStakeListReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSideStakeListRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSideStakeListRes::kIdFieldNumber;
const int CalSideStakeListRes::kCodeFieldNumber;
const int CalSideStakeListRes::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSideStakeListRes::CalSideStakeListRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeListRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSideStakeListRes)
}
CalSideStakeListRes::CalSideStakeListRes(const CalSideStakeListRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSideStakeListRes)
}

void CalSideStakeListRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalSideStakeListRes::~CalSideStakeListRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSideStakeListRes)
  SharedDtor();
}

void CalSideStakeListRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalSideStakeListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSideStakeListRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSideStakeListRes& CalSideStakeListRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSideStakeListRes();
  return *internal_default_instance();
}

CalSideStakeListRes* CalSideStakeListRes::New(::google::protobuf::Arena* arena) const {
  CalSideStakeListRes* n = new CalSideStakeListRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSideStakeListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSideStakeListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSideStakeListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSideStakeListRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSideStakeListRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSideStakeListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSideStakeListRes)
  return false;
#undef DO_
}

void CalSideStakeListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSideStakeListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeListRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSideStakeListRes)
}

::google::protobuf::uint8* CalSideStakeListRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSideStakeListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSideStakeListRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSideStakeListRes)
  return target;
}

size_t CalSideStakeListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSideStakeListRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSideStakeListRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSideStakeListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSideStakeListRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSideStakeListRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSideStakeListRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSideStakeListRes)
    MergeFrom(*source);
  }
}

void CalSideStakeListRes::MergeFrom(const CalSideStakeListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSideStakeListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSideStakeListRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSideStakeListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSideStakeListRes::CopyFrom(const CalSideStakeListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSideStakeListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSideStakeListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  return true;
}

void CalSideStakeListRes::Swap(CalSideStakeListRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSideStakeListRes::InternalSwap(CalSideStakeListRes* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSideStakeListRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalLaneStakeListRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalLaneStakeListRes::kIdFieldNumber;
const int CalLaneStakeListRes::kCodeFieldNumber;
const int CalLaneStakeListRes::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalLaneStakeListRes::CalLaneStakeListRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLaneStakeListRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalLaneStakeListRes)
}
CalLaneStakeListRes::CalLaneStakeListRes(const CalLaneStakeListRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalLaneStakeListRes)
}

void CalLaneStakeListRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalLaneStakeListRes::~CalLaneStakeListRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalLaneStakeListRes)
  SharedDtor();
}

void CalLaneStakeListRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalLaneStakeListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalLaneStakeListRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalLaneStakeListRes& CalLaneStakeListRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLaneStakeListRes();
  return *internal_default_instance();
}

CalLaneStakeListRes* CalLaneStakeListRes::New(::google::protobuf::Arena* arena) const {
  CalLaneStakeListRes* n = new CalLaneStakeListRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalLaneStakeListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalLaneStakeListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalLaneStakeListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalLaneStakeListRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalLaneStakeListRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalLaneStakeListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalLaneStakeListRes)
  return false;
#undef DO_
}

void CalLaneStakeListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalLaneStakeListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLaneStakeListRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalLaneStakeListRes)
}

::google::protobuf::uint8* CalLaneStakeListRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalLaneStakeListRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLaneStakeListRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalLaneStakeListRes)
  return target;
}

size_t CalLaneStakeListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalLaneStakeListRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalLaneStakeListRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalLaneStakeListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalLaneStakeListRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalLaneStakeListRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalLaneStakeListRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalLaneStakeListRes)
    MergeFrom(*source);
  }
}

void CalLaneStakeListRes::MergeFrom(const CalLaneStakeListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalLaneStakeListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalLaneStakeListRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalLaneStakeListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalLaneStakeListRes::CopyFrom(const CalLaneStakeListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalLaneStakeListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalLaneStakeListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  return true;
}

void CalLaneStakeListRes::Swap(CalLaneStakeListRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalLaneStakeListRes::InternalSwap(CalLaneStakeListRes* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalLaneStakeListRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalLaneStakeListReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalLaneStakeListReq_default_instance_._instance.get_mutable()->put_lane_line_param_ = const_cast< ::middle_layer_pb::PutLaneLineParam*>(
      ::middle_layer_pb::PutLaneLineParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalLaneStakeListReq::kIdFieldNumber;
const int CalLaneStakeListReq::kTaskCodeFieldNumber;
const int CalLaneStakeListReq::kStakeDtoListFieldNumber;
const int CalLaneStakeListReq::kPutLaneLineParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalLaneStakeListReq::CalLaneStakeListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLaneStakeListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalLaneStakeListReq)
}
CalLaneStakeListReq::CalLaneStakeListReq(const CalLaneStakeListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_put_lane_line_param()) {
    put_lane_line_param_ = new ::middle_layer_pb::PutLaneLineParam(*from.put_lane_line_param_);
  } else {
    put_lane_line_param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalLaneStakeListReq)
}

void CalLaneStakeListReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  put_lane_line_param_ = NULL;
}

CalLaneStakeListReq::~CalLaneStakeListReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalLaneStakeListReq)
  SharedDtor();
}

void CalLaneStakeListReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete put_lane_line_param_;
}

void CalLaneStakeListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalLaneStakeListReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalLaneStakeListReq& CalLaneStakeListReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLaneStakeListReq();
  return *internal_default_instance();
}

CalLaneStakeListReq* CalLaneStakeListReq::New(::google::protobuf::Arena* arena) const {
  CalLaneStakeListReq* n = new CalLaneStakeListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalLaneStakeListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalLaneStakeListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(put_lane_line_param_ != NULL);
      put_lane_line_param_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalLaneStakeListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalLaneStakeListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalLaneStakeListReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalLaneStakeListReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_lane_line_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalLaneStakeListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalLaneStakeListReq)
  return false;
#undef DO_
}

void CalLaneStakeListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalLaneStakeListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLaneStakeListReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLaneStakeListReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_list(static_cast<int>(i)), output);
  }

  // required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->put_lane_line_param_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalLaneStakeListReq)
}

::google::protobuf::uint8* CalLaneStakeListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalLaneStakeListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLaneStakeListReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLaneStakeListReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  // required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->put_lane_line_param_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalLaneStakeListReq)
  return target;
}

size_t CalLaneStakeListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalLaneStakeListReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_put_lane_line_param()) {
    // required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_lane_line_param_);
  }

  return total_size;
}
size_t CalLaneStakeListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalLaneStakeListReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.PutLaneLineParam put_lane_line_param = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_lane_line_param_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalLaneStakeListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalLaneStakeListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalLaneStakeListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalLaneStakeListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalLaneStakeListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalLaneStakeListReq)
    MergeFrom(*source);
  }
}

void CalLaneStakeListReq::MergeFrom(const CalLaneStakeListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalLaneStakeListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_put_lane_line_param()->::middle_layer_pb::PutLaneLineParam::MergeFrom(from.put_lane_line_param());
    }
  }
}

void CalLaneStakeListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalLaneStakeListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalLaneStakeListReq::CopyFrom(const CalLaneStakeListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalLaneStakeListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalLaneStakeListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  if (has_put_lane_line_param()) {
    if (!this->put_lane_line_param_->IsInitialized()) return false;
  }
  return true;
}

void CalLaneStakeListReq::Swap(CalLaneStakeListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalLaneStakeListReq::InternalSwap(CalLaneStakeListReq* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(put_lane_line_param_, other->put_lane_line_param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalLaneStakeListReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalCrossSectionStakeArrayReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalCrossSectionStakeArrayReq_default_instance_._instance.get_mutable()->put_cross_section_param_ = const_cast< ::middle_layer_pb::PutCrossSectionParam*>(
      ::middle_layer_pb::PutCrossSectionParam::internal_default_instance());
  ::middle_layer_pb::_CalCrossSectionStakeArrayReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalCrossSectionStakeArrayReq::kIdFieldNumber;
const int CalCrossSectionStakeArrayReq::kTaskCodeFieldNumber;
const int CalCrossSectionStakeArrayReq::kPutCrossSectionParamFieldNumber;
const int CalCrossSectionStakeArrayReq::kPtFieldNumber;
const int CalCrossSectionStakeArrayReq::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalCrossSectionStakeArrayReq::CalCrossSectionStakeArrayReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalCrossSectionStakeArrayReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalCrossSectionStakeArrayReq)
}
CalCrossSectionStakeArrayReq::CalCrossSectionStakeArrayReq(const CalCrossSectionStakeArrayReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_put_cross_section_param()) {
    put_cross_section_param_ = new ::middle_layer_pb::PutCrossSectionParam(*from.put_cross_section_param_);
  } else {
    put_cross_section_param_ = NULL;
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalCrossSectionStakeArrayReq)
}

void CalCrossSectionStakeArrayReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&put_cross_section_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pt_) -
      reinterpret_cast<char*>(&put_cross_section_param_)) + sizeof(pt_));
}

CalCrossSectionStakeArrayReq::~CalCrossSectionStakeArrayReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalCrossSectionStakeArrayReq)
  SharedDtor();
}

void CalCrossSectionStakeArrayReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete put_cross_section_param_;
  if (this != internal_default_instance()) delete pt_;
}

void CalCrossSectionStakeArrayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalCrossSectionStakeArrayReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalCrossSectionStakeArrayReq& CalCrossSectionStakeArrayReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalCrossSectionStakeArrayReq();
  return *internal_default_instance();
}

CalCrossSectionStakeArrayReq* CalCrossSectionStakeArrayReq::New(::google::protobuf::Arena* arena) const {
  CalCrossSectionStakeArrayReq* n = new CalCrossSectionStakeArrayReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalCrossSectionStakeArrayReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(put_cross_section_param_ != NULL);
      put_cross_section_param_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalCrossSectionStakeArrayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalCrossSectionStakeArrayReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalCrossSectionStakeArrayReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_cross_section_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalCrossSectionStakeArrayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalCrossSectionStakeArrayReq)
  return false;
#undef DO_
}

void CalCrossSectionStakeArrayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalCrossSectionStakeArrayReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalCrossSectionStakeArrayReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->put_cross_section_param_, output);
  }

  // required .middle_layer_pb.PointLLH pt = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pt_, output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalCrossSectionStakeArrayReq)
}

::google::protobuf::uint8* CalCrossSectionStakeArrayReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalCrossSectionStakeArrayReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalCrossSectionStakeArrayReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->put_cross_section_param_, deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->pt_, deterministic, target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalCrossSectionStakeArrayReq)
  return target;
}

size_t CalCrossSectionStakeArrayReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_put_cross_section_param()) {
    // required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_cross_section_param_);
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  return total_size;
}
size_t CalCrossSectionStakeArrayReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.PutCrossSectionParam put_cross_section_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_cross_section_param_);

    // required .middle_layer_pb.PointLLH pt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalCrossSectionStakeArrayReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalCrossSectionStakeArrayReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalCrossSectionStakeArrayReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalCrossSectionStakeArrayReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalCrossSectionStakeArrayReq)
    MergeFrom(*source);
  }
}

void CalCrossSectionStakeArrayReq::MergeFrom(const CalCrossSectionStakeArrayReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_put_cross_section_param()->::middle_layer_pb::PutCrossSectionParam::MergeFrom(from.put_cross_section_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
  }
}

void CalCrossSectionStakeArrayReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalCrossSectionStakeArrayReq::CopyFrom(const CalCrossSectionStakeArrayReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalCrossSectionStakeArrayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalCrossSectionStakeArrayReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  if (has_put_cross_section_param()) {
    if (!this->put_cross_section_param_->IsInitialized()) return false;
  }
  return true;
}

void CalCrossSectionStakeArrayReq::Swap(CalCrossSectionStakeArrayReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalCrossSectionStakeArrayReq::InternalSwap(CalCrossSectionStakeArrayReq* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(put_cross_section_param_, other->put_cross_section_param_);
  swap(pt_, other->pt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalCrossSectionStakeArrayReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalCrossSectionStakeArrayRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalCrossSectionStakeArrayRes::kIdFieldNumber;
const int CalCrossSectionStakeArrayRes::kCodeFieldNumber;
const int CalCrossSectionStakeArrayRes::kStakeDtoTwoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalCrossSectionStakeArrayRes::CalCrossSectionStakeArrayRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalCrossSectionStakeArrayRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalCrossSectionStakeArrayRes)
}
CalCrossSectionStakeArrayRes::CalCrossSectionStakeArrayRes(const CalCrossSectionStakeArrayRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_two_list_(from.stake_dto_two_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalCrossSectionStakeArrayRes)
}

void CalCrossSectionStakeArrayRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalCrossSectionStakeArrayRes::~CalCrossSectionStakeArrayRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalCrossSectionStakeArrayRes)
  SharedDtor();
}

void CalCrossSectionStakeArrayRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalCrossSectionStakeArrayRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalCrossSectionStakeArrayRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalCrossSectionStakeArrayRes& CalCrossSectionStakeArrayRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalCrossSectionStakeArrayRes();
  return *internal_default_instance();
}

CalCrossSectionStakeArrayRes* CalCrossSectionStakeArrayRes::New(::google::protobuf::Arena* arena) const {
  CalCrossSectionStakeArrayRes* n = new CalCrossSectionStakeArrayRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalCrossSectionStakeArrayRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_two_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalCrossSectionStakeArrayRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalCrossSectionStakeArrayRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_two_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalCrossSectionStakeArrayRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalCrossSectionStakeArrayRes)
  return false;
#undef DO_
}

void CalCrossSectionStakeArrayRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalCrossSectionStakeArrayRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_two_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_two_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalCrossSectionStakeArrayRes)
}

::google::protobuf::uint8* CalCrossSectionStakeArrayRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalCrossSectionStakeArrayRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_two_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_two_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalCrossSectionStakeArrayRes)
  return target;
}

size_t CalCrossSectionStakeArrayRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_two_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_two_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalCrossSectionStakeArrayRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalCrossSectionStakeArrayRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalCrossSectionStakeArrayRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalCrossSectionStakeArrayRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalCrossSectionStakeArrayRes)
    MergeFrom(*source);
  }
}

void CalCrossSectionStakeArrayRes::MergeFrom(const CalCrossSectionStakeArrayRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_two_list_.MergeFrom(from.stake_dto_two_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalCrossSectionStakeArrayRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalCrossSectionStakeArrayRes::CopyFrom(const CalCrossSectionStakeArrayRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalCrossSectionStakeArrayRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalCrossSectionStakeArrayRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_two_list())) return false;
  return true;
}

void CalCrossSectionStakeArrayRes::Swap(CalCrossSectionStakeArrayRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalCrossSectionStakeArrayRes::InternalSwap(CalCrossSectionStakeArrayRes* other) {
  using std::swap;
  stake_dto_two_list_.InternalSwap(&other->stake_dto_two_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalCrossSectionStakeArrayRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalStandardSquareParamReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalStandardSquareParamReq_default_instance_._instance.get_mutable()->draw_standard_square_param_ = const_cast< ::middle_layer_pb::DrawStandardSquareParam*>(
      ::middle_layer_pb::DrawStandardSquareParam::internal_default_instance());
  ::middle_layer_pb::_CalStandardSquareParamReq_default_instance_._instance.get_mutable()->stake_dto_ = const_cast< ::middle_layer_pb::StakeDto*>(
      ::middle_layer_pb::StakeDto::internal_default_instance());
  ::middle_layer_pb::_CalStandardSquareParamReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalStandardSquareParamReq::kIdFieldNumber;
const int CalStandardSquareParamReq::kTaskCodeFieldNumber;
const int CalStandardSquareParamReq::kDrawStandardSquareParamFieldNumber;
const int CalStandardSquareParamReq::kStakeDtoFieldNumber;
const int CalStandardSquareParamReq::kPtFieldNumber;
const int CalStandardSquareParamReq::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalStandardSquareParamReq::CalStandardSquareParamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStandardSquareParamReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalStandardSquareParamReq)
}
CalStandardSquareParamReq::CalStandardSquareParamReq(const CalStandardSquareParamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_draw_standard_square_param()) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam(*from.draw_standard_square_param_);
  } else {
    draw_standard_square_param_ = NULL;
  }
  if (from.has_stake_dto()) {
    stake_dto_ = new ::middle_layer_pb::StakeDto(*from.stake_dto_);
  } else {
    stake_dto_ = NULL;
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  side_ = from.side_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalStandardSquareParamReq)
}

void CalStandardSquareParamReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&draw_standard_square_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&draw_standard_square_param_)) + sizeof(side_));
}

CalStandardSquareParamReq::~CalStandardSquareParamReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalStandardSquareParamReq)
  SharedDtor();
}

void CalStandardSquareParamReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete draw_standard_square_param_;
  if (this != internal_default_instance()) delete stake_dto_;
  if (this != internal_default_instance()) delete pt_;
}

void CalStandardSquareParamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalStandardSquareParamReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalStandardSquareParamReq& CalStandardSquareParamReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStandardSquareParamReq();
  return *internal_default_instance();
}

CalStandardSquareParamReq* CalStandardSquareParamReq::New(::google::protobuf::Arena* arena) const {
  CalStandardSquareParamReq* n = new CalStandardSquareParamReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalStandardSquareParamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalStandardSquareParamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(draw_standard_square_param_ != NULL);
      draw_standard_square_param_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(stake_dto_ != NULL);
      stake_dto_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  side_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalStandardSquareParamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalStandardSquareParamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalStandardSquareParamReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalStandardSquareParamReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_standard_square_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.StakeDto stake_dto = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stake_dto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalStandardSquareParamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalStandardSquareParamReq)
  return false;
#undef DO_
}

void CalStandardSquareParamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalStandardSquareParamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStandardSquareParamReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStandardSquareParamReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->draw_standard_square_param_, output);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->stake_dto_, output);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pt_, output);
  }

  // required int32 side = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->side(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalStandardSquareParamReq)
}

::google::protobuf::uint8* CalStandardSquareParamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalStandardSquareParamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStandardSquareParamReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStandardSquareParamReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->draw_standard_square_param_, deterministic, target);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->stake_dto_, deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->pt_, deterministic, target);
  }

  // required int32 side = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->side(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalStandardSquareParamReq)
  return target;
}

size_t CalStandardSquareParamReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalStandardSquareParamReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_draw_standard_square_param()) {
    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);
  }

  if (has_stake_dto()) {
    // required .middle_layer_pb.StakeDto stake_dto = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  if (has_side()) {
    // required int32 side = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  return total_size;
}
size_t CalStandardSquareParamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalStandardSquareParamReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);

    // required .middle_layer_pb.StakeDto stake_dto = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);

    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

    // required int32 side = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalStandardSquareParamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalStandardSquareParamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalStandardSquareParamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalStandardSquareParamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalStandardSquareParamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalStandardSquareParamReq)
    MergeFrom(*source);
  }
}

void CalStandardSquareParamReq::MergeFrom(const CalStandardSquareParamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalStandardSquareParamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_draw_standard_square_param()->::middle_layer_pb::DrawStandardSquareParam::MergeFrom(from.draw_standard_square_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_stake_dto()->::middle_layer_pb::StakeDto::MergeFrom(from.stake_dto());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
    if (cached_has_bits & 0x00000020u) {
      side_ = from.side_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalStandardSquareParamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalStandardSquareParamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalStandardSquareParamReq::CopyFrom(const CalStandardSquareParamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalStandardSquareParamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalStandardSquareParamReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_draw_standard_square_param()) {
    if (!this->draw_standard_square_param_->IsInitialized()) return false;
  }
  if (has_stake_dto()) {
    if (!this->stake_dto_->IsInitialized()) return false;
  }
  return true;
}

void CalStandardSquareParamReq::Swap(CalStandardSquareParamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalStandardSquareParamReq::InternalSwap(CalStandardSquareParamReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(draw_standard_square_param_, other->draw_standard_square_param_);
  swap(stake_dto_, other->stake_dto_);
  swap(pt_, other->pt_);
  swap(side_, other->side_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalStandardSquareParamReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalStandardSquareParamRes::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalStandardSquareParamRes_default_instance_._instance.get_mutable()->draw_standard_square_param_ = const_cast< ::middle_layer_pb::DrawStandardSquareParam*>(
      ::middle_layer_pb::DrawStandardSquareParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalStandardSquareParamRes::kIdFieldNumber;
const int CalStandardSquareParamRes::kCodeFieldNumber;
const int CalStandardSquareParamRes::kDrawStandardSquareParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalStandardSquareParamRes::CalStandardSquareParamRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStandardSquareParamRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalStandardSquareParamRes)
}
CalStandardSquareParamRes::CalStandardSquareParamRes(const CalStandardSquareParamRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_draw_standard_square_param()) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam(*from.draw_standard_square_param_);
  } else {
    draw_standard_square_param_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalStandardSquareParamRes)
}

void CalStandardSquareParamRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&draw_standard_square_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&draw_standard_square_param_)) + sizeof(code_));
}

CalStandardSquareParamRes::~CalStandardSquareParamRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalStandardSquareParamRes)
  SharedDtor();
}

void CalStandardSquareParamRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete draw_standard_square_param_;
}

void CalStandardSquareParamRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalStandardSquareParamRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalStandardSquareParamRes& CalStandardSquareParamRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStandardSquareParamRes();
  return *internal_default_instance();
}

CalStandardSquareParamRes* CalStandardSquareParamRes::New(::google::protobuf::Arena* arena) const {
  CalStandardSquareParamRes* n = new CalStandardSquareParamRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalStandardSquareParamRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalStandardSquareParamRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(draw_standard_square_param_ != NULL);
      draw_standard_square_param_->Clear();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalStandardSquareParamRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalStandardSquareParamRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalStandardSquareParamRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_standard_square_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalStandardSquareParamRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalStandardSquareParamRes)
  return false;
#undef DO_
}

void CalStandardSquareParamRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalStandardSquareParamRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStandardSquareParamRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->draw_standard_square_param_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalStandardSquareParamRes)
}

::google::protobuf::uint8* CalStandardSquareParamRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalStandardSquareParamRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStandardSquareParamRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->draw_standard_square_param_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalStandardSquareParamRes)
  return target;
}

size_t CalStandardSquareParamRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalStandardSquareParamRes)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_draw_standard_square_param()) {
    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);
  }

  return total_size;
}
size_t CalStandardSquareParamRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalStandardSquareParamRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalStandardSquareParamRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalStandardSquareParamRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalStandardSquareParamRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalStandardSquareParamRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalStandardSquareParamRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalStandardSquareParamRes)
    MergeFrom(*source);
  }
}

void CalStandardSquareParamRes::MergeFrom(const CalStandardSquareParamRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalStandardSquareParamRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_draw_standard_square_param()->::middle_layer_pb::DrawStandardSquareParam::MergeFrom(from.draw_standard_square_param());
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalStandardSquareParamRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalStandardSquareParamRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalStandardSquareParamRes::CopyFrom(const CalStandardSquareParamRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalStandardSquareParamRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalStandardSquareParamRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_draw_standard_square_param()) {
    if (!this->draw_standard_square_param_->IsInitialized()) return false;
  }
  return true;
}

void CalStandardSquareParamRes::Swap(CalStandardSquareParamRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalStandardSquareParamRes::InternalSwap(CalStandardSquareParamRes* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(draw_standard_square_param_, other->draw_standard_square_param_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalStandardSquareParamRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSquareWidthStakeReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalSquareWidthStakeReq_default_instance_._instance.get_mutable()->draw_standard_square_param_ = const_cast< ::middle_layer_pb::DrawStandardSquareParam*>(
      ::middle_layer_pb::DrawStandardSquareParam::internal_default_instance());
  ::middle_layer_pb::_CalSquareWidthStakeReq_default_instance_._instance.get_mutable()->stake_dto_ = const_cast< ::middle_layer_pb::StakeDto*>(
      ::middle_layer_pb::StakeDto::internal_default_instance());
  ::middle_layer_pb::_CalSquareWidthStakeReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSquareWidthStakeReq::kIdFieldNumber;
const int CalSquareWidthStakeReq::kTaskCodeFieldNumber;
const int CalSquareWidthStakeReq::kDrawStandardSquareParamFieldNumber;
const int CalSquareWidthStakeReq::kStakeDtoFieldNumber;
const int CalSquareWidthStakeReq::kPtFieldNumber;
const int CalSquareWidthStakeReq::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSquareWidthStakeReq::CalSquareWidthStakeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareWidthStakeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSquareWidthStakeReq)
}
CalSquareWidthStakeReq::CalSquareWidthStakeReq(const CalSquareWidthStakeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_draw_standard_square_param()) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam(*from.draw_standard_square_param_);
  } else {
    draw_standard_square_param_ = NULL;
  }
  if (from.has_stake_dto()) {
    stake_dto_ = new ::middle_layer_pb::StakeDto(*from.stake_dto_);
  } else {
    stake_dto_ = NULL;
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  side_ = from.side_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSquareWidthStakeReq)
}

void CalSquareWidthStakeReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&draw_standard_square_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&draw_standard_square_param_)) + sizeof(side_));
}

CalSquareWidthStakeReq::~CalSquareWidthStakeReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSquareWidthStakeReq)
  SharedDtor();
}

void CalSquareWidthStakeReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete draw_standard_square_param_;
  if (this != internal_default_instance()) delete stake_dto_;
  if (this != internal_default_instance()) delete pt_;
}

void CalSquareWidthStakeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSquareWidthStakeReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSquareWidthStakeReq& CalSquareWidthStakeReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareWidthStakeReq();
  return *internal_default_instance();
}

CalSquareWidthStakeReq* CalSquareWidthStakeReq::New(::google::protobuf::Arena* arena) const {
  CalSquareWidthStakeReq* n = new CalSquareWidthStakeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSquareWidthStakeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSquareWidthStakeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(draw_standard_square_param_ != NULL);
      draw_standard_square_param_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(stake_dto_ != NULL);
      stake_dto_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  side_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSquareWidthStakeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSquareWidthStakeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSquareWidthStakeReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSquareWidthStakeReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_standard_square_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.StakeDto stake_dto = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stake_dto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 side = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSquareWidthStakeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSquareWidthStakeReq)
  return false;
#undef DO_
}

void CalSquareWidthStakeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSquareWidthStakeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareWidthStakeReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareWidthStakeReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->draw_standard_square_param_, output);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->stake_dto_, output);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pt_, output);
  }

  // required int32 side = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->side(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSquareWidthStakeReq)
}

::google::protobuf::uint8* CalSquareWidthStakeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSquareWidthStakeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareWidthStakeReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareWidthStakeReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->draw_standard_square_param_, deterministic, target);
  }

  // required .middle_layer_pb.StakeDto stake_dto = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->stake_dto_, deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->pt_, deterministic, target);
  }

  // required int32 side = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->side(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSquareWidthStakeReq)
  return target;
}

size_t CalSquareWidthStakeReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalSquareWidthStakeReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_draw_standard_square_param()) {
    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);
  }

  if (has_stake_dto()) {
    // required .middle_layer_pb.StakeDto stake_dto = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  if (has_side()) {
    // required int32 side = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  return total_size;
}
size_t CalSquareWidthStakeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSquareWidthStakeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);

    // required .middle_layer_pb.StakeDto stake_dto = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stake_dto_);

    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

    // required int32 side = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSquareWidthStakeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSquareWidthStakeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSquareWidthStakeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSquareWidthStakeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSquareWidthStakeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSquareWidthStakeReq)
    MergeFrom(*source);
  }
}

void CalSquareWidthStakeReq::MergeFrom(const CalSquareWidthStakeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSquareWidthStakeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_draw_standard_square_param()->::middle_layer_pb::DrawStandardSquareParam::MergeFrom(from.draw_standard_square_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_stake_dto()->::middle_layer_pb::StakeDto::MergeFrom(from.stake_dto());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
    if (cached_has_bits & 0x00000020u) {
      side_ = from.side_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSquareWidthStakeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSquareWidthStakeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSquareWidthStakeReq::CopyFrom(const CalSquareWidthStakeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSquareWidthStakeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSquareWidthStakeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_draw_standard_square_param()) {
    if (!this->draw_standard_square_param_->IsInitialized()) return false;
  }
  if (has_stake_dto()) {
    if (!this->stake_dto_->IsInitialized()) return false;
  }
  return true;
}

void CalSquareWidthStakeReq::Swap(CalSquareWidthStakeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSquareWidthStakeReq::InternalSwap(CalSquareWidthStakeReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(draw_standard_square_param_, other->draw_standard_square_param_);
  swap(stake_dto_, other->stake_dto_);
  swap(pt_, other->pt_);
  swap(side_, other->side_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSquareWidthStakeReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSquareWidthStakeRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSquareWidthStakeRes::kIdFieldNumber;
const int CalSquareWidthStakeRes::kCodeFieldNumber;
const int CalSquareWidthStakeRes::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSquareWidthStakeRes::CalSquareWidthStakeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareWidthStakeRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSquareWidthStakeRes)
}
CalSquareWidthStakeRes::CalSquareWidthStakeRes(const CalSquareWidthStakeRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSquareWidthStakeRes)
}

void CalSquareWidthStakeRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalSquareWidthStakeRes::~CalSquareWidthStakeRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSquareWidthStakeRes)
  SharedDtor();
}

void CalSquareWidthStakeRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalSquareWidthStakeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSquareWidthStakeRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSquareWidthStakeRes& CalSquareWidthStakeRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareWidthStakeRes();
  return *internal_default_instance();
}

CalSquareWidthStakeRes* CalSquareWidthStakeRes::New(::google::protobuf::Arena* arena) const {
  CalSquareWidthStakeRes* n = new CalSquareWidthStakeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSquareWidthStakeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSquareWidthStakeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSquareWidthStakeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSquareWidthStakeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSquareWidthStakeRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSquareWidthStakeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSquareWidthStakeRes)
  return false;
#undef DO_
}

void CalSquareWidthStakeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSquareWidthStakeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareWidthStakeRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSquareWidthStakeRes)
}

::google::protobuf::uint8* CalSquareWidthStakeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSquareWidthStakeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareWidthStakeRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSquareWidthStakeRes)
  return target;
}

size_t CalSquareWidthStakeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSquareWidthStakeRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSquareWidthStakeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSquareWidthStakeRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSquareWidthStakeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSquareWidthStakeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSquareWidthStakeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSquareWidthStakeRes)
    MergeFrom(*source);
  }
}

void CalSquareWidthStakeRes::MergeFrom(const CalSquareWidthStakeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSquareWidthStakeRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSquareWidthStakeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSquareWidthStakeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSquareWidthStakeRes::CopyFrom(const CalSquareWidthStakeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSquareWidthStakeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSquareWidthStakeRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  return true;
}

void CalSquareWidthStakeRes::Swap(CalSquareWidthStakeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSquareWidthStakeRes::InternalSwap(CalSquareWidthStakeRes* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSquareWidthStakeRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSquareStakeArrayReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalSquareStakeArrayReq_default_instance_._instance.get_mutable()->draw_standard_square_param_ = const_cast< ::middle_layer_pb::DrawStandardSquareParam*>(
      ::middle_layer_pb::DrawStandardSquareParam::internal_default_instance());
  ::middle_layer_pb::_CalSquareStakeArrayReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSquareStakeArrayReq::kIdFieldNumber;
const int CalSquareStakeArrayReq::kTaskCodeFieldNumber;
const int CalSquareStakeArrayReq::kDrawStandardSquareParamFieldNumber;
const int CalSquareStakeArrayReq::kStakeDtoListFieldNumber;
const int CalSquareStakeArrayReq::kPtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSquareStakeArrayReq::CalSquareStakeArrayReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareStakeArrayReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSquareStakeArrayReq)
}
CalSquareStakeArrayReq::CalSquareStakeArrayReq(const CalSquareStakeArrayReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_draw_standard_square_param()) {
    draw_standard_square_param_ = new ::middle_layer_pb::DrawStandardSquareParam(*from.draw_standard_square_param_);
  } else {
    draw_standard_square_param_ = NULL;
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSquareStakeArrayReq)
}

void CalSquareStakeArrayReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&draw_standard_square_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pt_) -
      reinterpret_cast<char*>(&draw_standard_square_param_)) + sizeof(pt_));
}

CalSquareStakeArrayReq::~CalSquareStakeArrayReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSquareStakeArrayReq)
  SharedDtor();
}

void CalSquareStakeArrayReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete draw_standard_square_param_;
  if (this != internal_default_instance()) delete pt_;
}

void CalSquareStakeArrayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSquareStakeArrayReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSquareStakeArrayReq& CalSquareStakeArrayReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareStakeArrayReq();
  return *internal_default_instance();
}

CalSquareStakeArrayReq* CalSquareStakeArrayReq::New(::google::protobuf::Arena* arena) const {
  CalSquareStakeArrayReq* n = new CalSquareStakeArrayReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSquareStakeArrayReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSquareStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(draw_standard_square_param_ != NULL);
      draw_standard_square_param_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSquareStakeArrayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSquareStakeArrayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSquareStakeArrayReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSquareStakeArrayReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_standard_square_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSquareStakeArrayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSquareStakeArrayReq)
  return false;
#undef DO_
}

void CalSquareStakeArrayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSquareStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareStakeArrayReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareStakeArrayReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->draw_standard_square_param_, output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stake_dto_list(static_cast<int>(i)), output);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pt_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSquareStakeArrayReq)
}

::google::protobuf::uint8* CalSquareStakeArrayReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSquareStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareStakeArrayReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareStakeArrayReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->draw_standard_square_param_, deterministic, target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->pt_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSquareStakeArrayReq)
  return target;
}

size_t CalSquareStakeArrayReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalSquareStakeArrayReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_draw_standard_square_param()) {
    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  return total_size;
}
size_t CalSquareStakeArrayReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSquareStakeArrayReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.DrawStandardSquareParam draw_standard_square_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_standard_square_param_);

    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSquareStakeArrayReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSquareStakeArrayReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSquareStakeArrayReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSquareStakeArrayReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSquareStakeArrayReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSquareStakeArrayReq)
    MergeFrom(*source);
  }
}

void CalSquareStakeArrayReq::MergeFrom(const CalSquareStakeArrayReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSquareStakeArrayReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_draw_standard_square_param()->::middle_layer_pb::DrawStandardSquareParam::MergeFrom(from.draw_standard_square_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
  }
}

void CalSquareStakeArrayReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSquareStakeArrayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSquareStakeArrayReq::CopyFrom(const CalSquareStakeArrayReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSquareStakeArrayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSquareStakeArrayReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  if (has_draw_standard_square_param()) {
    if (!this->draw_standard_square_param_->IsInitialized()) return false;
  }
  return true;
}

void CalSquareStakeArrayReq::Swap(CalSquareStakeArrayReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSquareStakeArrayReq::InternalSwap(CalSquareStakeArrayReq* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(draw_standard_square_param_, other->draw_standard_square_param_);
  swap(pt_, other->pt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSquareStakeArrayReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalSquareStakeArrayRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalSquareStakeArrayRes::kIdFieldNumber;
const int CalSquareStakeArrayRes::kCodeFieldNumber;
const int CalSquareStakeArrayRes::kStakeDtoTwoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalSquareStakeArrayRes::CalSquareStakeArrayRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareStakeArrayRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalSquareStakeArrayRes)
}
CalSquareStakeArrayRes::CalSquareStakeArrayRes(const CalSquareStakeArrayRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_two_list_(from.stake_dto_two_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalSquareStakeArrayRes)
}

void CalSquareStakeArrayRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalSquareStakeArrayRes::~CalSquareStakeArrayRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalSquareStakeArrayRes)
  SharedDtor();
}

void CalSquareStakeArrayRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalSquareStakeArrayRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalSquareStakeArrayRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalSquareStakeArrayRes& CalSquareStakeArrayRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalSquareStakeArrayRes();
  return *internal_default_instance();
}

CalSquareStakeArrayRes* CalSquareStakeArrayRes::New(::google::protobuf::Arena* arena) const {
  CalSquareStakeArrayRes* n = new CalSquareStakeArrayRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalSquareStakeArrayRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalSquareStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_two_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalSquareStakeArrayRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalSquareStakeArrayRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalSquareStakeArrayRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_two_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalSquareStakeArrayRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalSquareStakeArrayRes)
  return false;
#undef DO_
}

void CalSquareStakeArrayRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalSquareStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareStakeArrayRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_two_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stake_dto_two_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalSquareStakeArrayRes)
}

::google::protobuf::uint8* CalSquareStakeArrayRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalSquareStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalSquareStakeArrayRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_two_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stake_dto_two_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalSquareStakeArrayRes)
  return target;
}

size_t CalSquareStakeArrayRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalSquareStakeArrayRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_two_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_two_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalSquareStakeArrayRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalSquareStakeArrayRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalSquareStakeArrayRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalSquareStakeArrayRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalSquareStakeArrayRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalSquareStakeArrayRes)
    MergeFrom(*source);
  }
}

void CalSquareStakeArrayRes::MergeFrom(const CalSquareStakeArrayRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalSquareStakeArrayRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_two_list_.MergeFrom(from.stake_dto_two_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalSquareStakeArrayRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalSquareStakeArrayRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalSquareStakeArrayRes::CopyFrom(const CalSquareStakeArrayRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalSquareStakeArrayRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalSquareStakeArrayRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_two_list())) return false;
  return true;
}

void CalSquareStakeArrayRes::Swap(CalSquareStakeArrayRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalSquareStakeArrayRes::InternalSwap(CalSquareStakeArrayRes* other) {
  using std::swap;
  stake_dto_two_list_.InternalSwap(&other->stake_dto_two_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalSquareStakeArrayRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalLevellingStakeArrayReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalLevellingStakeArrayReq_default_instance_._instance.get_mutable()->put_levelling_param_ = const_cast< ::middle_layer_pb::PutLevellingParam*>(
      ::middle_layer_pb::PutLevellingParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalLevellingStakeArrayReq::kIdFieldNumber;
const int CalLevellingStakeArrayReq::kTaskCodeFieldNumber;
const int CalLevellingStakeArrayReq::kPutLevellingParamFieldNumber;
const int CalLevellingStakeArrayReq::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalLevellingStakeArrayReq::CalLevellingStakeArrayReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLevellingStakeArrayReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalLevellingStakeArrayReq)
}
CalLevellingStakeArrayReq::CalLevellingStakeArrayReq(const CalLevellingStakeArrayReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_put_levelling_param()) {
    put_levelling_param_ = new ::middle_layer_pb::PutLevellingParam(*from.put_levelling_param_);
  } else {
    put_levelling_param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalLevellingStakeArrayReq)
}

void CalLevellingStakeArrayReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  put_levelling_param_ = NULL;
}

CalLevellingStakeArrayReq::~CalLevellingStakeArrayReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalLevellingStakeArrayReq)
  SharedDtor();
}

void CalLevellingStakeArrayReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete put_levelling_param_;
}

void CalLevellingStakeArrayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalLevellingStakeArrayReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalLevellingStakeArrayReq& CalLevellingStakeArrayReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLevellingStakeArrayReq();
  return *internal_default_instance();
}

CalLevellingStakeArrayReq* CalLevellingStakeArrayReq::New(::google::protobuf::Arena* arena) const {
  CalLevellingStakeArrayReq* n = new CalLevellingStakeArrayReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalLevellingStakeArrayReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalLevellingStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(put_levelling_param_ != NULL);
      put_levelling_param_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalLevellingStakeArrayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalLevellingStakeArrayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalLevellingStakeArrayReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalLevellingStakeArrayReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_levelling_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalLevellingStakeArrayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalLevellingStakeArrayReq)
  return false;
#undef DO_
}

void CalLevellingStakeArrayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalLevellingStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLevellingStakeArrayReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLevellingStakeArrayReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->put_levelling_param_, output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalLevellingStakeArrayReq)
}

::google::protobuf::uint8* CalLevellingStakeArrayReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalLevellingStakeArrayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLevellingStakeArrayReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLevellingStakeArrayReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->put_levelling_param_, deterministic, target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalLevellingStakeArrayReq)
  return target;
}

size_t CalLevellingStakeArrayReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalLevellingStakeArrayReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_put_levelling_param()) {
    // required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_levelling_param_);
  }

  return total_size;
}
size_t CalLevellingStakeArrayReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalLevellingStakeArrayReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.PutLevellingParam put_levelling_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_levelling_param_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalLevellingStakeArrayReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalLevellingStakeArrayReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalLevellingStakeArrayReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalLevellingStakeArrayReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalLevellingStakeArrayReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalLevellingStakeArrayReq)
    MergeFrom(*source);
  }
}

void CalLevellingStakeArrayReq::MergeFrom(const CalLevellingStakeArrayReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalLevellingStakeArrayReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_put_levelling_param()->::middle_layer_pb::PutLevellingParam::MergeFrom(from.put_levelling_param());
    }
  }
}

void CalLevellingStakeArrayReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalLevellingStakeArrayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalLevellingStakeArrayReq::CopyFrom(const CalLevellingStakeArrayReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalLevellingStakeArrayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalLevellingStakeArrayReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  if (has_put_levelling_param()) {
    if (!this->put_levelling_param_->IsInitialized()) return false;
  }
  return true;
}

void CalLevellingStakeArrayReq::Swap(CalLevellingStakeArrayReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalLevellingStakeArrayReq::InternalSwap(CalLevellingStakeArrayReq* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(put_levelling_param_, other->put_levelling_param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalLevellingStakeArrayReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalLevellingStakeArrayRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalLevellingStakeArrayRes::kIdFieldNumber;
const int CalLevellingStakeArrayRes::kCodeFieldNumber;
const int CalLevellingStakeArrayRes::kStakeDtoTwoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalLevellingStakeArrayRes::CalLevellingStakeArrayRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLevellingStakeArrayRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalLevellingStakeArrayRes)
}
CalLevellingStakeArrayRes::CalLevellingStakeArrayRes(const CalLevellingStakeArrayRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_two_list_(from.stake_dto_two_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalLevellingStakeArrayRes)
}

void CalLevellingStakeArrayRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalLevellingStakeArrayRes::~CalLevellingStakeArrayRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalLevellingStakeArrayRes)
  SharedDtor();
}

void CalLevellingStakeArrayRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalLevellingStakeArrayRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalLevellingStakeArrayRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalLevellingStakeArrayRes& CalLevellingStakeArrayRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalLevellingStakeArrayRes();
  return *internal_default_instance();
}

CalLevellingStakeArrayRes* CalLevellingStakeArrayRes::New(::google::protobuf::Arena* arena) const {
  CalLevellingStakeArrayRes* n = new CalLevellingStakeArrayRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalLevellingStakeArrayRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalLevellingStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_two_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalLevellingStakeArrayRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalLevellingStakeArrayRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalLevellingStakeArrayRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_two_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalLevellingStakeArrayRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalLevellingStakeArrayRes)
  return false;
#undef DO_
}

void CalLevellingStakeArrayRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalLevellingStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLevellingStakeArrayRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_two_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_two_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalLevellingStakeArrayRes)
}

::google::protobuf::uint8* CalLevellingStakeArrayRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalLevellingStakeArrayRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalLevellingStakeArrayRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_two_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_two_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalLevellingStakeArrayRes)
  return target;
}

size_t CalLevellingStakeArrayRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalLevellingStakeArrayRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDtoList stake_dto_two_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_two_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_two_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalLevellingStakeArrayRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalLevellingStakeArrayRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalLevellingStakeArrayRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalLevellingStakeArrayRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalLevellingStakeArrayRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalLevellingStakeArrayRes)
    MergeFrom(*source);
  }
}

void CalLevellingStakeArrayRes::MergeFrom(const CalLevellingStakeArrayRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalLevellingStakeArrayRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_two_list_.MergeFrom(from.stake_dto_two_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalLevellingStakeArrayRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalLevellingStakeArrayRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalLevellingStakeArrayRes::CopyFrom(const CalLevellingStakeArrayRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalLevellingStakeArrayRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalLevellingStakeArrayRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_two_list())) return false;
  return true;
}

void CalLevellingStakeArrayRes::Swap(CalLevellingStakeArrayRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalLevellingStakeArrayRes::InternalSwap(CalLevellingStakeArrayRes* other) {
  using std::swap;
  stake_dto_two_list_.InternalSwap(&other->stake_dto_two_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalLevellingStakeArrayRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalStakesHelpReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CalStakesHelpReq_default_instance_._instance.get_mutable()->draw_stakes_help_param_ = const_cast< ::middle_layer_pb::DrawStakesHelpParam*>(
      ::middle_layer_pb::DrawStakesHelpParam::internal_default_instance());
  ::middle_layer_pb::_CalStakesHelpReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalStakesHelpReq::kIdFieldNumber;
const int CalStakesHelpReq::kTaskCodeFieldNumber;
const int CalStakesHelpReq::kDrawStakesHelpParamFieldNumber;
const int CalStakesHelpReq::kStakeDtoListFieldNumber;
const int CalStakesHelpReq::kPtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalStakesHelpReq::CalStakesHelpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStakesHelpReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalStakesHelpReq)
}
CalStakesHelpReq::CalStakesHelpReq(const CalStakesHelpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_code()) {
    task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
  }
  if (from.has_draw_stakes_help_param()) {
    draw_stakes_help_param_ = new ::middle_layer_pb::DrawStakesHelpParam(*from.draw_stakes_help_param_);
  } else {
    draw_stakes_help_param_ = NULL;
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalStakesHelpReq)
}

void CalStakesHelpReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&draw_stakes_help_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pt_) -
      reinterpret_cast<char*>(&draw_stakes_help_param_)) + sizeof(pt_));
}

CalStakesHelpReq::~CalStakesHelpReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalStakesHelpReq)
  SharedDtor();
}

void CalStakesHelpReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete draw_stakes_help_param_;
  if (this != internal_default_instance()) delete pt_;
}

void CalStakesHelpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalStakesHelpReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalStakesHelpReq& CalStakesHelpReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStakesHelpReq();
  return *internal_default_instance();
}

CalStakesHelpReq* CalStakesHelpReq::New(::google::protobuf::Arena* arena) const {
  CalStakesHelpReq* n = new CalStakesHelpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalStakesHelpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalStakesHelpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!task_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*task_code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(draw_stakes_help_param_ != NULL);
      draw_stakes_help_param_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalStakesHelpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalStakesHelpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalStakesHelpReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string task_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_code().data(), static_cast<int>(this->task_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalStakesHelpReq.task_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_draw_stakes_help_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalStakesHelpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalStakesHelpReq)
  return false;
#undef DO_
}

void CalStakesHelpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalStakesHelpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStakesHelpReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStakesHelpReq.task_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_code(), output);
  }

  // required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->draw_stakes_help_param_, output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stake_dto_list(static_cast<int>(i)), output);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pt_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalStakesHelpReq)
}

::google::protobuf::uint8* CalStakesHelpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalStakesHelpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStakesHelpReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string task_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_code().data(), static_cast<int>(this->task_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStakesHelpReq.task_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_code(), target);
  }

  // required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->draw_stakes_help_param_, deterministic, target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  // required .middle_layer_pb.PointLLH pt = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->pt_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalStakesHelpReq)
  return target;
}

size_t CalStakesHelpReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CalStakesHelpReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_task_code()) {
    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());
  }

  if (has_draw_stakes_help_param()) {
    // required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_stakes_help_param_);
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  return total_size;
}
size_t CalStakesHelpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalStakesHelpReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string task_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_code());

    // required .middle_layer_pb.DrawStakesHelpParam draw_stakes_help_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->draw_stakes_help_param_);

    // required .middle_layer_pb.PointLLH pt = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalStakesHelpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalStakesHelpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CalStakesHelpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalStakesHelpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalStakesHelpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalStakesHelpReq)
    MergeFrom(*source);
  }
}

void CalStakesHelpReq::MergeFrom(const CalStakesHelpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalStakesHelpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_task_code();
      task_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_code_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_draw_stakes_help_param()->::middle_layer_pb::DrawStakesHelpParam::MergeFrom(from.draw_stakes_help_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
  }
}

void CalStakesHelpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalStakesHelpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalStakesHelpReq::CopyFrom(const CalStakesHelpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalStakesHelpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalStakesHelpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  if (has_draw_stakes_help_param()) {
    if (!this->draw_stakes_help_param_->IsInitialized()) return false;
  }
  return true;
}

void CalStakesHelpReq::Swap(CalStakesHelpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalStakesHelpReq::InternalSwap(CalStakesHelpReq* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  task_code_.Swap(&other->task_code_);
  swap(draw_stakes_help_param_, other->draw_stakes_help_param_);
  swap(pt_, other->pt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalStakesHelpReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalStakesHelpRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalStakesHelpRes::kIdFieldNumber;
const int CalStakesHelpRes::kCodeFieldNumber;
const int CalStakesHelpRes::kStakeDtoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalStakesHelpRes::CalStakesHelpRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStakesHelpRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CalStakesHelpRes)
}
CalStakesHelpRes::CalStakesHelpRes(const CalStakesHelpRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stake_dto_list_(from.stake_dto_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CalStakesHelpRes)
}

void CalStakesHelpRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CalStakesHelpRes::~CalStakesHelpRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CalStakesHelpRes)
  SharedDtor();
}

void CalStakesHelpRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalStakesHelpRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalStakesHelpRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalStakesHelpRes& CalStakesHelpRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCalStakesHelpRes();
  return *internal_default_instance();
}

CalStakesHelpRes* CalStakesHelpRes::New(::google::protobuf::Arena* arena) const {
  CalStakesHelpRes* n = new CalStakesHelpRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalStakesHelpRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CalStakesHelpRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stake_dto_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalStakesHelpRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CalStakesHelpRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CalStakesHelpRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stake_dto_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CalStakesHelpRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CalStakesHelpRes)
  return false;
#undef DO_
}

void CalStakesHelpRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CalStakesHelpRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStakesHelpRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stake_dto_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CalStakesHelpRes)
}

::google::protobuf::uint8* CalStakesHelpRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CalStakesHelpRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CalStakesHelpRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stake_dto_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->stake_dto_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CalStakesHelpRes)
  return target;
}

size_t CalStakesHelpRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CalStakesHelpRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .middle_layer_pb.StakeDto stake_dto_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stake_dto_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stake_dto_list(static_cast<int>(i)));
    }
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalStakesHelpRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CalStakesHelpRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CalStakesHelpRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalStakesHelpRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CalStakesHelpRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CalStakesHelpRes)
    MergeFrom(*source);
  }
}

void CalStakesHelpRes::MergeFrom(const CalStakesHelpRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CalStakesHelpRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stake_dto_list_.MergeFrom(from.stake_dto_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalStakesHelpRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CalStakesHelpRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalStakesHelpRes::CopyFrom(const CalStakesHelpRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CalStakesHelpRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalStakesHelpRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stake_dto_list())) return false;
  return true;
}

void CalStakesHelpRes::Swap(CalStakesHelpRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalStakesHelpRes::InternalSwap(CalStakesHelpRes* other) {
  using std::swap;
  stake_dto_list_.InternalSwap(&other->stake_dto_list_);
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalStakesHelpRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotManualOperationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotManualOperationReq::kIdFieldNumber;
const int RobotManualOperationReq::kVerticalDirectionFieldNumber;
const int RobotManualOperationReq::kHorizontalDirectionFieldNumber;
const int RobotManualOperationReq::kVerticalValueFieldNumber;
const int RobotManualOperationReq::kHorizontalValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotManualOperationReq::RobotManualOperationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotManualOperationReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotManualOperationReq)
}
RobotManualOperationReq::RobotManualOperationReq(const RobotManualOperationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&vertical_value_, &from.vertical_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&horizontal_direction_) -
    reinterpret_cast<char*>(&vertical_value_)) + sizeof(horizontal_direction_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotManualOperationReq)
}

void RobotManualOperationReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vertical_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&horizontal_value_) -
      reinterpret_cast<char*>(&vertical_value_)) + sizeof(horizontal_value_));
  vertical_direction_ = 255;
  horizontal_direction_ = 255;
}

RobotManualOperationReq::~RobotManualOperationReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotManualOperationReq)
  SharedDtor();
}

void RobotManualOperationReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotManualOperationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotManualOperationReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotManualOperationReq& RobotManualOperationReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotManualOperationReq();
  return *internal_default_instance();
}

RobotManualOperationReq* RobotManualOperationReq::New(::google::protobuf::Arena* arena) const {
  RobotManualOperationReq* n = new RobotManualOperationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotManualOperationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotManualOperationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&vertical_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&horizontal_value_) -
        reinterpret_cast<char*>(&vertical_value_)) + sizeof(horizontal_value_));
    vertical_direction_ = 255;
    horizontal_direction_ = 255;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotManualOperationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotManualOperationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotManualOperationReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotManualOperationReq_enDirectionType_IsValid(value)) {
            set_vertical_direction(static_cast< ::middle_layer_pb::RobotManualOperationReq_enDirectionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotManualOperationReq_enDirectionType_IsValid(value)) {
            set_horizontal_direction(static_cast< ::middle_layer_pb::RobotManualOperationReq_enDirectionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double vertical_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_vertical_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vertical_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double horizontal_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_horizontal_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &horizontal_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotManualOperationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotManualOperationReq)
  return false;
#undef DO_
}

void RobotManualOperationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotManualOperationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotManualOperationReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->vertical_direction(), output);
  }

  // required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->horizontal_direction(), output);
  }

  // required double vertical_value = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vertical_value(), output);
  }

  // required double horizontal_value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->horizontal_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotManualOperationReq)
}

::google::protobuf::uint8* RobotManualOperationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotManualOperationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotManualOperationReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->vertical_direction(), target);
  }

  // required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->horizontal_direction(), target);
  }

  // required double vertical_value = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vertical_value(), target);
  }

  // required double horizontal_value = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->horizontal_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotManualOperationReq)
  return target;
}

size_t RobotManualOperationReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RobotManualOperationReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_vertical_value()) {
    // required double vertical_value = 4;
    total_size += 1 + 8;
  }

  if (has_horizontal_value()) {
    // required double horizontal_value = 5;
    total_size += 1 + 8;
  }

  if (has_vertical_direction()) {
    // required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vertical_direction());
  }

  if (has_horizontal_direction()) {
    // required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->horizontal_direction());
  }

  return total_size;
}
size_t RobotManualOperationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotManualOperationReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required double vertical_value = 4;
    total_size += 1 + 8;

    // required double horizontal_value = 5;
    total_size += 1 + 8;

    // required .middle_layer_pb.RobotManualOperationReq.enDirectionType vertical_direction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vertical_direction());

    // required .middle_layer_pb.RobotManualOperationReq.enDirectionType horizontal_direction = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->horizontal_direction());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotManualOperationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotManualOperationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotManualOperationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotManualOperationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotManualOperationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotManualOperationReq)
    MergeFrom(*source);
  }
}

void RobotManualOperationReq::MergeFrom(const RobotManualOperationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotManualOperationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      vertical_value_ = from.vertical_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      horizontal_value_ = from.horizontal_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      vertical_direction_ = from.vertical_direction_;
    }
    if (cached_has_bits & 0x00000010u) {
      horizontal_direction_ = from.horizontal_direction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotManualOperationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotManualOperationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotManualOperationReq::CopyFrom(const RobotManualOperationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotManualOperationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotManualOperationReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void RobotManualOperationReq::Swap(RobotManualOperationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotManualOperationReq::InternalSwap(RobotManualOperationReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(vertical_value_, other->vertical_value_);
  swap(horizontal_value_, other->horizontal_value_);
  swap(vertical_direction_, other->vertical_direction_);
  swap(horizontal_direction_, other->horizontal_direction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotManualOperationReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotManualOperationRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotManualOperationRes::kIdFieldNumber;
const int RobotManualOperationRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotManualOperationRes::RobotManualOperationRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotManualOperationRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotManualOperationRes)
}
RobotManualOperationRes::RobotManualOperationRes(const RobotManualOperationRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotManualOperationRes)
}

void RobotManualOperationRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

RobotManualOperationRes::~RobotManualOperationRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotManualOperationRes)
  SharedDtor();
}

void RobotManualOperationRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotManualOperationRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotManualOperationRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotManualOperationRes& RobotManualOperationRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotManualOperationRes();
  return *internal_default_instance();
}

RobotManualOperationRes* RobotManualOperationRes::New(::google::protobuf::Arena* arena) const {
  RobotManualOperationRes* n = new RobotManualOperationRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotManualOperationRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotManualOperationRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotManualOperationRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotManualOperationRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotManualOperationRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotManualOperationRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotManualOperationRes)
  return false;
#undef DO_
}

void RobotManualOperationRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotManualOperationRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotManualOperationRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotManualOperationRes)
}

::google::protobuf::uint8* RobotManualOperationRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotManualOperationRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotManualOperationRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotManualOperationRes)
  return target;
}

size_t RobotManualOperationRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotManualOperationRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotManualOperationRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotManualOperationRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotManualOperationRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotManualOperationRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotManualOperationRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotManualOperationRes)
    MergeFrom(*source);
  }
}

void RobotManualOperationRes::MergeFrom(const RobotManualOperationRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotManualOperationRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotManualOperationRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotManualOperationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotManualOperationRes::CopyFrom(const RobotManualOperationRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotManualOperationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotManualOperationRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RobotManualOperationRes::Swap(RobotManualOperationRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotManualOperationRes::InternalSwap(RobotManualOperationRes* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotManualOperationRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotAutopilotModeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotAutopilotModeReq::kPlaneCoordinatesParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotAutopilotModeReq::RobotAutopilotModeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotAutopilotModeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotAutopilotModeReq)
}
RobotAutopilotModeReq::RobotAutopilotModeReq(const RobotAutopilotModeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      plane_coordinates_params_(from.plane_coordinates_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotAutopilotModeReq)
}

void RobotAutopilotModeReq::SharedCtor() {
  _cached_size_ = 0;
}

RobotAutopilotModeReq::~RobotAutopilotModeReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotAutopilotModeReq)
  SharedDtor();
}

void RobotAutopilotModeReq::SharedDtor() {
}

void RobotAutopilotModeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotAutopilotModeReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotAutopilotModeReq& RobotAutopilotModeReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotAutopilotModeReq();
  return *internal_default_instance();
}

RobotAutopilotModeReq* RobotAutopilotModeReq::New(::google::protobuf::Arena* arena) const {
  RobotAutopilotModeReq* n = new RobotAutopilotModeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotAutopilotModeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotAutopilotModeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plane_coordinates_params_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotAutopilotModeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotAutopilotModeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .middle_layer_pb.PlaneCoordinatesParams plane_coordinates_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_plane_coordinates_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotAutopilotModeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotAutopilotModeReq)
  return false;
#undef DO_
}

void RobotAutopilotModeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotAutopilotModeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .middle_layer_pb.PlaneCoordinatesParams plane_coordinates_params = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plane_coordinates_params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->plane_coordinates_params(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotAutopilotModeReq)
}

::google::protobuf::uint8* RobotAutopilotModeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotAutopilotModeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .middle_layer_pb.PlaneCoordinatesParams plane_coordinates_params = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plane_coordinates_params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->plane_coordinates_params(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotAutopilotModeReq)
  return target;
}

size_t RobotAutopilotModeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotAutopilotModeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .middle_layer_pb.PlaneCoordinatesParams plane_coordinates_params = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->plane_coordinates_params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->plane_coordinates_params(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotAutopilotModeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotAutopilotModeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotAutopilotModeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotAutopilotModeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotAutopilotModeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotAutopilotModeReq)
    MergeFrom(*source);
  }
}

void RobotAutopilotModeReq::MergeFrom(const RobotAutopilotModeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotAutopilotModeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plane_coordinates_params_.MergeFrom(from.plane_coordinates_params_);
}

void RobotAutopilotModeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotAutopilotModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotAutopilotModeReq::CopyFrom(const RobotAutopilotModeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotAutopilotModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotAutopilotModeReq::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->plane_coordinates_params())) return false;
  return true;
}

void RobotAutopilotModeReq::Swap(RobotAutopilotModeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotAutopilotModeReq::InternalSwap(RobotAutopilotModeReq* other) {
  using std::swap;
  plane_coordinates_params_.InternalSwap(&other->plane_coordinates_params_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotAutopilotModeReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaneCoordinatesParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneCoordinatesParams::kXFieldNumber;
const int PlaneCoordinatesParams::kYFieldNumber;
const int PlaneCoordinatesParams::kZFieldNumber;
const int PlaneCoordinatesParams::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneCoordinatesParams::PlaneCoordinatesParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsPlaneCoordinatesParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.PlaneCoordinatesParams)
}
PlaneCoordinatesParams::PlaneCoordinatesParams(const PlaneCoordinatesParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.PlaneCoordinatesParams)
}

void PlaneCoordinatesParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&x_)) + sizeof(angle_));
}

PlaneCoordinatesParams::~PlaneCoordinatesParams() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.PlaneCoordinatesParams)
  SharedDtor();
}

void PlaneCoordinatesParams::SharedDtor() {
}

void PlaneCoordinatesParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaneCoordinatesParams::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaneCoordinatesParams& PlaneCoordinatesParams::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsPlaneCoordinatesParams();
  return *internal_default_instance();
}

PlaneCoordinatesParams* PlaneCoordinatesParams::New(::google::protobuf::Arena* arena) const {
  PlaneCoordinatesParams* n = new PlaneCoordinatesParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlaneCoordinatesParams::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.PlaneCoordinatesParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&angle_) -
        reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlaneCoordinatesParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.PlaneCoordinatesParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double Z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.PlaneCoordinatesParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.PlaneCoordinatesParams)
  return false;
#undef DO_
}

void PlaneCoordinatesParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.PlaneCoordinatesParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double Z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // required double angle = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.PlaneCoordinatesParams)
}

::google::protobuf::uint8* PlaneCoordinatesParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.PlaneCoordinatesParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double Z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // required double angle = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.PlaneCoordinatesParams)
  return target;
}

size_t PlaneCoordinatesParams::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.PlaneCoordinatesParams)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  if (has_angle()) {
    // required double angle = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t PlaneCoordinatesParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.PlaneCoordinatesParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

    // required double angle = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional double Z = 3;
  if (has_z()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaneCoordinatesParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.PlaneCoordinatesParams)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneCoordinatesParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaneCoordinatesParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.PlaneCoordinatesParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.PlaneCoordinatesParams)
    MergeFrom(*source);
  }
}

void PlaneCoordinatesParams::MergeFrom(const PlaneCoordinatesParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.PlaneCoordinatesParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      angle_ = from.angle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlaneCoordinatesParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.PlaneCoordinatesParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneCoordinatesParams::CopyFrom(const PlaneCoordinatesParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.PlaneCoordinatesParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneCoordinatesParams::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void PlaneCoordinatesParams::Swap(PlaneCoordinatesParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneCoordinatesParams::InternalSwap(PlaneCoordinatesParams* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(angle_, other->angle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaneCoordinatesParams::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotAutopilotModeRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotAutopilotModeRes::kIdFieldNumber;
const int RobotAutopilotModeRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotAutopilotModeRes::RobotAutopilotModeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotAutopilotModeRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotAutopilotModeRes)
}
RobotAutopilotModeRes::RobotAutopilotModeRes(const RobotAutopilotModeRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotAutopilotModeRes)
}

void RobotAutopilotModeRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

RobotAutopilotModeRes::~RobotAutopilotModeRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotAutopilotModeRes)
  SharedDtor();
}

void RobotAutopilotModeRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotAutopilotModeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotAutopilotModeRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotAutopilotModeRes& RobotAutopilotModeRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotAutopilotModeRes();
  return *internal_default_instance();
}

RobotAutopilotModeRes* RobotAutopilotModeRes::New(::google::protobuf::Arena* arena) const {
  RobotAutopilotModeRes* n = new RobotAutopilotModeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotAutopilotModeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotAutopilotModeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotAutopilotModeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotAutopilotModeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotAutopilotModeRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotAutopilotModeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotAutopilotModeRes)
  return false;
#undef DO_
}

void RobotAutopilotModeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotAutopilotModeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotAutopilotModeRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotAutopilotModeRes)
}

::google::protobuf::uint8* RobotAutopilotModeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotAutopilotModeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotAutopilotModeRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotAutopilotModeRes)
  return target;
}

size_t RobotAutopilotModeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotAutopilotModeRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotAutopilotModeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotAutopilotModeRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotAutopilotModeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotAutopilotModeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotAutopilotModeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotAutopilotModeRes)
    MergeFrom(*source);
  }
}

void RobotAutopilotModeRes::MergeFrom(const RobotAutopilotModeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotAutopilotModeRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotAutopilotModeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotAutopilotModeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotAutopilotModeRes::CopyFrom(const RobotAutopilotModeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotAutopilotModeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotAutopilotModeRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RobotAutopilotModeRes::Swap(RobotAutopilotModeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotAutopilotModeRes::InternalSwap(RobotAutopilotModeRes* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotAutopilotModeRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotDustingNotify::InitAsDefaultInstance() {
  ::middle_layer_pb::_RobotDustingNotify_default_instance_._instance.get_mutable()->silo_params_ = const_cast< ::middle_layer_pb::RobotSiloParams*>(
      ::middle_layer_pb::RobotSiloParams::internal_default_instance());
  ::middle_layer_pb::_RobotDustingNotify_default_instance_._instance.get_mutable()->dusting_slider_params_ = const_cast< ::middle_layer_pb::RobotDustingSliderParams*>(
      ::middle_layer_pb::RobotDustingSliderParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotDustingNotify::kIdFieldNumber;
const int RobotDustingNotify::kSiloParamsFieldNumber;
const int RobotDustingNotify::kDustingSliderParamsFieldNumber;
const int RobotDustingNotify::kDustingSwitchTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotDustingNotify::RobotDustingNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotDustingNotify)
}
RobotDustingNotify::RobotDustingNotify(const RobotDustingNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_silo_params()) {
    silo_params_ = new ::middle_layer_pb::RobotSiloParams(*from.silo_params_);
  } else {
    silo_params_ = NULL;
  }
  if (from.has_dusting_slider_params()) {
    dusting_slider_params_ = new ::middle_layer_pb::RobotDustingSliderParams(*from.dusting_slider_params_);
  } else {
    dusting_slider_params_ = NULL;
  }
  dusting_switch_type_ = from.dusting_switch_type_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotDustingNotify)
}

void RobotDustingNotify::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&silo_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dusting_switch_type_) -
      reinterpret_cast<char*>(&silo_params_)) + sizeof(dusting_switch_type_));
}

RobotDustingNotify::~RobotDustingNotify() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotDustingNotify)
  SharedDtor();
}

void RobotDustingNotify::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete silo_params_;
  if (this != internal_default_instance()) delete dusting_slider_params_;
}

void RobotDustingNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotDustingNotify::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotDustingNotify& RobotDustingNotify::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingNotify();
  return *internal_default_instance();
}

RobotDustingNotify* RobotDustingNotify::New(::google::protobuf::Arena* arena) const {
  RobotDustingNotify* n = new RobotDustingNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotDustingNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotDustingNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(silo_params_ != NULL);
      silo_params_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(dusting_slider_params_ != NULL);
      dusting_slider_params_->Clear();
    }
  }
  dusting_switch_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotDustingNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotDustingNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.RobotDustingNotify.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.RobotSiloParams silo_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_silo_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dusting_slider_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::RobotDustingNotify_DustingSwitchType_IsValid(value)) {
            set_dusting_switch_type(static_cast< ::middle_layer_pb::RobotDustingNotify_DustingSwitchType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotDustingNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotDustingNotify)
  return false;
#undef DO_
}

void RobotDustingNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotDustingNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotDustingNotify.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.RobotSiloParams silo_params = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->silo_params_, output);
  }

  // required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dusting_slider_params_, output);
  }

  // required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->dusting_switch_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotDustingNotify)
}

::google::protobuf::uint8* RobotDustingNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotDustingNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.RobotDustingNotify.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.RobotSiloParams silo_params = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->silo_params_, deterministic, target);
  }

  // required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->dusting_slider_params_, deterministic, target);
  }

  // required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->dusting_switch_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotDustingNotify)
  return target;
}

size_t RobotDustingNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RobotDustingNotify)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_dusting_slider_params()) {
    // required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dusting_slider_params_);
  }

  if (has_dusting_switch_type()) {
    // required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dusting_switch_type());
  }

  return total_size;
}
size_t RobotDustingNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotDustingNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.RobotDustingSliderParams dusting_slider_params = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dusting_slider_params_);

    // required .middle_layer_pb.RobotDustingNotify.DustingSwitchType dusting_switch_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dusting_switch_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .middle_layer_pb.RobotSiloParams silo_params = 2;
  if (has_silo_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->silo_params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotDustingNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotDustingNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotDustingNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotDustingNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotDustingNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotDustingNotify)
    MergeFrom(*source);
  }
}

void RobotDustingNotify::MergeFrom(const RobotDustingNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotDustingNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_silo_params()->::middle_layer_pb::RobotSiloParams::MergeFrom(from.silo_params());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_dusting_slider_params()->::middle_layer_pb::RobotDustingSliderParams::MergeFrom(from.dusting_slider_params());
    }
    if (cached_has_bits & 0x00000008u) {
      dusting_switch_type_ = from.dusting_switch_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotDustingNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotDustingNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotDustingNotify::CopyFrom(const RobotDustingNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotDustingNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotDustingNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  if (has_silo_params()) {
    if (!this->silo_params_->IsInitialized()) return false;
  }
  if (has_dusting_slider_params()) {
    if (!this->dusting_slider_params_->IsInitialized()) return false;
  }
  return true;
}

void RobotDustingNotify::Swap(RobotDustingNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotDustingNotify::InternalSwap(RobotDustingNotify* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(silo_params_, other->silo_params_);
  swap(dusting_slider_params_, other->dusting_slider_params_);
  swap(dusting_switch_type_, other->dusting_switch_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotDustingNotify::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotSiloParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotSiloParams::kPowderTotalFieldNumber;
const int RobotSiloParams::kPowderMarginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotSiloParams::RobotSiloParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotSiloParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotSiloParams)
}
RobotSiloParams::RobotSiloParams(const RobotSiloParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&powder_total_, &from.powder_total_,
    static_cast<size_t>(reinterpret_cast<char*>(&powder_margin_) -
    reinterpret_cast<char*>(&powder_total_)) + sizeof(powder_margin_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotSiloParams)
}

void RobotSiloParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&powder_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&powder_margin_) -
      reinterpret_cast<char*>(&powder_total_)) + sizeof(powder_margin_));
}

RobotSiloParams::~RobotSiloParams() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotSiloParams)
  SharedDtor();
}

void RobotSiloParams::SharedDtor() {
}

void RobotSiloParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotSiloParams::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotSiloParams& RobotSiloParams::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotSiloParams();
  return *internal_default_instance();
}

RobotSiloParams* RobotSiloParams::New(::google::protobuf::Arena* arena) const {
  RobotSiloParams* n = new RobotSiloParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotSiloParams::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotSiloParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&powder_total_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&powder_margin_) -
        reinterpret_cast<char*>(&powder_total_)) + sizeof(powder_margin_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotSiloParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotSiloParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double powder_total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_powder_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &powder_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double powder_margin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_powder_margin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &powder_margin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotSiloParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotSiloParams)
  return false;
#undef DO_
}

void RobotSiloParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotSiloParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double powder_total = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->powder_total(), output);
  }

  // required double powder_margin = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->powder_margin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotSiloParams)
}

::google::protobuf::uint8* RobotSiloParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotSiloParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double powder_total = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->powder_total(), target);
  }

  // required double powder_margin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->powder_margin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotSiloParams)
  return target;
}

size_t RobotSiloParams::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RobotSiloParams)
  size_t total_size = 0;

  if (has_powder_total()) {
    // required double powder_total = 1;
    total_size += 1 + 8;
  }

  if (has_powder_margin()) {
    // required double powder_margin = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t RobotSiloParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotSiloParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double powder_total = 1;
    total_size += 1 + 8;

    // required double powder_margin = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotSiloParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotSiloParams)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotSiloParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotSiloParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotSiloParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotSiloParams)
    MergeFrom(*source);
  }
}

void RobotSiloParams::MergeFrom(const RobotSiloParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotSiloParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      powder_total_ = from.powder_total_;
    }
    if (cached_has_bits & 0x00000002u) {
      powder_margin_ = from.powder_margin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotSiloParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotSiloParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotSiloParams::CopyFrom(const RobotSiloParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotSiloParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotSiloParams::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RobotSiloParams::Swap(RobotSiloParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotSiloParams::InternalSwap(RobotSiloParams* other) {
  using std::swap;
  swap(powder_total_, other->powder_total_);
  swap(powder_margin_, other->powder_margin_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotSiloParams::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotDustingSliderParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotDustingSliderParams::kOffsetXFieldNumber;
const int RobotDustingSliderParams::kOffsetYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotDustingSliderParams::RobotDustingSliderParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingSliderParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.RobotDustingSliderParams)
}
RobotDustingSliderParams::RobotDustingSliderParams(const RobotDustingSliderParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_x_, &from.offset_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_y_) -
    reinterpret_cast<char*>(&offset_x_)) + sizeof(offset_y_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.RobotDustingSliderParams)
}

void RobotDustingSliderParams::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&offset_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_y_) -
      reinterpret_cast<char*>(&offset_x_)) + sizeof(offset_y_));
}

RobotDustingSliderParams::~RobotDustingSliderParams() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.RobotDustingSliderParams)
  SharedDtor();
}

void RobotDustingSliderParams::SharedDtor() {
}

void RobotDustingSliderParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotDustingSliderParams::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotDustingSliderParams& RobotDustingSliderParams::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsRobotDustingSliderParams();
  return *internal_default_instance();
}

RobotDustingSliderParams* RobotDustingSliderParams::New(::google::protobuf::Arena* arena) const {
  RobotDustingSliderParams* n = new RobotDustingSliderParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotDustingSliderParams::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.RobotDustingSliderParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&offset_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_y_) -
        reinterpret_cast<char*>(&offset_x_)) + sizeof(offset_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotDustingSliderParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.RobotDustingSliderParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double offset_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_offset_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_offset_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.RobotDustingSliderParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.RobotDustingSliderParams)
  return false;
#undef DO_
}

void RobotDustingSliderParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.RobotDustingSliderParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double offset_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->offset_x(), output);
  }

  // required double offset_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->offset_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.RobotDustingSliderParams)
}

::google::protobuf::uint8* RobotDustingSliderParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.RobotDustingSliderParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double offset_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->offset_x(), target);
  }

  // required double offset_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->offset_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.RobotDustingSliderParams)
  return target;
}

size_t RobotDustingSliderParams::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.RobotDustingSliderParams)
  size_t total_size = 0;

  if (has_offset_x()) {
    // required double offset_x = 1;
    total_size += 1 + 8;
  }

  if (has_offset_y()) {
    // required double offset_y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t RobotDustingSliderParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.RobotDustingSliderParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double offset_x = 1;
    total_size += 1 + 8;

    // required double offset_y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotDustingSliderParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.RobotDustingSliderParams)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotDustingSliderParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotDustingSliderParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.RobotDustingSliderParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.RobotDustingSliderParams)
    MergeFrom(*source);
  }
}

void RobotDustingSliderParams::MergeFrom(const RobotDustingSliderParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.RobotDustingSliderParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      offset_x_ = from.offset_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      offset_y_ = from.offset_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotDustingSliderParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.RobotDustingSliderParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotDustingSliderParams::CopyFrom(const RobotDustingSliderParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.RobotDustingSliderParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotDustingSliderParams::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RobotDustingSliderParams::Swap(RobotDustingSliderParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotDustingSliderParams::InternalSwap(RobotDustingSliderParams* other) {
  using std::swap;
  swap(offset_x_, other->offset_x_);
  swap(offset_y_, other->offset_y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotDustingSliderParams::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FourParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FourParam::kDxFieldNumber;
const int FourParam::kDyFieldNumber;
const int FourParam::kScaleFieldNumber;
const int FourParam::kRotateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FourParam::FourParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsFourParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.FourParam)
}
FourParam::FourParam(const FourParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dx_, &from.dx_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotate_) -
    reinterpret_cast<char*>(&dx_)) + sizeof(rotate_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.FourParam)
}

void FourParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotate_) -
      reinterpret_cast<char*>(&dx_)) + sizeof(rotate_));
}

FourParam::~FourParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.FourParam)
  SharedDtor();
}

void FourParam::SharedDtor() {
}

void FourParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FourParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FourParam& FourParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsFourParam();
  return *internal_default_instance();
}

FourParam* FourParam::New(::google::protobuf::Arena* arena) const {
  FourParam* n = new FourParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FourParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.FourParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&dx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rotate_) -
        reinterpret_cast<char*>(&dx_)) + sizeof(rotate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FourParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.FourParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double dx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_dx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double dy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_dy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double rotate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_rotate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rotate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.FourParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.FourParam)
  return false;
#undef DO_
}

void FourParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.FourParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double dx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dx(), output);
  }

  // required double dy = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->dy(), output);
  }

  // required double scale = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  // required double rotate = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->rotate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.FourParam)
}

::google::protobuf::uint8* FourParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.FourParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double dx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dx(), target);
  }

  // required double dy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->dy(), target);
  }

  // required double scale = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  // required double rotate = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->rotate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.FourParam)
  return target;
}

size_t FourParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.FourParam)
  size_t total_size = 0;

  if (has_dx()) {
    // required double dx = 1;
    total_size += 1 + 8;
  }

  if (has_dy()) {
    // required double dy = 2;
    total_size += 1 + 8;
  }

  if (has_scale()) {
    // required double scale = 3;
    total_size += 1 + 8;
  }

  if (has_rotate()) {
    // required double rotate = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t FourParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.FourParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double dx = 1;
    total_size += 1 + 8;

    // required double dy = 2;
    total_size += 1 + 8;

    // required double scale = 3;
    total_size += 1 + 8;

    // required double rotate = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FourParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.FourParam)
  GOOGLE_DCHECK_NE(&from, this);
  const FourParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FourParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.FourParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.FourParam)
    MergeFrom(*source);
  }
}

void FourParam::MergeFrom(const FourParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.FourParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      dx_ = from.dx_;
    }
    if (cached_has_bits & 0x00000002u) {
      dy_ = from.dy_;
    }
    if (cached_has_bits & 0x00000004u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000008u) {
      rotate_ = from.rotate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FourParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.FourParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FourParam::CopyFrom(const FourParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.FourParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FourParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void FourParam::Swap(FourParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FourParam::InternalSwap(FourParam* other) {
  using std::swap;
  swap(dx_, other->dx_);
  swap(dy_, other->dy_);
  swap(scale_, other->scale_);
  swap(rotate_, other->rotate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FourParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProjectionParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectionParam::kProjectionNameFieldNumber;
const int ProjectionParam::kScaleFactorFieldNumber;
const int ProjectionParam::kCentralMeridianFieldNumber;
const int ProjectionParam::kLatitudeOfOriginFieldNumber;
const int ProjectionParam::kFalseEastingFieldNumber;
const int ProjectionParam::kFalseNorthingFieldNumber;
const int ProjectionParam::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectionParam::ProjectionParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsProjectionParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.ProjectionParam)
}
ProjectionParam::ProjectionParam(const ProjectionParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  projection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_projection_name()) {
    projection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projection_name_);
  }
  ::memcpy(&scale_factor_, &from.scale_factor_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&scale_factor_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.ProjectionParam)
}

void ProjectionParam::SharedCtor() {
  _cached_size_ = 0;
  projection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scale_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&scale_factor_)) + sizeof(height_));
}

ProjectionParam::~ProjectionParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.ProjectionParam)
  SharedDtor();
}

void ProjectionParam::SharedDtor() {
  projection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjectionParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectionParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectionParam& ProjectionParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsProjectionParam();
  return *internal_default_instance();
}

ProjectionParam* ProjectionParam::New(::google::protobuf::Arena* arena) const {
  ProjectionParam* n = new ProjectionParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectionParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.ProjectionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!projection_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*projection_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&scale_factor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&scale_factor_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProjectionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.ProjectionParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string projection_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_projection_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->projection_name().data(), static_cast<int>(this->projection_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.ProjectionParam.projection_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double scale_factor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_scale_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double central_meridian = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_central_meridian();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &central_meridian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude_of_origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_latitude_of_origin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_of_origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double false_easting = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_false_easting();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &false_easting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double false_northing = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_false_northing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &false_northing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.ProjectionParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.ProjectionParam)
  return false;
#undef DO_
}

void ProjectionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.ProjectionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string projection_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->projection_name().data(), static_cast<int>(this->projection_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.ProjectionParam.projection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->projection_name(), output);
  }

  // required double scale_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->scale_factor(), output);
  }

  // required double central_meridian = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->central_meridian(), output);
  }

  // required double latitude_of_origin = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->latitude_of_origin(), output);
  }

  // required double false_easting = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->false_easting(), output);
  }

  // required double false_northing = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->false_northing(), output);
  }

  // required double height = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.ProjectionParam)
}

::google::protobuf::uint8* ProjectionParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.ProjectionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string projection_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->projection_name().data(), static_cast<int>(this->projection_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.ProjectionParam.projection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->projection_name(), target);
  }

  // required double scale_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->scale_factor(), target);
  }

  // required double central_meridian = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->central_meridian(), target);
  }

  // required double latitude_of_origin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->latitude_of_origin(), target);
  }

  // required double false_easting = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->false_easting(), target);
  }

  // required double false_northing = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->false_northing(), target);
  }

  // required double height = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.ProjectionParam)
  return target;
}

size_t ProjectionParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.ProjectionParam)
  size_t total_size = 0;

  if (has_projection_name()) {
    // required string projection_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->projection_name());
  }

  if (has_scale_factor()) {
    // required double scale_factor = 2;
    total_size += 1 + 8;
  }

  if (has_central_meridian()) {
    // required double central_meridian = 3;
    total_size += 1 + 8;
  }

  if (has_latitude_of_origin()) {
    // required double latitude_of_origin = 4;
    total_size += 1 + 8;
  }

  if (has_false_easting()) {
    // required double false_easting = 5;
    total_size += 1 + 8;
  }

  if (has_false_northing()) {
    // required double false_northing = 6;
    total_size += 1 + 8;
  }

  if (has_height()) {
    // required double height = 7;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t ProjectionParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.ProjectionParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string projection_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->projection_name());

    // required double scale_factor = 2;
    total_size += 1 + 8;

    // required double central_meridian = 3;
    total_size += 1 + 8;

    // required double latitude_of_origin = 4;
    total_size += 1 + 8;

    // required double false_easting = 5;
    total_size += 1 + 8;

    // required double false_northing = 6;
    total_size += 1 + 8;

    // required double height = 7;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectionParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.ProjectionParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectionParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectionParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.ProjectionParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.ProjectionParam)
    MergeFrom(*source);
  }
}

void ProjectionParam::MergeFrom(const ProjectionParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.ProjectionParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_projection_name();
      projection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projection_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      scale_factor_ = from.scale_factor_;
    }
    if (cached_has_bits & 0x00000004u) {
      central_meridian_ = from.central_meridian_;
    }
    if (cached_has_bits & 0x00000008u) {
      latitude_of_origin_ = from.latitude_of_origin_;
    }
    if (cached_has_bits & 0x00000010u) {
      false_easting_ = from.false_easting_;
    }
    if (cached_has_bits & 0x00000020u) {
      false_northing_ = from.false_northing_;
    }
    if (cached_has_bits & 0x00000040u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProjectionParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.ProjectionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectionParam::CopyFrom(const ProjectionParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.ProjectionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectionParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void ProjectionParam::Swap(ProjectionParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectionParam::InternalSwap(ProjectionParam* other) {
  using std::swap;
  projection_name_.Swap(&other->projection_name_);
  swap(scale_factor_, other->scale_factor_);
  swap(central_meridian_, other->central_meridian_);
  swap(latitude_of_origin_, other->latitude_of_origin_);
  swap(false_easting_, other->false_easting_);
  swap(false_northing_, other->false_northing_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectionParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EllipsoidParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EllipsoidParam::kEllipsoidNameFieldNumber;
const int EllipsoidParam::kMacroAxisFieldNumber;
const int EllipsoidParam::kMinorAxisFieldNumber;
const int EllipsoidParam::kFlatteningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EllipsoidParam::EllipsoidParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsEllipsoidParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.EllipsoidParam)
}
EllipsoidParam::EllipsoidParam(const EllipsoidParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ellipsoid_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ellipsoid_name()) {
    ellipsoid_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ellipsoid_name_);
  }
  ::memcpy(&macro_axis_, &from.macro_axis_,
    static_cast<size_t>(reinterpret_cast<char*>(&flattening_) -
    reinterpret_cast<char*>(&macro_axis_)) + sizeof(flattening_));
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.EllipsoidParam)
}

void EllipsoidParam::SharedCtor() {
  _cached_size_ = 0;
  ellipsoid_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&macro_axis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flattening_) -
      reinterpret_cast<char*>(&macro_axis_)) + sizeof(flattening_));
}

EllipsoidParam::~EllipsoidParam() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.EllipsoidParam)
  SharedDtor();
}

void EllipsoidParam::SharedDtor() {
  ellipsoid_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EllipsoidParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EllipsoidParam::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EllipsoidParam& EllipsoidParam::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsEllipsoidParam();
  return *internal_default_instance();
}

EllipsoidParam* EllipsoidParam::New(::google::protobuf::Arena* arena) const {
  EllipsoidParam* n = new EllipsoidParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EllipsoidParam::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.EllipsoidParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!ellipsoid_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ellipsoid_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&macro_axis_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flattening_) -
        reinterpret_cast<char*>(&macro_axis_)) + sizeof(flattening_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EllipsoidParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.EllipsoidParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ellipsoid_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ellipsoid_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ellipsoid_name().data(), static_cast<int>(this->ellipsoid_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.EllipsoidParam.ellipsoid_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double macro_axis = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_macro_axis();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &macro_axis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double minor_axis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_minor_axis();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minor_axis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double flattening = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_flattening();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &flattening_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.EllipsoidParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.EllipsoidParam)
  return false;
#undef DO_
}

void EllipsoidParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.EllipsoidParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ellipsoid_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ellipsoid_name().data(), static_cast<int>(this->ellipsoid_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.EllipsoidParam.ellipsoid_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ellipsoid_name(), output);
  }

  // required double macro_axis = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->macro_axis(), output);
  }

  // required double minor_axis = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minor_axis(), output);
  }

  // required double flattening = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->flattening(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.EllipsoidParam)
}

::google::protobuf::uint8* EllipsoidParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.EllipsoidParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ellipsoid_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ellipsoid_name().data(), static_cast<int>(this->ellipsoid_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.EllipsoidParam.ellipsoid_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ellipsoid_name(), target);
  }

  // required double macro_axis = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->macro_axis(), target);
  }

  // required double minor_axis = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minor_axis(), target);
  }

  // required double flattening = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->flattening(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.EllipsoidParam)
  return target;
}

size_t EllipsoidParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.EllipsoidParam)
  size_t total_size = 0;

  if (has_ellipsoid_name()) {
    // required string ellipsoid_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ellipsoid_name());
  }

  if (has_macro_axis()) {
    // required double macro_axis = 2;
    total_size += 1 + 8;
  }

  if (has_minor_axis()) {
    // required double minor_axis = 3;
    total_size += 1 + 8;
  }

  if (has_flattening()) {
    // required double flattening = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t EllipsoidParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.EllipsoidParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string ellipsoid_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ellipsoid_name());

    // required double macro_axis = 2;
    total_size += 1 + 8;

    // required double minor_axis = 3;
    total_size += 1 + 8;

    // required double flattening = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EllipsoidParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.EllipsoidParam)
  GOOGLE_DCHECK_NE(&from, this);
  const EllipsoidParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EllipsoidParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.EllipsoidParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.EllipsoidParam)
    MergeFrom(*source);
  }
}

void EllipsoidParam::MergeFrom(const EllipsoidParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.EllipsoidParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ellipsoid_name();
      ellipsoid_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ellipsoid_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      macro_axis_ = from.macro_axis_;
    }
    if (cached_has_bits & 0x00000004u) {
      minor_axis_ = from.minor_axis_;
    }
    if (cached_has_bits & 0x00000008u) {
      flattening_ = from.flattening_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EllipsoidParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.EllipsoidParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EllipsoidParam::CopyFrom(const EllipsoidParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.EllipsoidParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EllipsoidParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void EllipsoidParam::Swap(EllipsoidParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EllipsoidParam::InternalSwap(EllipsoidParam* other) {
  using std::swap;
  ellipsoid_name_.Swap(&other->ellipsoid_name_);
  swap(macro_axis_, other->macro_axis_);
  swap(minor_axis_, other->minor_axis_);
  swap(flattening_, other->flattening_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EllipsoidParam::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoordinateCalibrationReq::InitAsDefaultInstance() {
  ::middle_layer_pb::_CoordinateCalibrationReq_default_instance_._instance.get_mutable()->pt_ = const_cast< ::middle_layer_pb::PointLLH*>(
      ::middle_layer_pb::PointLLH::internal_default_instance());
  ::middle_layer_pb::_CoordinateCalibrationReq_default_instance_._instance.get_mutable()->four_param_ = const_cast< ::middle_layer_pb::FourParam*>(
      ::middle_layer_pb::FourParam::internal_default_instance());
  ::middle_layer_pb::_CoordinateCalibrationReq_default_instance_._instance.get_mutable()->projection_param_ = const_cast< ::middle_layer_pb::ProjectionParam*>(
      ::middle_layer_pb::ProjectionParam::internal_default_instance());
  ::middle_layer_pb::_CoordinateCalibrationReq_default_instance_._instance.get_mutable()->ellipsoid_param_ = const_cast< ::middle_layer_pb::EllipsoidParam*>(
      ::middle_layer_pb::EllipsoidParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinateCalibrationReq::kIdFieldNumber;
const int CoordinateCalibrationReq::kPtFieldNumber;
const int CoordinateCalibrationReq::kFourParamFieldNumber;
const int CoordinateCalibrationReq::kElevationFittingFieldNumber;
const int CoordinateCalibrationReq::kProjectionParamFieldNumber;
const int CoordinateCalibrationReq::kEllipsoidParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinateCalibrationReq::CoordinateCalibrationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCoordinateCalibrationReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CoordinateCalibrationReq)
}
CoordinateCalibrationReq::CoordinateCalibrationReq(const CoordinateCalibrationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_pt()) {
    pt_ = new ::middle_layer_pb::PointLLH(*from.pt_);
  } else {
    pt_ = NULL;
  }
  if (from.has_four_param()) {
    four_param_ = new ::middle_layer_pb::FourParam(*from.four_param_);
  } else {
    four_param_ = NULL;
  }
  if (from.has_projection_param()) {
    projection_param_ = new ::middle_layer_pb::ProjectionParam(*from.projection_param_);
  } else {
    projection_param_ = NULL;
  }
  if (from.has_ellipsoid_param()) {
    ellipsoid_param_ = new ::middle_layer_pb::EllipsoidParam(*from.ellipsoid_param_);
  } else {
    ellipsoid_param_ = NULL;
  }
  elevation_fitting_ = from.elevation_fitting_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CoordinateCalibrationReq)
}

void CoordinateCalibrationReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elevation_fitting_) -
      reinterpret_cast<char*>(&pt_)) + sizeof(elevation_fitting_));
}

CoordinateCalibrationReq::~CoordinateCalibrationReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CoordinateCalibrationReq)
  SharedDtor();
}

void CoordinateCalibrationReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pt_;
  if (this != internal_default_instance()) delete four_param_;
  if (this != internal_default_instance()) delete projection_param_;
  if (this != internal_default_instance()) delete ellipsoid_param_;
}

void CoordinateCalibrationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoordinateCalibrationReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordinateCalibrationReq& CoordinateCalibrationReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCoordinateCalibrationReq();
  return *internal_default_instance();
}

CoordinateCalibrationReq* CoordinateCalibrationReq::New(::google::protobuf::Arena* arena) const {
  CoordinateCalibrationReq* n = new CoordinateCalibrationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CoordinateCalibrationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CoordinateCalibrationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pt_ != NULL);
      pt_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(four_param_ != NULL);
      four_param_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(projection_param_ != NULL);
      projection_param_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(ellipsoid_param_ != NULL);
      ellipsoid_param_->Clear();
    }
  }
  elevation_fitting_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CoordinateCalibrationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CoordinateCalibrationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CoordinateCalibrationReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.PointLLH pt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.FourParam four_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_four_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double elevation_fitting = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_elevation_fitting();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &elevation_fitting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.ProjectionParam projection_param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_projection_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ellipsoid_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CoordinateCalibrationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CoordinateCalibrationReq)
  return false;
#undef DO_
}

void CoordinateCalibrationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CoordinateCalibrationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CoordinateCalibrationReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .middle_layer_pb.PointLLH pt = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pt_, output);
  }

  // required .middle_layer_pb.FourParam four_param = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->four_param_, output);
  }

  // required double elevation_fitting = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->elevation_fitting(), output);
  }

  // required .middle_layer_pb.ProjectionParam projection_param = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->projection_param_, output);
  }

  // required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->ellipsoid_param_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CoordinateCalibrationReq)
}

::google::protobuf::uint8* CoordinateCalibrationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CoordinateCalibrationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CoordinateCalibrationReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .middle_layer_pb.PointLLH pt = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pt_, deterministic, target);
  }

  // required .middle_layer_pb.FourParam four_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->four_param_, deterministic, target);
  }

  // required double elevation_fitting = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->elevation_fitting(), target);
  }

  // required .middle_layer_pb.ProjectionParam projection_param = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->projection_param_, deterministic, target);
  }

  // required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->ellipsoid_param_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CoordinateCalibrationReq)
  return target;
}

size_t CoordinateCalibrationReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.CoordinateCalibrationReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_pt()) {
    // required .middle_layer_pb.PointLLH pt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);
  }

  if (has_four_param()) {
    // required .middle_layer_pb.FourParam four_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->four_param_);
  }

  if (has_projection_param()) {
    // required .middle_layer_pb.ProjectionParam projection_param = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->projection_param_);
  }

  if (has_ellipsoid_param()) {
    // required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ellipsoid_param_);
  }

  if (has_elevation_fitting()) {
    // required double elevation_fitting = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t CoordinateCalibrationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CoordinateCalibrationReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .middle_layer_pb.PointLLH pt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_);

    // required .middle_layer_pb.FourParam four_param = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->four_param_);

    // required .middle_layer_pb.ProjectionParam projection_param = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->projection_param_);

    // required .middle_layer_pb.EllipsoidParam ellipsoid_param = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ellipsoid_param_);

    // required double elevation_fitting = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoordinateCalibrationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CoordinateCalibrationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinateCalibrationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordinateCalibrationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CoordinateCalibrationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CoordinateCalibrationReq)
    MergeFrom(*source);
  }
}

void CoordinateCalibrationReq::MergeFrom(const CoordinateCalibrationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CoordinateCalibrationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pt()->::middle_layer_pb::PointLLH::MergeFrom(from.pt());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_four_param()->::middle_layer_pb::FourParam::MergeFrom(from.four_param());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_projection_param()->::middle_layer_pb::ProjectionParam::MergeFrom(from.projection_param());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_ellipsoid_param()->::middle_layer_pb::EllipsoidParam::MergeFrom(from.ellipsoid_param());
    }
    if (cached_has_bits & 0x00000020u) {
      elevation_fitting_ = from.elevation_fitting_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CoordinateCalibrationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CoordinateCalibrationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinateCalibrationReq::CopyFrom(const CoordinateCalibrationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CoordinateCalibrationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinateCalibrationReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_four_param()) {
    if (!this->four_param_->IsInitialized()) return false;
  }
  if (has_projection_param()) {
    if (!this->projection_param_->IsInitialized()) return false;
  }
  if (has_ellipsoid_param()) {
    if (!this->ellipsoid_param_->IsInitialized()) return false;
  }
  return true;
}

void CoordinateCalibrationReq::Swap(CoordinateCalibrationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinateCalibrationReq::InternalSwap(CoordinateCalibrationReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(pt_, other->pt_);
  swap(four_param_, other->four_param_);
  swap(projection_param_, other->projection_param_);
  swap(ellipsoid_param_, other->ellipsoid_param_);
  swap(elevation_fitting_, other->elevation_fitting_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CoordinateCalibrationReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoordinateCalibrationRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinateCalibrationRes::kIdFieldNumber;
const int CoordinateCalibrationRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinateCalibrationRes::CoordinateCalibrationRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsCoordinateCalibrationRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.CoordinateCalibrationRes)
}
CoordinateCalibrationRes::CoordinateCalibrationRes(const CoordinateCalibrationRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.CoordinateCalibrationRes)
}

void CoordinateCalibrationRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

CoordinateCalibrationRes::~CoordinateCalibrationRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.CoordinateCalibrationRes)
  SharedDtor();
}

void CoordinateCalibrationRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CoordinateCalibrationRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoordinateCalibrationRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordinateCalibrationRes& CoordinateCalibrationRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsCoordinateCalibrationRes();
  return *internal_default_instance();
}

CoordinateCalibrationRes* CoordinateCalibrationRes::New(::google::protobuf::Arena* arena) const {
  CoordinateCalibrationRes* n = new CoordinateCalibrationRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CoordinateCalibrationRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.CoordinateCalibrationRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CoordinateCalibrationRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.CoordinateCalibrationRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.CoordinateCalibrationRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.CoordinateCalibrationRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.CoordinateCalibrationRes)
  return false;
#undef DO_
}

void CoordinateCalibrationRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.CoordinateCalibrationRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CoordinateCalibrationRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.CoordinateCalibrationRes)
}

::google::protobuf::uint8* CoordinateCalibrationRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.CoordinateCalibrationRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.CoordinateCalibrationRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.CoordinateCalibrationRes)
  return target;
}

size_t CoordinateCalibrationRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.CoordinateCalibrationRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoordinateCalibrationRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.CoordinateCalibrationRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinateCalibrationRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordinateCalibrationRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.CoordinateCalibrationRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.CoordinateCalibrationRes)
    MergeFrom(*source);
  }
}

void CoordinateCalibrationRes::MergeFrom(const CoordinateCalibrationRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.CoordinateCalibrationRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CoordinateCalibrationRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.CoordinateCalibrationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinateCalibrationRes::CopyFrom(const CoordinateCalibrationRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.CoordinateCalibrationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinateCalibrationRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CoordinateCalibrationRes::Swap(CoordinateCalibrationRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinateCalibrationRes::InternalSwap(CoordinateCalibrationRes* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CoordinateCalibrationRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteWordReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteWordReq::kIdFieldNumber;
const int WriteWordReq::kWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteWordReq::WriteWordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsWriteWordReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.WriteWordReq)
}
WriteWordReq::WriteWordReq(const WriteWordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_word()) {
    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.WriteWordReq)
}

void WriteWordReq::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteWordReq::~WriteWordReq() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.WriteWordReq)
  SharedDtor();
}

void WriteWordReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteWordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteWordReq::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteWordReq& WriteWordReq::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsWriteWordReq();
  return *internal_default_instance();
}

WriteWordReq* WriteWordReq::New(::google::protobuf::Arena* arena) const {
  WriteWordReq* n = new WriteWordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteWordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.WriteWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!word_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*word_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WriteWordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.WriteWordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.WriteWordReq.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string word = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_word()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->word().data(), static_cast<int>(this->word().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.WriteWordReq.word");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.WriteWordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.WriteWordReq)
  return false;
#undef DO_
}

void WriteWordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.WriteWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WriteWordReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string word = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WriteWordReq.word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->word(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.WriteWordReq)
}

::google::protobuf::uint8* WriteWordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.WriteWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WriteWordReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string word = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WriteWordReq.word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->word(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.WriteWordReq)
  return target;
}

size_t WriteWordReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:middle_layer_pb.WriteWordReq)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_word()) {
    // required string word = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->word());
  }

  return total_size;
}
size_t WriteWordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.WriteWordReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string word = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->word());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteWordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.WriteWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteWordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteWordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.WriteWordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.WriteWordReq)
    MergeFrom(*source);
  }
}

void WriteWordReq::MergeFrom(const WriteWordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.WriteWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_word();
      word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
    }
  }
}

void WriteWordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.WriteWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteWordReq::CopyFrom(const WriteWordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.WriteWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteWordReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void WriteWordReq::Swap(WriteWordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteWordReq::InternalSwap(WriteWordReq* other) {
  using std::swap;
  id_.Swap(&other->id_);
  word_.Swap(&other->word_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteWordReq::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteWordRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteWordRes::kIdFieldNumber;
const int WriteWordRes::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteWordRes::WriteWordRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_middle_5flayer_2eproto::InitDefaultsWriteWordRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:middle_layer_pb.WriteWordRes)
}
WriteWordRes::WriteWordRes(const WriteWordRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:middle_layer_pb.WriteWordRes)
}

void WriteWordRes::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

WriteWordRes::~WriteWordRes() {
  // @@protoc_insertion_point(destructor:middle_layer_pb.WriteWordRes)
  SharedDtor();
}

void WriteWordRes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteWordRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteWordRes::descriptor() {
  ::protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteWordRes& WriteWordRes::default_instance() {
  ::protobuf_middle_5flayer_2eproto::InitDefaultsWriteWordRes();
  return *internal_default_instance();
}

WriteWordRes* WriteWordRes::New(::google::protobuf::Arena* arena) const {
  WriteWordRes* n = new WriteWordRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteWordRes::Clear() {
// @@protoc_insertion_point(message_clear_start:middle_layer_pb.WriteWordRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WriteWordRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:middle_layer_pb.WriteWordRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "middle_layer_pb.WriteWordRes.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .middle_layer_pb.ErrorCode code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::middle_layer_pb::ErrorCode_IsValid(value)) {
            set_code(static_cast< ::middle_layer_pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:middle_layer_pb.WriteWordRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:middle_layer_pb.WriteWordRes)
  return false;
#undef DO_
}

void WriteWordRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:middle_layer_pb.WriteWordRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WriteWordRes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:middle_layer_pb.WriteWordRes)
}

::google::protobuf::uint8* WriteWordRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:middle_layer_pb.WriteWordRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "middle_layer_pb.WriteWordRes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .middle_layer_pb.ErrorCode code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:middle_layer_pb.WriteWordRes)
  return target;
}

size_t WriteWordRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:middle_layer_pb.WriteWordRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // optional .middle_layer_pb.ErrorCode code = 2;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteWordRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:middle_layer_pb.WriteWordRes)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteWordRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteWordRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:middle_layer_pb.WriteWordRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:middle_layer_pb.WriteWordRes)
    MergeFrom(*source);
  }
}

void WriteWordRes::MergeFrom(const WriteWordRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:middle_layer_pb.WriteWordRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WriteWordRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:middle_layer_pb.WriteWordRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteWordRes::CopyFrom(const WriteWordRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:middle_layer_pb.WriteWordRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteWordRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void WriteWordRes::Swap(WriteWordRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteWordRes::InternalSwap(WriteWordRes* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteWordRes::GetMetadata() const {
  protobuf_middle_5flayer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_middle_5flayer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace middle_layer_pb

// @@protoc_insertion_point(global_scope)
