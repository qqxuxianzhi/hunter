// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: writing_process_info.proto

#ifndef PROTOBUF_writing_5fprocess_5finfo_2eproto__INCLUDED
#define PROTOBUF_writing_5fprocess_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_writing_5fprocess_5finfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsWritingProcessInfoImpl();
void InitDefaultsWritingProcessInfo();
void InitDefaultsWritingParamsImpl();
void InitDefaultsWritingParams();
void InitDefaultsWritingSysImpl();
void InitDefaultsWritingSys();
inline void InitDefaults() {
  InitDefaultsWritingProcessInfo();
  InitDefaultsWritingParams();
  InitDefaultsWritingSys();
}
}  // namespace protobuf_writing_5fprocess_5finfo_2eproto
namespace phoenix {
namespace msg {
namespace localization {
class WritingParams;
class WritingParamsDefaultTypeInternal;
extern WritingParamsDefaultTypeInternal _WritingParams_default_instance_;
class WritingProcessInfo;
class WritingProcessInfoDefaultTypeInternal;
extern WritingProcessInfoDefaultTypeInternal _WritingProcessInfo_default_instance_;
class WritingSys;
class WritingSysDefaultTypeInternal;
extern WritingSysDefaultTypeInternal _WritingSys_default_instance_;
}  // namespace localization
}  // namespace msg
}  // namespace phoenix
namespace phoenix {
namespace msg {
namespace localization {

// ===================================================================

class WritingProcessInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:phoenix.msg.localization.WritingProcessInfo) */ {
 public:
  WritingProcessInfo();
  virtual ~WritingProcessInfo();

  WritingProcessInfo(const WritingProcessInfo& from);

  inline WritingProcessInfo& operator=(const WritingProcessInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WritingProcessInfo(WritingProcessInfo&& from) noexcept
    : WritingProcessInfo() {
    *this = ::std::move(from);
  }

  inline WritingProcessInfo& operator=(WritingProcessInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WritingProcessInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WritingProcessInfo* internal_default_instance() {
    return reinterpret_cast<const WritingProcessInfo*>(
               &_WritingProcessInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(WritingProcessInfo* other);
  friend void swap(WritingProcessInfo& a, WritingProcessInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WritingProcessInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WritingProcessInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WritingProcessInfo& from);
  void MergeFrom(const WritingProcessInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WritingProcessInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string siteCode = 4;
  bool has_sitecode() const;
  void clear_sitecode();
  static const int kSiteCodeFieldNumber = 4;
  const ::std::string& sitecode() const;
  void set_sitecode(const ::std::string& value);
  #if LANG_CXX11
  void set_sitecode(::std::string&& value);
  #endif
  void set_sitecode(const char* value);
  void set_sitecode(const char* value, size_t size);
  ::std::string* mutable_sitecode();
  ::std::string* release_sitecode();
  void set_allocated_sitecode(::std::string* sitecode);

  // optional string method = 7;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 7;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional .phoenix.msg.localization.WritingSys sys = 5;
  bool has_sys() const;
  void clear_sys();
  static const int kSysFieldNumber = 5;
  const ::phoenix::msg::localization::WritingSys& sys() const;
  ::phoenix::msg::localization::WritingSys* release_sys();
  ::phoenix::msg::localization::WritingSys* mutable_sys();
  void set_allocated_sys(::phoenix::msg::localization::WritingSys* sys);

  // optional .phoenix.msg.localization.WritingParams params = 6;
  bool has_params() const;
  void clear_params();
  static const int kParamsFieldNumber = 6;
  const ::phoenix::msg::localization::WritingParams& params() const;
  ::phoenix::msg::localization::WritingParams* release_params();
  ::phoenix::msg::localization::WritingParams* mutable_params();
  void set_allocated_params(::phoenix::msg::localization::WritingParams* params);

  // required int64 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:phoenix.msg.localization.WritingProcessInfo)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_id();
  void clear_has_id();
  void set_has_version();
  void clear_has_version();
  void set_has_sitecode();
  void clear_has_sitecode();
  void set_has_sys();
  void clear_has_sys();
  void set_has_params();
  void clear_has_params();
  void set_has_method();
  void clear_has_method();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr sitecode_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::phoenix::msg::localization::WritingSys* sys_;
  ::phoenix::msg::localization::WritingParams* params_;
  ::google::protobuf::int64 time_;
  friend struct ::protobuf_writing_5fprocess_5finfo_2eproto::TableStruct;
  friend void ::protobuf_writing_5fprocess_5finfo_2eproto::InitDefaultsWritingProcessInfoImpl();
};
// -------------------------------------------------------------------

class WritingParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:phoenix.msg.localization.WritingParams) */ {
 public:
  WritingParams();
  virtual ~WritingParams();

  WritingParams(const WritingParams& from);

  inline WritingParams& operator=(const WritingParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WritingParams(WritingParams&& from) noexcept
    : WritingParams() {
    *this = ::std::move(from);
  }

  inline WritingParams& operator=(WritingParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WritingParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WritingParams* internal_default_instance() {
    return reinterpret_cast<const WritingParams*>(
               &_WritingParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(WritingParams* other);
  friend void swap(WritingParams& a, WritingParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WritingParams* New() const PROTOBUF_FINAL { return New(NULL); }

  WritingParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WritingParams& from);
  void MergeFrom(const WritingParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WritingParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double offset_x = 1 [default = 0];
  bool has_offset_x() const;
  void clear_offset_x();
  static const int kOffsetXFieldNumber = 1;
  double offset_x() const;
  void set_offset_x(double value);

  // optional double offset_y = 2 [default = 0];
  bool has_offset_y() const;
  void clear_offset_y();
  static const int kOffsetYFieldNumber = 2;
  double offset_y() const;
  void set_offset_y(double value);

  // optional int32 dusting_switch_type = 3 [default = 0];
  bool has_dusting_switch_type() const;
  void clear_dusting_switch_type();
  static const int kDustingSwitchTypeFieldNumber = 3;
  ::google::protobuf::int32 dusting_switch_type() const;
  void set_dusting_switch_type(::google::protobuf::int32 value);

  // optional int32 is_move = 4 [default = 0];
  bool has_is_move() const;
  void clear_is_move();
  static const int kIsMoveFieldNumber = 4;
  ::google::protobuf::int32 is_move() const;
  void set_is_move(::google::protobuf::int32 value);

  // optional int32 add_material_status = 5 [default = 0];
  bool has_add_material_status() const;
  void clear_add_material_status();
  static const int kAddMaterialStatusFieldNumber = 5;
  ::google::protobuf::int32 add_material_status() const;
  void set_add_material_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:phoenix.msg.localization.WritingParams)
 private:
  void set_has_offset_x();
  void clear_has_offset_x();
  void set_has_offset_y();
  void clear_has_offset_y();
  void set_has_dusting_switch_type();
  void clear_has_dusting_switch_type();
  void set_has_is_move();
  void clear_has_is_move();
  void set_has_add_material_status();
  void clear_has_add_material_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double offset_x_;
  double offset_y_;
  ::google::protobuf::int32 dusting_switch_type_;
  ::google::protobuf::int32 is_move_;
  ::google::protobuf::int32 add_material_status_;
  friend struct ::protobuf_writing_5fprocess_5finfo_2eproto::TableStruct;
  friend void ::protobuf_writing_5fprocess_5finfo_2eproto::InitDefaultsWritingParamsImpl();
};
// -------------------------------------------------------------------

class WritingSys : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:phoenix.msg.localization.WritingSys) */ {
 public:
  WritingSys();
  virtual ~WritingSys();

  WritingSys(const WritingSys& from);

  inline WritingSys& operator=(const WritingSys& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WritingSys(WritingSys&& from) noexcept
    : WritingSys() {
    *this = ::std::move(from);
  }

  inline WritingSys& operator=(WritingSys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WritingSys& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WritingSys* internal_default_instance() {
    return reinterpret_cast<const WritingSys*>(
               &_WritingSys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(WritingSys* other);
  friend void swap(WritingSys& a, WritingSys& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WritingSys* New() const PROTOBUF_FINAL { return New(NULL); }

  WritingSys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WritingSys& from);
  void MergeFrom(const WritingSys& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WritingSys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ack = 1 [default = 0];
  bool has_ack() const;
  void clear_ack();
  static const int kAckFieldNumber = 1;
  ::google::protobuf::int32 ack() const;
  void set_ack(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:phoenix.msg.localization.WritingSys)
 private:
  void set_has_ack();
  void clear_has_ack();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ack_;
  friend struct ::protobuf_writing_5fprocess_5finfo_2eproto::TableStruct;
  friend void ::protobuf_writing_5fprocess_5finfo_2eproto::InitDefaultsWritingSysImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WritingProcessInfo

// required int64 time = 1;
inline bool WritingProcessInfo::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WritingProcessInfo::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WritingProcessInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WritingProcessInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 WritingProcessInfo::time() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.time)
  return time_;
}
inline void WritingProcessInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingProcessInfo.time)
}

// optional string id = 2;
inline bool WritingProcessInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WritingProcessInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WritingProcessInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WritingProcessInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& WritingProcessInfo::id() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.id)
  return id_.GetNoArena();
}
inline void WritingProcessInfo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingProcessInfo.id)
}
#if LANG_CXX11
inline void WritingProcessInfo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoenix.msg.localization.WritingProcessInfo.id)
}
#endif
inline void WritingProcessInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoenix.msg.localization.WritingProcessInfo.id)
}
inline void WritingProcessInfo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoenix.msg.localization.WritingProcessInfo.id)
}
inline ::std::string* WritingProcessInfo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:phoenix.msg.localization.WritingProcessInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WritingProcessInfo::release_id() {
  // @@protoc_insertion_point(field_release:phoenix.msg.localization.WritingProcessInfo.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WritingProcessInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:phoenix.msg.localization.WritingProcessInfo.id)
}

// optional string version = 3;
inline bool WritingProcessInfo::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WritingProcessInfo::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WritingProcessInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WritingProcessInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& WritingProcessInfo::version() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.version)
  return version_.GetNoArena();
}
inline void WritingProcessInfo::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingProcessInfo.version)
}
#if LANG_CXX11
inline void WritingProcessInfo::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoenix.msg.localization.WritingProcessInfo.version)
}
#endif
inline void WritingProcessInfo::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoenix.msg.localization.WritingProcessInfo.version)
}
inline void WritingProcessInfo::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoenix.msg.localization.WritingProcessInfo.version)
}
inline ::std::string* WritingProcessInfo::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:phoenix.msg.localization.WritingProcessInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WritingProcessInfo::release_version() {
  // @@protoc_insertion_point(field_release:phoenix.msg.localization.WritingProcessInfo.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WritingProcessInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:phoenix.msg.localization.WritingProcessInfo.version)
}

// optional string siteCode = 4;
inline bool WritingProcessInfo::has_sitecode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WritingProcessInfo::set_has_sitecode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WritingProcessInfo::clear_has_sitecode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WritingProcessInfo::clear_sitecode() {
  sitecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sitecode();
}
inline const ::std::string& WritingProcessInfo::sitecode() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.siteCode)
  return sitecode_.GetNoArena();
}
inline void WritingProcessInfo::set_sitecode(const ::std::string& value) {
  set_has_sitecode();
  sitecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingProcessInfo.siteCode)
}
#if LANG_CXX11
inline void WritingProcessInfo::set_sitecode(::std::string&& value) {
  set_has_sitecode();
  sitecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoenix.msg.localization.WritingProcessInfo.siteCode)
}
#endif
inline void WritingProcessInfo::set_sitecode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sitecode();
  sitecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoenix.msg.localization.WritingProcessInfo.siteCode)
}
inline void WritingProcessInfo::set_sitecode(const char* value, size_t size) {
  set_has_sitecode();
  sitecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoenix.msg.localization.WritingProcessInfo.siteCode)
}
inline ::std::string* WritingProcessInfo::mutable_sitecode() {
  set_has_sitecode();
  // @@protoc_insertion_point(field_mutable:phoenix.msg.localization.WritingProcessInfo.siteCode)
  return sitecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WritingProcessInfo::release_sitecode() {
  // @@protoc_insertion_point(field_release:phoenix.msg.localization.WritingProcessInfo.siteCode)
  clear_has_sitecode();
  return sitecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WritingProcessInfo::set_allocated_sitecode(::std::string* sitecode) {
  if (sitecode != NULL) {
    set_has_sitecode();
  } else {
    clear_has_sitecode();
  }
  sitecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sitecode);
  // @@protoc_insertion_point(field_set_allocated:phoenix.msg.localization.WritingProcessInfo.siteCode)
}

// optional .phoenix.msg.localization.WritingSys sys = 5;
inline bool WritingProcessInfo::has_sys() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WritingProcessInfo::set_has_sys() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WritingProcessInfo::clear_has_sys() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WritingProcessInfo::clear_sys() {
  if (sys_ != NULL) sys_->Clear();
  clear_has_sys();
}
inline const ::phoenix::msg::localization::WritingSys& WritingProcessInfo::sys() const {
  const ::phoenix::msg::localization::WritingSys* p = sys_;
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.sys)
  return p != NULL ? *p : *reinterpret_cast<const ::phoenix::msg::localization::WritingSys*>(
      &::phoenix::msg::localization::_WritingSys_default_instance_);
}
inline ::phoenix::msg::localization::WritingSys* WritingProcessInfo::release_sys() {
  // @@protoc_insertion_point(field_release:phoenix.msg.localization.WritingProcessInfo.sys)
  clear_has_sys();
  ::phoenix::msg::localization::WritingSys* temp = sys_;
  sys_ = NULL;
  return temp;
}
inline ::phoenix::msg::localization::WritingSys* WritingProcessInfo::mutable_sys() {
  set_has_sys();
  if (sys_ == NULL) {
    sys_ = new ::phoenix::msg::localization::WritingSys;
  }
  // @@protoc_insertion_point(field_mutable:phoenix.msg.localization.WritingProcessInfo.sys)
  return sys_;
}
inline void WritingProcessInfo::set_allocated_sys(::phoenix::msg::localization::WritingSys* sys) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sys_;
  }
  if (sys) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sys = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sys, submessage_arena);
    }
    set_has_sys();
  } else {
    clear_has_sys();
  }
  sys_ = sys;
  // @@protoc_insertion_point(field_set_allocated:phoenix.msg.localization.WritingProcessInfo.sys)
}

// optional .phoenix.msg.localization.WritingParams params = 6;
inline bool WritingProcessInfo::has_params() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WritingProcessInfo::set_has_params() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WritingProcessInfo::clear_has_params() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WritingProcessInfo::clear_params() {
  if (params_ != NULL) params_->Clear();
  clear_has_params();
}
inline const ::phoenix::msg::localization::WritingParams& WritingProcessInfo::params() const {
  const ::phoenix::msg::localization::WritingParams* p = params_;
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.params)
  return p != NULL ? *p : *reinterpret_cast<const ::phoenix::msg::localization::WritingParams*>(
      &::phoenix::msg::localization::_WritingParams_default_instance_);
}
inline ::phoenix::msg::localization::WritingParams* WritingProcessInfo::release_params() {
  // @@protoc_insertion_point(field_release:phoenix.msg.localization.WritingProcessInfo.params)
  clear_has_params();
  ::phoenix::msg::localization::WritingParams* temp = params_;
  params_ = NULL;
  return temp;
}
inline ::phoenix::msg::localization::WritingParams* WritingProcessInfo::mutable_params() {
  set_has_params();
  if (params_ == NULL) {
    params_ = new ::phoenix::msg::localization::WritingParams;
  }
  // @@protoc_insertion_point(field_mutable:phoenix.msg.localization.WritingProcessInfo.params)
  return params_;
}
inline void WritingProcessInfo::set_allocated_params(::phoenix::msg::localization::WritingParams* params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete params_;
  }
  if (params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    set_has_params();
  } else {
    clear_has_params();
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:phoenix.msg.localization.WritingProcessInfo.params)
}

// optional string method = 7;
inline bool WritingProcessInfo::has_method() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WritingProcessInfo::set_has_method() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WritingProcessInfo::clear_has_method() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WritingProcessInfo::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& WritingProcessInfo::method() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingProcessInfo.method)
  return method_.GetNoArena();
}
inline void WritingProcessInfo::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingProcessInfo.method)
}
#if LANG_CXX11
inline void WritingProcessInfo::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phoenix.msg.localization.WritingProcessInfo.method)
}
#endif
inline void WritingProcessInfo::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phoenix.msg.localization.WritingProcessInfo.method)
}
inline void WritingProcessInfo::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phoenix.msg.localization.WritingProcessInfo.method)
}
inline ::std::string* WritingProcessInfo::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:phoenix.msg.localization.WritingProcessInfo.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WritingProcessInfo::release_method() {
  // @@protoc_insertion_point(field_release:phoenix.msg.localization.WritingProcessInfo.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WritingProcessInfo::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:phoenix.msg.localization.WritingProcessInfo.method)
}

// -------------------------------------------------------------------

// WritingParams

// optional double offset_x = 1 [default = 0];
inline bool WritingParams::has_offset_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WritingParams::set_has_offset_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WritingParams::clear_has_offset_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WritingParams::clear_offset_x() {
  offset_x_ = 0;
  clear_has_offset_x();
}
inline double WritingParams::offset_x() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingParams.offset_x)
  return offset_x_;
}
inline void WritingParams::set_offset_x(double value) {
  set_has_offset_x();
  offset_x_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingParams.offset_x)
}

// optional double offset_y = 2 [default = 0];
inline bool WritingParams::has_offset_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WritingParams::set_has_offset_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WritingParams::clear_has_offset_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WritingParams::clear_offset_y() {
  offset_y_ = 0;
  clear_has_offset_y();
}
inline double WritingParams::offset_y() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingParams.offset_y)
  return offset_y_;
}
inline void WritingParams::set_offset_y(double value) {
  set_has_offset_y();
  offset_y_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingParams.offset_y)
}

// optional int32 dusting_switch_type = 3 [default = 0];
inline bool WritingParams::has_dusting_switch_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WritingParams::set_has_dusting_switch_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WritingParams::clear_has_dusting_switch_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WritingParams::clear_dusting_switch_type() {
  dusting_switch_type_ = 0;
  clear_has_dusting_switch_type();
}
inline ::google::protobuf::int32 WritingParams::dusting_switch_type() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingParams.dusting_switch_type)
  return dusting_switch_type_;
}
inline void WritingParams::set_dusting_switch_type(::google::protobuf::int32 value) {
  set_has_dusting_switch_type();
  dusting_switch_type_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingParams.dusting_switch_type)
}

// optional int32 is_move = 4 [default = 0];
inline bool WritingParams::has_is_move() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WritingParams::set_has_is_move() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WritingParams::clear_has_is_move() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WritingParams::clear_is_move() {
  is_move_ = 0;
  clear_has_is_move();
}
inline ::google::protobuf::int32 WritingParams::is_move() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingParams.is_move)
  return is_move_;
}
inline void WritingParams::set_is_move(::google::protobuf::int32 value) {
  set_has_is_move();
  is_move_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingParams.is_move)
}

// optional int32 add_material_status = 5 [default = 0];
inline bool WritingParams::has_add_material_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WritingParams::set_has_add_material_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WritingParams::clear_has_add_material_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WritingParams::clear_add_material_status() {
  add_material_status_ = 0;
  clear_has_add_material_status();
}
inline ::google::protobuf::int32 WritingParams::add_material_status() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingParams.add_material_status)
  return add_material_status_;
}
inline void WritingParams::set_add_material_status(::google::protobuf::int32 value) {
  set_has_add_material_status();
  add_material_status_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingParams.add_material_status)
}

// -------------------------------------------------------------------

// WritingSys

// optional int32 ack = 1 [default = 0];
inline bool WritingSys::has_ack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WritingSys::set_has_ack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WritingSys::clear_has_ack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WritingSys::clear_ack() {
  ack_ = 0;
  clear_has_ack();
}
inline ::google::protobuf::int32 WritingSys::ack() const {
  // @@protoc_insertion_point(field_get:phoenix.msg.localization.WritingSys.ack)
  return ack_;
}
inline void WritingSys::set_ack(::google::protobuf::int32 value) {
  set_has_ack();
  ack_ = value;
  // @@protoc_insertion_point(field_set:phoenix.msg.localization.WritingSys.ack)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace localization
}  // namespace msg
}  // namespace phoenix

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_writing_5fprocess_5finfo_2eproto__INCLUDED
